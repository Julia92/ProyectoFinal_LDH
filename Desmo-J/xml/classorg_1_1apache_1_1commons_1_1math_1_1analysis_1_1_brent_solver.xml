<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_brent_solver" kind="class" prot="public">
    <compoundname>org::apache::commons::math::analysis::BrentSolver</compoundname>
    <basecompoundref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl" prot="public" virt="non-virtual">org.apache.commons.math.analysis.UnivariateRealSolverImpl</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_brent_solver_1a10beac86e884840cfb3ac98a1aef86e8" prot="private" static="yes" mutable="no">
        <type>final long</type>
        <definition>final long org.apache.commons.math.analysis.BrentSolver.serialVersionUID</definition>
        <argsstring></argsstring>
        <name>serialVersionUID</name>
        <initializer>= -2136672307739067002L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializable version identifier </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/BrentSolver.java" line="34" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/BrentSolver.java" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_brent_solver_1a425ca598e5a3cede1bdd83e9e20a3902" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.math.analysis.BrentSolver.BrentSolver</definition>
        <argsstring>(UnivariateRealFunction f)</argsstring>
        <name>BrentSolver</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function" kindref="compound">UnivariateRealFunction</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a solver for the given function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>function to solve. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/BrentSolver.java" line="41" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/BrentSolver.java" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_brent_solver_1a8495af9a0e30abcfa192217fa06b2291" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.analysis.BrentSolver.solve</definition>
        <argsstring>(double min, double max, double initial)</argsstring>
        <name>solve</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_1a189bfcdd56fd85fab42826f427978824">solve</reimplements>
        <param>
          <type>double</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max</declname>
        </param>
        <param>
          <type>double</type>
          <declname>initial</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_max_iterations_exceeded_exception" kindref="compound">MaxIterationsExceededException</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find a zero in the given interval with an initial guess. </para><para>Throws <computeroutput>IllegalArgumentException</computeroutput> if the values of the function at the three points have the same sign (note that it is allowed to have endpoints with the same sign if the initial point has opposite sign function-wise).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>the lower bound for the interval. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>the upper bound for the interval. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initial</parametername>
</parameternamelist>
<parameterdescription>
<para>the start value to use (must be set to min if no initial point is known). </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value where the function is zero </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_max_iterations_exceeded_exception" kindref="compound">MaxIterationsExceededException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum iteration count is exceeded </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if an error occurs evaluating the function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if initial is not between min and max (even if it <emphasis>is</emphasis> a root) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/BrentSolver.java" line="64" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/BrentSolver.java" bodystart="64" bodyend="107"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a83d7a384f85cef6529e1d129bafa6905" compoundref="_univariate_real_solver_impl_8java" startline="43">org.apache.commons.math.analysis.UnivariateRealSolverImpl.functionValueAccuracy</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a5360844fee369d6ab2740b2ff5f7bf5d" compoundref="_univariate_real_solver_impl_8java" startline="139" endline="143">org.apache.commons.math.analysis.UnivariateRealSolverImpl.setResult</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1aad730f2a8e813c4b034b7c99d86b0a4b" compoundref="_univariate_real_solver_impl_8java" startline="64">org.apache.commons.math.analysis.UnivariateRealSolverImpl.result</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_brent_solver_1aef9365626da8df9c96a59a0f2ffc77cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.analysis.BrentSolver.solve</definition>
        <argsstring>(double min, double max)</argsstring>
        <name>solve</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_1ab99bf462d38a302f82c358ac5222ee79">solve</reimplements>
        <param>
          <type>double</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_max_iterations_exceeded_exception" kindref="compound">MaxIterationsExceededException</ref>,          <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find a zero in the given interval. </para><para>Requires that the values of the function at the endpoints have opposite signs. An <computeroutput>IllegalArgumentException</computeroutput> is thrown if this is not the case.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>the lower bound for the interval. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>the upper bound for the interval. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value where the function is zero </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_max_iterations_exceeded_exception" kindref="compound">MaxIterationsExceededException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the maximum iteration count is exceeded </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if an error occurs evaluating the function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if min is not less than max or the signs of the values of the function at the endpoints are not opposites </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/BrentSolver.java" line="125" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/BrentSolver.java" bodystart="125" bodyend="145"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a52eeaedb3e735ba3b20984e1cc14d289" compoundref="_univariate_real_solver_impl_8java" startline="148" endline="150">org.apache.commons.math.analysis.UnivariateRealSolverImpl.clearResult</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a4ccf76055f7c6ed934f02be77c1e8ff7" compoundref="_univariate_real_solver_impl_8java" startline="294" endline="300">org.apache.commons.math.analysis.UnivariateRealSolverImpl.verifyInterval</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_brent_solver_1a8495af9a0e30abcfa192217fa06b2291" compoundref="_brent_solver_8java" startline="64" endline="107">org.apache.commons.math.analysis.BrentSolver.solve</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_brent_solver_1a258b3c5f3c7031c51b58c36e2432e082" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.analysis.BrentSolver.solve</definition>
        <argsstring>(double x0, double y0, double x1, double y1, double x2, double y2)</argsstring>
        <name>solve</name>
        <param>
          <type>double</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y2</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_max_iterations_exceeded_exception" kindref="compound">MaxIterationsExceededException</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find a zero starting search according to the three provided points. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x0</parametername>
</parameternamelist>
<parameterdescription>
<para>old approximation for the root </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y0</parametername>
</parameternamelist>
<parameterdescription>
<para>function value at the approximation for the root </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x1</parametername>
</parameternamelist>
<parameterdescription>
<para>last calculated approximation for the root </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y1</parametername>
</parameternamelist>
<parameterdescription>
<para>function value at the last calculated approximation for the root </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x2</parametername>
</parameternamelist>
<parameterdescription>
<para>bracket point (must be set to x0 if no bracket point is known, this will force starting with linear interpolation) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y2</parametername>
</parameternamelist>
<parameterdescription>
<para>function value at the bracket point. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value where the function is zero </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_max_iterations_exceeded_exception" kindref="compound">MaxIterationsExceededException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the maximum iteration count is exceeded </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if an error occurs evaluating the function </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/BrentSolver.java" line="163" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/BrentSolver.java" bodystart="163" bodyend="257"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Implements the <ulink url="http://mathworld.wolfram.com/BrentsMethod.html">Brent algorithm</ulink> for finding zeros of real univariate functions. </para><para>The function should be continuous but not necessarily smooth.</para><para><simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision:</title><para>617826 </para></simplesect>
<simplesect kind="rcs"><title>Date:</title><para>2008-02-02 09:39:18 -0700 (Sat, 02 Feb 2008) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="6354">
        <label>org.apache.commons.math.analysis.UnivariateRealSolver</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver"/>
      </node>
      <node id="6355">
        <label>Serializable</label>
      </node>
      <node id="6353">
        <label>org.apache.commons.math.analysis.UnivariateRealSolverImpl</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl"/>
        <childnode refid="6354" relation="public-inheritance">
        </childnode>
        <childnode refid="6355" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6352">
        <label>org.apache.commons.math.analysis.BrentSolver</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_brent_solver"/>
        <childnode refid="6353" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6358">
        <label>org.apache.commons.math.analysis.UnivariateRealSolver</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver"/>
      </node>
      <node id="6359">
        <label>Serializable</label>
      </node>
      <node id="6360">
        <label>org.apache.commons.math.analysis.UnivariateRealFunction</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function"/>
      </node>
      <node id="6357">
        <label>org.apache.commons.math.analysis.UnivariateRealSolverImpl</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl"/>
        <childnode refid="6358" relation="public-inheritance">
        </childnode>
        <childnode refid="6359" relation="public-inheritance">
        </childnode>
        <childnode refid="6360" relation="usage">
          <edgelabel>f</edgelabel>
        </childnode>
      </node>
      <node id="6356">
        <label>org.apache.commons.math.analysis.BrentSolver</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_brent_solver"/>
        <childnode refid="6357" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/BrentSolver.java" line="31" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/BrentSolver.java" bodystart="31" bodyend="258"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1aa22db2016a96b1e018da93a9a60303ca" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>absoluteAccuracy</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_brent_solver_1a425ca598e5a3cede1bdd83e9e20a3902" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>BrentSolver</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a52eeaedb3e735ba3b20984e1cc14d289" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>clearResult</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1afe44cfa470452beee8cbfd9e784b72da" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>defaultAbsoluteAccuracy</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a689455485034aa8a277401d6d3754deb" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>defaultFunctionValueAccuracy</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1ae09e2fbf5bc4d2aef5de5d7ed3c9b38d" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>defaultMaximalIterationCount</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a5974307ec462fa4bed797f8839dc9b1c" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>defaultRelativeAccuracy</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a30c75ff5f9f4b4ed740213a68b1fc389" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>f</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a83d7a384f85cef6529e1d129bafa6905" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>functionValueAccuracy</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1ab7160f01f4e289c63ea8ed336d22d92f" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>getAbsoluteAccuracy</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a2cd7d567af0152ab1f7d7fc79df105fd" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>getFunctionValueAccuracy</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a4b0bed3346321d89f9e1f3f12acfae21" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>getIterationCount</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1aae2f3b69f252c7f8dc20d3be6583df19" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>getMaximalIterationCount</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a7ab97ffc4072f6fec51ec62510f32f21" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>getRelativeAccuracy</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1af592bf5d46c771f952bbd5a3bd8a7096" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>getResult</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1ae287908a72bb992450cdd9b21c0364b1" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>isBracketing</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1adc96329982734b3ee86edbb22f181642" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>isSequence</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a496c4bafd7f52524efca5b32d5c4db8e" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>iterationCount</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a717aa802239ffbdb03bd0ef6e203e32f" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>maximalIterationCount</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a2785e7b972feb5321f802fec4ba80cff" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>relativeAccuracy</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a9a08069a98300d4cb5a549d46ba73ee7" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>resetAbsoluteAccuracy</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a4afdcbc3ca352fd4de1e9443ec12092c" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>resetFunctionValueAccuracy</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a841cae8d31be422dac3bff8d77f10c91" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>resetMaximalIterationCount</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1ada77f57a896e9ba71ec52c00d364f779" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>resetRelativeAccuracy</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1aad730f2a8e813c4b034b7c99d86b0a4b" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>result</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a71aa1f6d2822cca91184e4b6410e0c54" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>resultComputed</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_brent_solver_1a10beac86e884840cfb3ac98a1aef86e8" prot="private" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>serialVersionUID</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a569173ea19e51edfee05211f653b7664" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>setAbsoluteAccuracy</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a27d79e174e44bf45aed981e52862a391" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>setFunctionValueAccuracy</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a1fefae7c8ac7fcb72e8d571d99753d5f" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>setMaximalIterationCount</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a659faf6a2afeef2bbee31354ead52236" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>setRelativeAccuracy</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a5360844fee369d6ab2740b2ff5f7bf5d" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>setResult</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_brent_solver_1a8495af9a0e30abcfa192217fa06b2291" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>solve</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_brent_solver_1aef9365626da8df9c96a59a0f2ffc77cf" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>solve</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_brent_solver_1a258b3c5f3c7031c51b58c36e2432e082" prot="private" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>solve</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a05b6bae55cc144d07e5366695c49eb7d" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>UnivariateRealSolverImpl</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a44f1a77211c700a26f11b8ace667d319" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>verifyBracketing</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a4ccf76055f7c6ed934f02be77c1e8ff7" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>verifyInterval</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1aa59cb6094878d427b5375bb4938e0d47" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::BrentSolver</scope><name>verifySequence</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
