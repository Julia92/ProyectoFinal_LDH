.TH "org.apache.commons.math.analysis.UnivariateRealSolver" 3 "Wed Dec 4 2013" "Version 1.0" "Desmo-J" \" -*- nroff -*-
.ad l
.nh
.SH NAME
org.apache.commons.math.analysis.UnivariateRealSolver \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBorg\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolverImpl\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBsetMaximalIterationCount\fP (int count)"
.br
.ti -1c
.RI "int \fBgetMaximalIterationCount\fP ()"
.br
.ti -1c
.RI "void \fBresetMaximalIterationCount\fP ()"
.br
.ti -1c
.RI "void \fBsetAbsoluteAccuracy\fP (double accuracy)"
.br
.ti -1c
.RI "double \fBgetAbsoluteAccuracy\fP ()"
.br
.ti -1c
.RI "void \fBresetAbsoluteAccuracy\fP ()"
.br
.ti -1c
.RI "void \fBsetRelativeAccuracy\fP (double accuracy)"
.br
.ti -1c
.RI "double \fBgetRelativeAccuracy\fP ()"
.br
.ti -1c
.RI "void \fBresetRelativeAccuracy\fP ()"
.br
.ti -1c
.RI "void \fBsetFunctionValueAccuracy\fP (double accuracy)"
.br
.ti -1c
.RI "double \fBgetFunctionValueAccuracy\fP ()"
.br
.ti -1c
.RI "void \fBresetFunctionValueAccuracy\fP ()"
.br
.ti -1c
.RI "double \fBsolve\fP (double min, double max)  throws ConvergenceException,          FunctionEvaluationException"
.br
.ti -1c
.RI "double \fBsolve\fP (double min, double max, double startValue)  throws ConvergenceException, FunctionEvaluationException"
.br
.ti -1c
.RI "double \fBgetResult\fP ()"
.br
.ti -1c
.RI "int \fBgetIterationCount\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Interface for (univariate real) rootfinding algorithms\&. 
.PP
Implementations will search for only one zero in the given interval\&.
.PP
\fBVersion:\fP
.RS 4
.RE
.PP
\fBRevision:\fP
.RS 4
615734 
.RE
.PP
\fBDate:\fP
.RS 4
2008-01-27 23:10:03 -0700 (Sun, 27 Jan 2008) 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "double org\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolver\&.getAbsoluteAccuracy ()"
Get the actual absolute accuracy\&.
.PP
\fBReturns:\fP
.RS 4
the accuracy 
.RE
.PP

.PP
Implemented in \fBorg\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolverImpl\fP\&.
.SS "double org\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolver\&.getFunctionValueAccuracy ()"
Get the actual function value accuracy\&. 
.PP
\fBReturns:\fP
.RS 4
the accuracy 
.RE
.PP

.PP
Implemented in \fBorg\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolverImpl\fP\&.
.SS "int org\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolver\&.getIterationCount ()"
Get the number of iterations in the last run of the solver\&. 
.PP
This is mainly meant for testing purposes\&. It may occasionally help track down performance problems: if the iteration count is notoriously high, check whether the function is evaluated properly, and whether another solver is more amenable to the problem\&.
.PP
\fBReturns:\fP
.RS 4
the last iteration count\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIIllegalStateException\fP if there is no result available, either because no result was yet computed or the last attempt failed\&. 
.RE
.PP

.PP
Implemented in \fBorg\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolverImpl\fP\&.
.SS "int org\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolver\&.getMaximalIterationCount ()"
Get the upper limit for the number of iterations\&.
.PP
\fBReturns:\fP
.RS 4
the actual upper limit 
.RE
.PP

.PP
Implemented in \fBorg\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolverImpl\fP\&.
.SS "double org\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolver\&.getRelativeAccuracy ()"
Get the actual relative accuracy\&. 
.PP
\fBReturns:\fP
.RS 4
the accuracy 
.RE
.PP

.PP
Implemented in \fBorg\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolverImpl\fP\&.
.SS "double org\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolver\&.getResult ()"
Get the result of the last run of the solver\&.
.PP
\fBReturns:\fP
.RS 4
the last result\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIIllegalStateException\fP if there is no result available, either because no result was yet computed or the last attempt failed\&. 
.RE
.PP

.PP
Implemented in \fBorg\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolverImpl\fP\&.
.SS "void org\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolver\&.resetAbsoluteAccuracy ()"
Reset the absolute accuracy to the default\&. 
.PP
The default value is provided by the solver implementation\&.
.PP
Implemented in \fBorg\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolverImpl\fP\&.
.SS "void org\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolver\&.resetFunctionValueAccuracy ()"
Reset the actual function accuracy to the default\&. The default value is provided by the solver implementation\&. 
.PP
Implemented in \fBorg\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolverImpl\fP\&.
.SS "void org\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolver\&.resetMaximalIterationCount ()"
Reset the upper limit for the number of iterations to the default\&. 
.PP
The default value is supplied by the solver implementation\&.
.PP
\fBSee Also:\fP
.RS 4
\fBsetMaximalIterationCount(int)\fP 
.RE
.PP

.PP
Implemented in \fBorg\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolverImpl\fP\&.
.SS "void org\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolver\&.resetRelativeAccuracy ()"
Reset the relative accuracy to the default\&. The default value is provided by the solver implementation\&. 
.PP
Implemented in \fBorg\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolverImpl\fP\&.
.SS "void org\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolver\&.setAbsoluteAccuracy (doubleaccuracy)"
Set the absolute accuracy\&. 
.PP
The default is usually choosen so that roots in the interval -10\&.\&.-0\&.1 and +0\&.1\&.\&.+10 can be found with a reasonable accuracy\&. If the expected absolute value of your roots is of much smaller magnitude, set this to a smaller value\&.
.PP
Solvers are advised to do a plausibility check with the relative accuracy, but clients should not rely on this\&.
.PP
\fBParameters:\fP
.RS 4
\fIaccuracy\fP the accuracy\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIIllegalArgumentException\fP if the accuracy can't be achieved by the solver or is otherwise deemed unreasonable\&. 
.RE
.PP

.PP
Implemented in \fBorg\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolverImpl\fP\&.
.SS "void org\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolver\&.setFunctionValueAccuracy (doubleaccuracy)"
Set the function value accuracy\&. 
.PP
This is used to determine when an evaluated function value or some other value which is used as divisor is zero\&.
.PP
This is a safety guard and it shouldn't be necessary to change this in general\&.
.PP
\fBParameters:\fP
.RS 4
\fIaccuracy\fP the accuracy\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIIllegalArgumentException\fP if the accuracy can't be achieved by the solver or is otherwise deemed unreasonable\&. 
.RE
.PP

.PP
Implemented in \fBorg\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolverImpl\fP\&.
.SS "void org\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolver\&.setMaximalIterationCount (intcount)"
Set the upper limit for the number of iterations\&. 
.PP
Usually a high iteration count indicates convergence problems\&. However, the 'reasonable value' varies widely for different solvers\&. Users are advised to use the default value supplied by the solver\&.
.PP
A \fC\fBConvergenceException\fP\fP will be thrown if this number is exceeded\&.
.PP
\fBParameters:\fP
.RS 4
\fIcount\fP maximum number of iterations 
.RE
.PP

.PP
Implemented in \fBorg\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolverImpl\fP\&.
.SS "void org\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolver\&.setRelativeAccuracy (doubleaccuracy)"
Set the relative accuracy\&. 
.PP
This is used to stop iterations if the absolute accuracy can't be achieved due to large values or short mantissa length\&.
.PP
If this should be the primary criterion for convergence rather then a safety measure, set the absolute accuracy to a ridiculously small value, like 1E-1000\&.
.PP
\fBParameters:\fP
.RS 4
\fIaccuracy\fP the relative accuracy\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIIllegalArgumentException\fP if the accuracy can't be achieved by the solver or is otherwise deemed unreasonable\&. 
.RE
.PP

.PP
Implemented in \fBorg\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolverImpl\fP\&.
.SS "double org\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolver\&.solve (doublemin, doublemax) throws \fBConvergenceException\fP,          \fBFunctionEvaluationException\fP"
Solve for a zero root in the given interval\&. A solver may require that the interval brackets a single zero root\&.
.PP
\fBParameters:\fP
.RS 4
\fImin\fP the lower bound for the interval\&. 
.br
\fImax\fP the upper bound for the interval\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
a value where the function is zero 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBConvergenceException\fP\fP if the maximum iteration count is exceeded or the solver detects convergence problems otherwise\&. 
.br
\fI\fBFunctionEvaluationException\fP\fP if an error occurs evaluating the function 
.br
\fIIllegalArgumentException\fP if min > max or the endpoints do not satisfy the requirements specified by the solver 
.RE
.PP

.PP
Implemented in \fBorg\&.apache\&.commons\&.math\&.analysis\&.BrentSolver\fP, \fBorg\&.apache\&.commons\&.math\&.analysis\&.MullerSolver\fP, \fBorg\&.apache\&.commons\&.math\&.analysis\&.RiddersSolver\fP, \fBorg\&.apache\&.commons\&.math\&.analysis\&.SecantSolver\fP, \fBorg\&.apache\&.commons\&.math\&.analysis\&.BisectionSolver\fP, and \fBorg\&.apache\&.commons\&.math\&.analysis\&.NewtonSolver\fP\&.
.SS "double org\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolver\&.solve (doublemin, doublemax, doublestartValue) throws \fBConvergenceException\fP, \fBFunctionEvaluationException\fP"
Solve for a zero in the given interval, start at startValue\&. A solver may require that the interval brackets a single zero root\&.
.PP
\fBParameters:\fP
.RS 4
\fImin\fP the lower bound for the interval\&. 
.br
\fImax\fP the upper bound for the interval\&. 
.br
\fIstartValue\fP the start value to use 
.RE
.PP
\fBReturns:\fP
.RS 4
a value where the function is zero 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBConvergenceException\fP\fP if the maximum iteration count is exceeded or the solver detects convergence problems otherwise\&. 
.br
\fI\fBFunctionEvaluationException\fP\fP if an error occurs evaluating the function 
.br
\fIIllegalArgumentException\fP if min > max or the arguments do not satisfy the requirements specified by the solver 
.RE
.PP

.PP
Implemented in \fBorg\&.apache\&.commons\&.math\&.analysis\&.NewtonSolver\fP, \fBorg\&.apache\&.commons\&.math\&.analysis\&.SecantSolver\fP, \fBorg\&.apache\&.commons\&.math\&.analysis\&.MullerSolver\fP, \fBorg\&.apache\&.commons\&.math\&.analysis\&.BrentSolver\fP, \fBorg\&.apache\&.commons\&.math\&.analysis\&.RiddersSolver\fP, and \fBorg\&.apache\&.commons\&.math\&.analysis\&.BisectionSolver\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Desmo-J from the source code\&.
