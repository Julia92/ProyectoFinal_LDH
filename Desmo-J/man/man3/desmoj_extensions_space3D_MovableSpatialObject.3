.TH "desmoj.extensions.space3D.MovableSpatialObject" 3 "Wed Dec 4 2013" "Version 1.0" "Desmo-J" \" -*- nroff -*-
.ad l
.nh
.SH NAME
desmoj.extensions.space3D.MovableSpatialObject \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBdesmoj\&.extensions\&.space3D\&.SpatialObject\fP\&.
.PP
Inherited by \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "abstract void \fBattach\fP (\fBMovableSpatialObject\fP host)"
.br
.ti -1c
.RI "abstract void \fBcancelMovement\fP ()"
.br
.ti -1c
.RI "abstract void \fBcancelRotation\fP ()"
.br
.ti -1c
.RI "abstract void \fBdetach\fP ()"
.br
.ti -1c
.RI "abstract double \fBgetAcc\fP ()"
.br
.ti -1c
.RI "abstract \fBSpatialObject\fP \fBgetCurrentLocation\fP ()"
.br
.ti -1c
.RI "abstract \fBMovement\fP \fBgetCurrentMovement\fP ()"
.br
.ti -1c
.RI "abstract \fBRotation\fP \fBgetCurrentRotation\fP ()"
.br
.ti -1c
.RI "abstract double \fBgetCurrentSpeed\fP ()"
.br
.ti -1c
.RI "abstract double \fBgetDec\fP ()"
.br
.ti -1c
.RI "abstract double \fBgetMaxSpeed\fP ()"
.br
.ti -1c
.RI "abstract boolean \fBisAttached\fP ()"
.br
.ti -1c
.RI "abstract boolean \fBisFocusedOnTrack\fP ()"
.br
.ti -1c
.RI "abstract boolean \fBisMoving\fP ()"
.br
.ti -1c
.RI "abstract boolean \fBisRotating\fP ()"
.br
.ti -1c
.RI "abstract void \fBmove\fP (\fBSpatialObject\fP destination, String entryPointName, boolean focusOnTrack)"
.br
.ti -1c
.RI "abstract void \fBmove\fP (\fBSpatialObject\fP destination, String entryPointName, \fBTimeSpan\fP duration, boolean focusOnTrack)"
.br
.ti -1c
.RI "abstract void \fBmove\fP (\fBSpatialObject\fP destination, String entryPointName, \fBTimeSpan\fP duration, double maxSpeed, double acc, double dec, boolean focusOnTrack)"
.br
.ti -1c
.RI "abstract void \fBmove\fP (\fBMovement\fP movement, boolean focusOnTrack)"
.br
.ti -1c
.RI "abstract void \fBnotifyMovingDone\fP ()"
.br
.ti -1c
.RI "abstract void \fBnotifyRotatingDone\fP ()"
.br
.ti -1c
.RI "abstract void \fBrotX\fP (double angle, \fBTimeSpan\fP duration)"
.br
.ti -1c
.RI "abstract void \fBrotY\fP (double angle, \fBTimeSpan\fP duration)"
.br
.ti -1c
.RI "abstract void \fBrotZ\fP (double angle, \fBTimeSpan\fP duration)"
.br
.ti -1c
.RI "abstract void \fBsendToLocation\fP (\fBSpatialObject\fP destination)"
.br
.ti -1c
.RI "abstract void \fBsendToLocationEntryPoint\fP (\fBSpatialObject\fP destination, String entryPoint)"
.br
.ti -1c
.RI "abstract void \fBsendToLocationExitPoint\fP (\fBSpatialObject\fP destination, String exitPoint)"
.br
.ti -1c
.RI "abstract void \fBsetAcc\fP (double acc)"
.br
.ti -1c
.RI "abstract void \fBsetDec\fP (double dec)"
.br
.ti -1c
.RI "abstract void \fBsetMaxSpeed\fP (double maxSpeed)"
.br
.in -1c
.SH "Detailed Description"
.PP 
This interface extends the \fBSpatialObject\fP interface by moving animation methods\&. The class which implements this is meant to be a movable object in the simulation\&. The methods cover the setting and getting spatial transformation data\&.
.PP
A \fBMovableSpatialObject\fP (MSO) can contain other MovableSpatialObjects as components to simulate the movable extensions/parts of an object\&. The other way around, a MSO can also be the child-MSO of other MSOs\&. In this case, the Attach and Detach methods will be deactivated\&. All the getting methods will return the local attributes without considering the parent MSO\&. The position and the orientation are represented in the parent-MSO's local coordinates\&. For the move methods only the move(movement, focusOnTrack) will be remained usable\&. To declare a MSO as a child-MSO, the parent MSO must be give in the constructor\&. This is the only way to declare it and it can't be modified afterwards\&.
.PP
\fBAuthor:\fP
.RS 4
Fred Sun 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "abstract void desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.attach (\fBMovableSpatialObject\fPhost)\fC [pure virtual]\fP"
Add a child-component to this \fBMovableSpatialObject\fP\&. This Method shouldn't be called by user\&. The arrangement will be done by the specific constructor\&. 
.PP
\fBParameters:\fP
.RS 4
\fIchildMSO\fP The child-MovableSpatialObject to be added\&. Snaps to another \fBMovableSpatialObject\fP\&. If the host moves, this object will be moved, too\&. The relative position to the host object will be kept\&. If attached, this object shouldn't be able to change its position and orientation itself anymore\&. 
.br
\fIhost\fP The \fBMovableSpatialObject\fP who to attach to\&. 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract void desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.cancelMovement ()\fC [pure virtual]\fP"
Cancel the movement if there is a movement performing\&. 
.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract void desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.cancelRotation ()\fC [pure virtual]\fP"
Cancel the rotation if there is a rotation performing\&. 
.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract void desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.detach ()\fC [pure virtual]\fP"
Returns true if this object contains the given \fBMovableSpatialObject\fP as child-component\&. 
.PP
\fBParameters:\fP
.RS 4
\fIchildMSO\fP The \fBMovableSpatialObject\fP to be checked\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
True if this object contains it as childMSO, false if not\&. Releases from the host object if this object is attached to it\&. 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract double desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.getAcc ()\fC [pure virtual]\fP"
Gets the acceleration of the object\&. The default value is 0\&. 
.PP
\fBReturns:\fP
.RS 4
The acceleration 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract \fBSpatialObject\fP desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.getCurrentLocation ()\fC [pure virtual]\fP"
Gets an iterator over all the child-MovableSpatialObejct's this object contains 
.PP
\fBReturns:\fP
.RS 4
An iterator over all the child-MSO's this object contains\&. Returns the \fBSpatialObject\fP where this \fBMovableSpatialObject\fP is currently located\&. 
.PP
The \fBSpatialObject\fP where this \fBMovableSpatialObject\fP is located\&. Null, if it isn't located at any \fBSpatialObject\fP\&. 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract \fBMovement\fP desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.getCurrentMovement ()\fC [pure virtual]\fP"
Gets the current \fBMovement\fP object\&. 
.PP
\fBReturns:\fP
.RS 4
The current \fBMovement\fP object\&. Null, if this \fBMovableSpatialObject\fP isn't moving\&. 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract \fBRotation\fP desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.getCurrentRotation ()\fC [pure virtual]\fP"
Gets the current \fBRotation\fP object\&. 
.PP
\fBReturns:\fP
.RS 4
The current \fBRotation\fP object\&. Null, if this \fBMovableSpatialObject\fP isn't rotating\&. 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract double desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.getCurrentSpeed ()\fC [pure virtual]\fP"
Gets the current moving speed of the object\&. 
.PP
\fBReturns:\fP
.RS 4
The current moving speed\&. 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract double desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.getDec ()\fC [pure virtual]\fP"
Gets the negative acceleration of the object\&. The default value is 0\&. 
.PP
\fBReturns:\fP
.RS 4
The negative acceleration 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract double desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.getMaxSpeed ()\fC [pure virtual]\fP"
Gets the vector which points to the front side of this \fBMovableSpatialObject\fP\&. The default vector is null\&. 
.PP
\fBReturns:\fP
.RS 4
The normalized vector which shows the front side\&. Gets the maximum speed of the object\&. If it's 0, the \fBMovableSpatialObject\fP won't have speed limitation\&. The default value is 0\&. 
.PP
The maximum speed of the object 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract boolean desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.isAttached ()\fC [pure virtual]\fP"
Gets how many child-MovableSpatialObject's this object has\&. 
.PP
\fBReturns:\fP
.RS 4
The number of the child-MSO's of this obejct\&. Gets the parent-MovableSpaitalObject if this Object is a component of it 
.PP
The parent-MSO if exist\&. Else, null\&. Check whether this object has any child-MovableSpatialObject 
.PP
True if there is a childMSO\&. False if there is no childMSO\&. IShows whether the \fBMovableSpatialObject\fP is attached\&. 
.PP
Whether the MovableSpatialObejct is attached\&. 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract boolean desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.isFocusedOnTrack ()\fC [pure virtual]\fP"
Returns whether the FocusOnTrack function is on\&. 
.PP
\fBReturns:\fP
.RS 4
True if it's set\&. False if it's not set\&. 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract boolean desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.isMoving ()\fC [pure virtual]\fP"
Shows whether the \fBMovableSpatialObject\fP is moving\&. 
.PP
\fBReturns:\fP
.RS 4
whether the \fBMovableSpatialObject\fP is moving\&. 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract boolean desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.isRotating ()\fC [pure virtual]\fP"
Shows whether the \fBMovableSpatialObject\fP is rotating\&. 
.PP
\fBReturns:\fP
.RS 4
whether the \fBMovableSpatialObject\fP is rotating\&. 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract void desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.move (\fBSpatialObject\fPdestination, StringentryPointName, booleanfocusOnTrack)\fC [pure virtual]\fP"
Show whether the \fBMovableSpatialObject\fP is a child-component of another \fBMovableSpatialObject\fP 
.PP
\fBReturns:\fP
.RS 4
true, if this \fBMovableSpatialObject\fP is part of another \fBMovableSpatialObject\fP\&. False, if it's not\&. Move the object to the position of another \fBSpatialObject\fP without a specified duration\&. It use the acceleration, deceleration and the maximum speed of the \fBMovableSpatialObject\fP\&. For this method the maximum speed of the object must be given or an \fBIllegalMoveException\fP will be thrown\&. If the acceleration is <= 0 OR deceleration of the object is >= 0, then the kinematical attributes won't be calculated and the movement will start with the maximum speed and break to zero immediately at the destination\&. If the object is already moving it will move to the new destination\&. (not for \fBMovableSpatialSimProcess\fP) 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIdestination\fP The destination object we want to move to\&. 
.br
\fIenttryPointName\fP The name of the specific entry point at the destination object, which should be steered to\&. 
.br
\fIfocusOnTrack\fP Whether the orientation of the moving object should focus to the moving direction\&. 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract void desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.move (\fBSpatialObject\fPdestination, StringentryPointName, \fBTimeSpan\fPduration, booleanfocusOnTrack)\fC [pure virtual]\fP"
Move the object to the position of another \fBSpatialObject\fP with a specified duration\&. It use the acceleration, deceleration and the maximum speed of the \fBMovableSpatialObject\fP\&. If the acceleration is <= 0 OR deceleration of the object is >= 0, then the kinematical attributes won't be calculated and the movement will start with the speed needed to arrive the destination in time\&. If the maximum speed of the object is initialized (>0), then an \fBIllegalMoveException\fP will be thrown if it is not possible to make to the destination in time\&. If the object is already moving it will move to the new destination\&. (not for \fBMovableSpatialSimProcess\fP) 
.PP
\fBParameters:\fP
.RS 4
\fIdestination\fP The destination object we want to move to\&. 
.br
\fIenttryPointName\fP The name of the specific entry point at the destination object, which should be steered to\&. 
.br
\fIduration\fP The duration of the movement in TimeSpan\&. 
.br
\fIfocusOnTrack\fP Whether the orientation of the moving object should focus to the moving direction\&. 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract void desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.move (\fBSpatialObject\fPdestination, StringentryPointName, \fBTimeSpan\fPduration, doublemaxSpeed, doubleacc, doubledec, booleanfocusOnTrack)\fC [pure virtual]\fP"
Move the object to the position of another \fBSpatialObject\fP with specific attributes\&. There are different varieties of movement modes depends on the initialized parameters (O = initialized, X = not initialized(means invalid or null)):
.PP
case 1: duration O, maxSpeed O, acc & dec O: The movement will be performed according to the parameters\&. If the given parameters can't be satisfied, an \fBIllegalMoveException\fP will be thrown\&.
.PP
case 2: duration X, maxSpeed O, acc & dec O: The object will be moved to the destination with the fastest speed possible\&.
.PP
case 3: duration O, maxSpeed X, acc & dec O: The object will move to the destination with the given acceleration and deceleration and try to reach the destination in time\&. If the given parameters can't be satisfied, an \fBIllegalMoveException\fP will be thrown\&.
.PP
case 4: duration X, maxSpeed X, acc & dec O: The object will be accelerated and followed by a deceleration\&. There's no constant phase in the movement\&.
.PP
case 5: duration O, maxSpeed O, acc or dec X: The object will start with the speed needed to arrive the destination in the given time and break suddenly to zero at the end of the movement\&. The maxSpeed gives the speed limit of the movement\&. If the given parameters can't be satisfied, an \fBIllegalMoveException\fP will be thrown\&.
.PP
case 6: duration X, maxSpeed O, acc or dec X: The movement will start with the maxSpeed and stops the destination\&.
.PP
case 7: duration O, maxSpeed X, acc or dec X: The movement will start with the speed needed to arrive the destination with the duration given\&.
.PP
All other combinations of these parameters will cause an \fBIllegalMoveException\fP\&.
.PP
If the object is already moving it will move to the new destination\&. (not for \fBMovableSpatialSimProcess\fP) 
.PP
\fBParameters:\fP
.RS 4
\fIdestination\fP The destination object we want to move to\&. 
.br
\fIenttryPointName\fP The name of the specific entry point at the destination object, which should be steered to\&. 
.br
\fIduration\fP The duration of the movement in TimeSpan(optional)\&. 
.br
\fImaxSpeed\fP The maximum speed of the movement(optional)\&. 
.br
\fIacc\fP The acceleration of the movement(optional)\&. 
.br
\fIdec\fP The deceleration of the movement(optional)\&. 
.br
\fIfocusOnTrack\fP Whether the orientation of the moving object should focus to the moving direction\&. 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract void desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.move (\fBMovement\fPmovement, booleanfocusOnTrack)\fC [pure virtual]\fP"
Move the object to the destination according to the given movement object\&. If the object is already moving it will move to the new destination\&. (not for \fBMovableSpatialSimProcess\fP) If this \fBMovableSpatialObject\fP is a child-MSO, the \fBTrack\fP which is contained in the \fBMovement\fP parameter should be in the local coordinates of this object\&. 
.PP
\fBParameters:\fP
.RS 4
\fImovement\fP The movement which should be performed\&. 
.br
\fIfocusOnTrack\fP Whether the orientation of the moving object should focus to the moving direction\&. 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract void desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.notifyMovingDone ()\fC [pure virtual]\fP"
Notifies the \fBMovableSpatialObject\fP that the moving is finished and updates the new coordinates\&. This method shouldn't be called by user! 
.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract void desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.notifyRotatingDone ()\fC [pure virtual]\fP"
Notifies the \fBMovableSpatialObject\fP that the rotating is finished and updates the new coordinates\&. This method shouldn't be called by user! 
.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract void desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.rotX (doubleangle, \fBTimeSpan\fPduration)\fC [pure virtual]\fP"
Rotates the object about the x-axis using an animation\&. 
.PP
\fBParameters:\fP
.RS 4
\fIangle\fP The start angle 
.br
\fIduration\fP The duration of the animation 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract void desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.rotY (doubleangle, \fBTimeSpan\fPduration)\fC [pure virtual]\fP"
Rotates the object about the y-axis using an animation\&. 
.PP
\fBParameters:\fP
.RS 4
\fIangle\fP The start angle 
.br
\fIduration\fP The duration of the animation 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract void desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.rotZ (doubleangle, \fBTimeSpan\fPduration)\fC [pure virtual]\fP"
Rotates the object about the z-axis using an animation\&. 
.PP
\fBParameters:\fP
.RS 4
\fIangle\fP The start angle 
.br
\fIduration\fP The duration of the animation 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract void desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.sendToLocation (\fBSpatialObject\fPdestination)\fC [pure virtual]\fP"
Set this object to the position of the destination object and change the currentLocation to the destination object\&.
.PP
\fBParameters:\fP
.RS 4
\fIdestination\fP The destination this object will be send to\&. 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract void desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.sendToLocationEntryPoint (\fBSpatialObject\fPdestination, StringentryPoint)\fC [pure virtual]\fP"
Set this object to the position of the given entry point of the destination object\&. The currentLocation will also be changed to the destination object\&.
.PP
\fBParameters:\fP
.RS 4
\fIdestination\fP The destination object the currentLocation should be set to\&. 
.br
\fIentryPoint\fP The specific entry point of the destination object\&. 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract void desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.sendToLocationExitPoint (\fBSpatialObject\fPdestination, StringexitPoint)\fC [pure virtual]\fP"
Set this object to the position of the given exit point of the destination object\&. The currentLocation will also be changed to the destination object\&.
.PP
\fBParameters:\fP
.RS 4
\fIdestination\fP The destination object the currentLocation should be set to\&. 
.br
\fIexitPoint\fP The specific exit point of the destination object this object will be send to\&. 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract void desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.setAcc (doubleacc)\fC [pure virtual]\fP"
Sets the acceleration of the object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIacc\fP The acceleration 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract void desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.setDec (doubledec)\fC [pure virtual]\fP"
Sets the negative acceleration of the object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdec\fP The negative acceleration 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.
.SS "abstract void desmoj\&.extensions\&.space3D\&.MovableSpatialObject\&.setMaxSpeed (doublemaxSpeed)\fC [pure virtual]\fP"
Sets the maximum speed of this object 
.PP
\fBParameters:\fP
.RS 4
\fImaxSpeed\fP The maximum speed of the object 
.RE
.PP

.PP
Implemented in \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialSimProcess\fP, and \fBdesmoj\&.extensions\&.space3D\&.MovableSpatialEntity\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Desmo-J from the source code\&.
