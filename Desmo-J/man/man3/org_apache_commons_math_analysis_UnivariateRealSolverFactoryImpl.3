.TH "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" 3 "Wed Dec 4 2013" "Version 1.0" "Desmo-J" \" -*- nroff -*-
.ad l
.nh
.SH NAME
org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBUnivariateRealSolverFactoryImpl\fP ()"
.br
.ti -1c
.RI "\fBUnivariateRealSolver\fP \fBnewDefaultSolver\fP (\fBUnivariateRealFunction\fP f)"
.br
.ti -1c
.RI "\fBUnivariateRealSolver\fP \fBnewBisectionSolver\fP (\fBUnivariateRealFunction\fP f)"
.br
.ti -1c
.RI "\fBUnivariateRealSolver\fP \fBnewBrentSolver\fP (\fBUnivariateRealFunction\fP f)"
.br
.ti -1c
.RI "\fBUnivariateRealSolver\fP \fBnewNewtonSolver\fP (\fBDifferentiableUnivariateRealFunction\fP f)"
.br
.ti -1c
.RI "\fBUnivariateRealSolver\fP \fBnewSecantSolver\fP (\fBUnivariateRealFunction\fP f)"
.br
.in -1c
.SH "Detailed Description"
.PP 
A concrete \fBUnivariateRealSolverFactory\fP\&. This is the default solver factory used by commons-math\&. 
.PP
The default solver returned by this factory is a \fBBrentSolver\fP\&.
.PP
\fBVersion:\fP
.RS 4
.RE
.PP
\fBRevision:\fP
.RS 4
615734 
.RE
.PP
\fBDate:\fP
.RS 4
2008-01-27 23:10:03 -0700 (Sun, 27 Jan 2008) 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "org\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolverFactoryImpl\&.UnivariateRealSolverFactoryImpl ()"
Default constructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBUnivariateRealSolver\fP org\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolverFactoryImpl\&.newBisectionSolver (\fBUnivariateRealFunction\fPf)"
Create a new \fBUnivariateRealSolver\fP for the given function\&. The solver is an implementation of the bisection method\&. 
.PP
\fBParameters:\fP
.RS 4
\fIf\fP the function\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
the new solver\&. 
.RE
.PP

.SS "\fBUnivariateRealSolver\fP org\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolverFactoryImpl\&.newBrentSolver (\fBUnivariateRealFunction\fPf)"
Create a new \fBUnivariateRealSolver\fP for the given function\&. The solver is an implementation of the Brent method\&. 
.PP
\fBParameters:\fP
.RS 4
\fIf\fP the function\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
the new solver\&. 
.RE
.PP

.SS "\fBUnivariateRealSolver\fP org\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolverFactoryImpl\&.newDefaultSolver (\fBUnivariateRealFunction\fPf)"
Create a new \fBUnivariateRealSolver\fP for the given function\&. The actual solver returned is determined by the underlying factory\&.
.PP
This factory returns a \fBBrentSolver\fP instance\&.
.PP
\fBParameters:\fP
.RS 4
\fIf\fP the function\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
the new solver\&. 
.RE
.PP

.SS "\fBUnivariateRealSolver\fP org\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolverFactoryImpl\&.newNewtonSolver (\fBDifferentiableUnivariateRealFunction\fPf)"
Create a new \fBUnivariateRealSolver\fP for the given function\&. The solver is an implementation of Newton's Method\&. 
.PP
\fBParameters:\fP
.RS 4
\fIf\fP the function\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
the new solver\&. 
.RE
.PP

.SS "\fBUnivariateRealSolver\fP org\&.apache\&.commons\&.math\&.analysis\&.UnivariateRealSolverFactoryImpl\&.newSecantSolver (\fBUnivariateRealFunction\fPf)"
Create a new \fBUnivariateRealSolver\fP for the given function\&. The solver is an implementation of the secant method\&. 
.PP
\fBParameters:\fP
.RS 4
\fIf\fP the function\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
the new solver\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Desmo-J from the source code\&.
