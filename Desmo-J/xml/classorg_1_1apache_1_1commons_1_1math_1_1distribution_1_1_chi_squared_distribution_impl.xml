<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl" kind="class" prot="public">
    <compoundname>org::apache::commons::math::distribution::ChiSquaredDistributionImpl</compoundname>
    <basecompoundref refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_continuous_distribution" prot="public" virt="non-virtual">org.apache.commons.math.distribution.AbstractContinuousDistribution</basecompoundref>
    <basecompoundref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution" prot="public" virt="non-virtual">org.apache.commons.math.distribution.ChiSquaredDistribution</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Serializable</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1a7d27804aaeb0b0805457e0b3115be684" prot="private" static="yes" mutable="no">
        <type>final long</type>
        <definition>final long org.apache.commons.math.distribution.ChiSquaredDistributionImpl.serialVersionUID</definition>
        <argsstring></argsstring>
        <name>serialVersionUID</name>
        <initializer>= -8352658048349159782L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializable version identifier </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" line="33" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1a06742cc85e061f01f7493db29822ebf1" prot="private" static="no" mutable="no">
        <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_gamma_distribution" kindref="compound">GammaDistribution</ref></type>
        <definition>GammaDistribution org.apache.commons.math.distribution.ChiSquaredDistributionImpl.gamma</definition>
        <argsstring></argsstring>
        <name>gamma</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Internal Gamma distribution. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" line="36" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1afcf41e3f385dc60f9b1ab028c4e4a141" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl</definition>
        <argsstring>(double df)</argsstring>
        <name>ChiSquaredDistributionImpl</name>
        <param>
          <type>double</type>
          <declname>df</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a Chi-Squared distribution with the given degrees of freedom. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>df</parametername>
</parameternamelist>
<parameterdescription>
<para>degrees of freedom. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" line="42" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1a02d4d213acce796fc29a96db3b6c8c82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl</definition>
        <argsstring>(double df, GammaDistribution g)</argsstring>
        <name>ChiSquaredDistributionImpl</name>
        <param>
          <type>double</type>
          <declname>df</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_gamma_distribution" kindref="compound">GammaDistribution</ref></type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a Chi-Squared distribution with the given degrees of freedom. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>df</parametername>
</parameternamelist>
<parameterdescription>
<para>degrees of freedom. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>the underlying gamma distribution used to compute probabilities. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>1.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" line="52" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" bodystart="52" bodyend="56"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1aaed51f2f31904769350f5ce867abfd94" compoundref="_chi_squared_distribution_impl_8java" startline="179" endline="182">org.apache.commons.math.distribution.ChiSquaredDistributionImpl.setGamma</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1a9de1d7b246d96f8adc3f46cc02f23cad" compoundref="_chi_squared_distribution_impl_8java" startline="62" endline="64">org.apache.commons.math.distribution.ChiSquaredDistributionImpl.setDegreesOfFreedom</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1a9de1d7b246d96f8adc3f46cc02f23cad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.math.distribution.ChiSquaredDistributionImpl.setDegreesOfFreedom</definition>
        <argsstring>(double degreesOfFreedom)</argsstring>
        <name>setDegreesOfFreedom</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_1ac5a50a0a24cda5932c216fa7002df04a">setDegreesOfFreedom</reimplements>
        <param>
          <type>double</type>
          <declname>degreesOfFreedom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Modify the degrees of freedom. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>degreesOfFreedom</parametername>
</parameternamelist>
<parameterdescription>
<para>the new degrees of freedom. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" line="62" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1aa604bbefc2588fe12606e5f4b8ab0eeb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDegreesOfFreedom</definition>
        <argsstring>()</argsstring>
        <name>getDegreesOfFreedom</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_1a37ac03c41d0a15e000ddb643a89c27dd">getDegreesOfFreedom</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the degrees of freedom. <simplesect kind="return"><para>the degrees of freedom. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" line="70" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1aa09609083ef6870796d2b49c20d11f98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.ChiSquaredDistributionImpl.cumulativeProbability</definition>
        <argsstring>(double x)</argsstring>
        <name>cumulativeProbability</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_1a72faeb4e48d8607d791fcb3fa9afb0e3">cumulativeProbability</reimplements>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For this disbution, X, this method returns P(X &lt; x). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value at which the CDF is evaluated. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CDF for this distribution. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the cumulative probability can not be computed due to convergence or other numerical errors. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" line="81" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1a442ec234a9bfed3df66230c38c393455" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.ChiSquaredDistributionImpl.inverseCumulativeProbability</definition>
        <argsstring>(final double p)</argsstring>
        <name>inverseCumulativeProbability</name>
        <param>
          <type>final double</type>
          <declname>p</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For this distribution, X, this method returns the critical point x, such that P(X &lt; x) = <computeroutput>p</computeroutput>. </para><para>Returns 0 for p=0 and <computeroutput>Double.POSITIVE_INFINITY</computeroutput> for p=1.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired probability </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>x, such that P(X &lt; x) = <computeroutput>p</computeroutput> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the inverse cumulative probability can not be computed due to convergence or other numerical errors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>p</computeroutput> is not a valid probability. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" line="98" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" bodystart="98" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1aaed51f2f31904769350f5ce867abfd94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.math.distribution.ChiSquaredDistributionImpl.setGamma</definition>
        <argsstring>(GammaDistribution g)</argsstring>
        <name>setGamma</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_gamma_distribution" kindref="compound">GammaDistribution</ref></type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Modify the underlying gamma distribution. The caller is responsible for insuring the gamma distribution has the proper parameter settings. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>the new distribution. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>1.2 made public </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" line="179" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" bodystart="179" bodyend="182"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1af38c9647100c371f9e5e45fdaba2de58" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDomainLowerBound</definition>
        <argsstring>(double p)</argsstring>
        <name>getDomainLowerBound</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_continuous_distribution_1a7c65e91d5a1eb53a5bd309b58e36e966">getDomainLowerBound</reimplements>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the domain value lower bound, based on <computeroutput>p</computeroutput>, used to bracket a CDF root. This method is used by <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_continuous_distribution_1a4b500e3d42f02fa1bd606196f404b61f" kindref="member">inverseCumulativeProbability(double)</ref> to find critical values.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired probability for the critical value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>domain value lower bound, i.e. P(X &lt; <emphasis>lower bound</emphasis>) &lt; <computeroutput>p</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" line="118" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1a237c1987d80f493feb91f792c2bdeeda" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDomainUpperBound</definition>
        <argsstring>(double p)</argsstring>
        <name>getDomainUpperBound</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_continuous_distribution_1aeb69c1dd57e233b023edc88155108191">getDomainUpperBound</reimplements>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the domain value upper bound, based on <computeroutput>p</computeroutput>, used to bracket a CDF root. This method is used by <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_continuous_distribution_1a4b500e3d42f02fa1bd606196f404b61f" kindref="member">inverseCumulativeProbability(double)</ref> to find critical values.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired probability for the critical value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>domain value upper bound, i.e. P(X &lt; <emphasis>upper bound</emphasis>) &gt; <computeroutput>p</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" line="131" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" bodystart="131" bodyend="146"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1aa604bbefc2588fe12606e5f4b8ab0eeb" compoundref="_chi_squared_distribution_impl_8java" startline="70" endline="72">org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDegreesOfFreedom</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1a414d56d300981b66d533bb3367964198" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getInitialDomain</definition>
        <argsstring>(double p)</argsstring>
        <name>getInitialDomain</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_continuous_distribution_1a24d1238e49baef8a236e66c77ce0db3e">getInitialDomain</reimplements>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the initial domain value, based on <computeroutput>p</computeroutput>, used to bracket a CDF root. This method is used by <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_continuous_distribution_1a4b500e3d42f02fa1bd606196f404b61f" kindref="member">inverseCumulativeProbability(double)</ref> to find critical values.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired probability for the critical value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>initial domain value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" line="156" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" bodystart="156" bodyend="171"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1aa604bbefc2588fe12606e5f4b8ab0eeb" compoundref="_chi_squared_distribution_impl_8java" startline="70" endline="72">org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDegreesOfFreedom</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1a4f5bb5df910d77163bdc930c229727f7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_gamma_distribution" kindref="compound">GammaDistribution</ref></type>
        <definition>GammaDistribution org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getGamma</definition>
        <argsstring>()</argsstring>
        <name>getGamma</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the Gamma distribution. <simplesect kind="return"><para>the internal Gamma distribution. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" line="188" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" bodystart="188" bodyend="190"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The default implementation of <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution" kindref="compound">ChiSquaredDistribution</ref></para><para><simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision:</title><para>617953 </para></simplesect>
<simplesect kind="rcs"><title>Date:</title><para>2008-02-02 22:54:00 -0700 (Sat, 02 Feb 2008) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="6445">
        <label>org.apache.commons.math.distribution.ContinuousDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_continuous_distribution"/>
        <childnode refid="6443" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6444">
        <label>Serializable</label>
      </node>
      <node id="6440">
        <label>org.apache.commons.math.distribution.ChiSquaredDistributionImpl</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl"/>
        <childnode refid="6441" relation="public-inheritance">
        </childnode>
        <childnode refid="6446" relation="public-inheritance">
        </childnode>
        <childnode refid="6444" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6441">
        <label>org.apache.commons.math.distribution.AbstractContinuousDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_continuous_distribution"/>
        <childnode refid="6442" relation="public-inheritance">
        </childnode>
        <childnode refid="6445" relation="public-inheritance">
        </childnode>
        <childnode refid="6444" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6442">
        <label>org.apache.commons.math.distribution.AbstractDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_distribution"/>
        <childnode refid="6443" relation="public-inheritance">
        </childnode>
        <childnode refid="6444" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6443">
        <label>org.apache.commons.math.distribution.Distribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution"/>
      </node>
      <node id="6446">
        <label>org.apache.commons.math.distribution.ChiSquaredDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution"/>
        <childnode refid="6445" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6452">
        <label>org.apache.commons.math.distribution.ContinuousDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_continuous_distribution"/>
        <childnode refid="6450" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6451">
        <label>Serializable</label>
      </node>
      <node id="6447">
        <label>org.apache.commons.math.distribution.ChiSquaredDistributionImpl</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl"/>
        <childnode refid="6448" relation="public-inheritance">
        </childnode>
        <childnode refid="6453" relation="public-inheritance">
        </childnode>
        <childnode refid="6451" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6448">
        <label>org.apache.commons.math.distribution.AbstractContinuousDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_continuous_distribution"/>
        <childnode refid="6449" relation="public-inheritance">
        </childnode>
        <childnode refid="6452" relation="public-inheritance">
        </childnode>
        <childnode refid="6451" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6449">
        <label>org.apache.commons.math.distribution.AbstractDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_distribution"/>
        <childnode refid="6450" relation="public-inheritance">
        </childnode>
        <childnode refid="6451" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6450">
        <label>org.apache.commons.math.distribution.Distribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution"/>
      </node>
      <node id="6453">
        <label>org.apache.commons.math.distribution.ChiSquaredDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution"/>
        <childnode refid="6452" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" line="30" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java" bodystart="28" bodyend="191"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_continuous_distribution_1ad2268d4983e173bb3628fba19d93b2e4" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::distribution::ChiSquaredDistributionImpl</scope><name>AbstractContinuousDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_distribution_1a69b03d7cd00b00c946eea69dfa8da7ba" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::distribution::ChiSquaredDistributionImpl</scope><name>AbstractDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1afcf41e3f385dc60f9b1ab028c4e4a141" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::ChiSquaredDistributionImpl</scope><name>ChiSquaredDistributionImpl</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1a02d4d213acce796fc29a96db3b6c8c82" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::ChiSquaredDistributionImpl</scope><name>ChiSquaredDistributionImpl</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1aa09609083ef6870796d2b49c20d11f98" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::ChiSquaredDistributionImpl</scope><name>cumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_distribution_1a240f9e95109838d7a1dfb5af57c2ebd2" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::AbstractContinuousDistribution."><scope>org::apache::commons::math::distribution::ChiSquaredDistributionImpl</scope><name>cumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1a06742cc85e061f01f7493db29822ebf1" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::ChiSquaredDistributionImpl</scope><name>gamma</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1aa604bbefc2588fe12606e5f4b8ab0eeb" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::ChiSquaredDistributionImpl</scope><name>getDegreesOfFreedom</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1af38c9647100c371f9e5e45fdaba2de58" prot="protected" virt="virtual"><scope>org::apache::commons::math::distribution::ChiSquaredDistributionImpl</scope><name>getDomainLowerBound</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1a237c1987d80f493feb91f792c2bdeeda" prot="protected" virt="virtual"><scope>org::apache::commons::math::distribution::ChiSquaredDistributionImpl</scope><name>getDomainUpperBound</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1a4f5bb5df910d77163bdc930c229727f7" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::ChiSquaredDistributionImpl</scope><name>getGamma</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1a414d56d300981b66d533bb3367964198" prot="protected" virt="virtual"><scope>org::apache::commons::math::distribution::ChiSquaredDistributionImpl</scope><name>getInitialDomain</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1a442ec234a9bfed3df66230c38c393455" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::ChiSquaredDistributionImpl</scope><name>inverseCumulativeProbability</name></member>
      <member refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_continuous_distribution_1a4b500e3d42f02fa1bd606196f404b61f" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::ContinuousDistribution."><scope>org::apache::commons::math::distribution::ChiSquaredDistributionImpl</scope><name>inverseCumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1a7d27804aaeb0b0805457e0b3115be684" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::ChiSquaredDistributionImpl</scope><name>serialVersionUID</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1a9de1d7b246d96f8adc3f46cc02f23cad" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::ChiSquaredDistributionImpl</scope><name>setDegreesOfFreedom</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution_impl_1aaed51f2f31904769350f5ce867abfd94" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::ChiSquaredDistributionImpl</scope><name>setGamma</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
