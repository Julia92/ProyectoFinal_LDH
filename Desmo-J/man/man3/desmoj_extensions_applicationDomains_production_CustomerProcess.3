.TH "desmoj.extensions.applicationDomains.production.CustomerProcess" 3 "Wed Dec 4 2013" "Version 1.0" "Desmo-J" \" -*- nroff -*-
.ad l
.nh
.SH NAME
desmoj.extensions.applicationDomains.production.CustomerProcess \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBdesmoj\&.core\&.simulator\&.SimProcess\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCustomerProcess\fP (\fBModel\fP owner, String name, \fBEntrepot\fP supplier, long quantity, boolean showInTrace)"
.br
.ti -1c
.RI "void \fBlifeCycle\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
\fBCustomerProcess\fP is a kind of process representing a customer\&. He is fetching a certain number of products from an \fC\fBEntrepot\fP\fP to use them up\&. He is not doing anything special with them and so the products will be collected by the garbage collector\&. To change this behavior overwrite the method \fC\fBlifeCycle()\fP\fP in a subclass\&. The \fBCustomerProcess\fP can be viewed as the border of the simulated system, where the products disappear\&. It is intended to be used in conjunction with the \fC\fBDemandProcess\fP\fP\&. \fBCustomerProcess\fP has two main parameters to be specified (see the Constructor): The \fC\fBEntrepot\fP\fP where the products are to be fetched from and the number of demanded products\&.
.PP
\fBSee Also:\fP
.RS 4
\fBDemandProcess\fP
.RE
.PP
\fBVersion:\fP
.RS 4
DESMO-J, Ver\&. 2\&.4\&.0 copyright (c) 2013 
.RE
.PP
\fBAuthor:\fP
.RS 4
Soenke Claassen
.RE
.PP
Licensed under the Apache License, Version 2\&.0 (the 'License'); you may not use this file except in compliance with the License\&. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
.PP
Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied\&. See the License for the specific language governing permissions and limitations under the License\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "desmoj\&.extensions\&.applicationDomains\&.production\&.CustomerProcess\&.CustomerProcess (\fBModel\fPowner, Stringname, \fBEntrepot\fPsupplier, longquantity, booleanshowInTrace)"
Constructor for a \fBCustomerProcess\fP\&. The \fBCustomerProcess\fP is fetching a given number of products from the given \fC\fBEntrepot\fP\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fIowner\fP desmoj\&.Model : The model this \fBCustomerProcess\fP is associated to\&. 
.br
\fIname\fP java\&.lang\&.String : The name of this \fBCustomerProcess\fP\&. 
.br
\fIsupplier\fP desmoj\&.Entrepot : The \fC\fBEntrepot\fP\fP supplying the products this \fBCustomerProcess\fP is buying\&. 
.br
\fIquantity\fP long : The number of products this \fBCustomerProcess\fP is fetching from the \fC\fBEntrepot\fP\fP\&. 
.br
\fIshowInTrace\fP boolean : Flag, if this \fBCustomerProcess\fP should produce a trace output or not\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void desmoj\&.extensions\&.applicationDomains\&.production\&.CustomerProcess\&.lifeCycle ()\fC [virtual]\fP"
The \fBCustomerProcess\fP is fetching the given number of products from the given \fC\fBEntrepot\fP\fP\&. As there are not enough products available at the moment this \fBCustomerProcess\fP has to wait in a queue in the \fC\fBEntrepot\fP\fP\&. The obtained products are consumed (used up), that means all references to them are released and the product Sim-process is activated (as the process is not terminated yet), to end its lifeCycle and terminate by itself\&. Then the garbage collector can delete it\&. Therefore the \fCComplexSimProcess\fP es are disassembled automatically\&. 
.PP
Implements \fBdesmoj\&.core\&.simulator\&.SimProcess\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Desmo-J from the source code\&.
