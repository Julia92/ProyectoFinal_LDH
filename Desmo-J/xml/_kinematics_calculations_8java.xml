<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_kinematics_calculations_8java" kind="file">
    <compoundname>KinematicsCalculations.java</compoundname>
    <innerclass refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations" prot="public">desmoj::extensions::space3D::KinematicsCalculations</innerclass>
    <innernamespace refid="namespacedesmoj_1_1extensions_1_1space3_d">desmoj::extensions::space3D</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">package<sp/></highlight><highlight class="normal">desmoj.extensions.space3D;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.concurrent.TimeUnit;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1core_1_1simulator_1_1_time_instant" kindref="compound">desmoj.core.simulator.TimeInstant</ref>;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1core_1_1simulator_1_1_time_span" kindref="compound">desmoj.core.simulator.TimeSpan</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations" kindref="compound">KinematicsCalculations</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>static<sp/>singleton<sp/>KinematicsCalculations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>private<sp/>static<sp/>KinematicsCalculations<sp/>_kineCalc<sp/>=<sp/>null;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//private<sp/>KinematicsCalculations(){}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">//<sp/><sp/>public<sp/>static<sp/>KinematicsCalculations<sp/>getKinematicsCalulations()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if(_kineCalc<sp/>==<sp/>null){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_kineCalc<sp/>=<sp/>new<sp/>KinematicsCalculations();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>_kineCalc;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45" refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1aa80f609e225e474e6a83500a8d593300" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement" kindref="compound">Movement</ref><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1aa80f609e225e474e6a83500a8d593300" kindref="member">configureMovement</ref>(<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement" kindref="compound">Movement</ref><sp/>movement,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totalDistance,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initialSpeed,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxSpeed,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acc,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dec,<sp/><ref refid="classdesmoj_1_1core_1_1simulator_1_1_time_span" kindref="compound">TimeSpan</ref><sp/>totalSimDuration){</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(totalDistance&lt;=0){</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>length<sp/>of<sp/>the<sp/>movement<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>zero.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(totalSimDuration==null){</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;A<sp/>duration<sp/>in<sp/>SimTime<sp/>must<sp/>be<sp/>given.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>assert(initialSpeed&lt;=maxSpeed):&quot;The<sp/>start<sp/>speed<sp/>can&apos;t<sp/>be<sp/>greater<sp/>than<sp/>the<sp/>maximum<sp/>speed.&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>given<sp/>total<sp/>duration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totalDuration<sp/>=<sp/>totalSimDuration.getTimeAsDouble(TimeUnit.SECONDS);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//gets<sp/>a<sp/>movement<sp/>object<sp/>which<sp/>has<sp/>the<sp/>fastest<sp/>movement<sp/>to<sp/>the<sp/>destiny</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement" kindref="compound">Movement</ref><sp/>fastestPossibleMovement<sp/>=<sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1aa80f609e225e474e6a83500a8d593300" kindref="member">configureMovement</ref>(movement,totalDistance,<sp/>initialSpeed,<sp/>maxSpeed,<sp/>acc,<sp/>dec);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>whether<sp/>it&apos;s<sp/>possible<sp/>to<sp/>reach<sp/>the<sp/>destination<sp/>in<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>possible,<sp/>start<sp/>to<sp/>test<sp/>how<sp/>to<sp/>adjust<sp/>the<sp/>initial<sp/>speed<sp/>so<sp/>the<sp/>object<sp/>can<sp/>reach<sp/>the<sp/>destination<sp/>in<sp/>the<sp/>exact<sp/>given<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>just<sp/>keep<sp/>the<sp/>initial<sp/>and<sp/>see<sp/>where<sp/>the<sp/>movement<sp/>will<sp/>be<sp/>ended</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fastestPossibleMovement.getTotalDuration().getTimeAsDouble(TimeUnit.SECONDS)&lt;totalDuration){</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//test<sp/>whether<sp/>the<sp/>initialSpeed<sp/>should<sp/>be<sp/>speeded<sp/>down<sp/>or<sp/>speeded<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>duration<sp/>from<sp/>initialSpeed<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>breakingFromInitialSpeedToZeroDuration<sp/>=<sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a9590fb45375fb782b13c1e7aefcd09ef" kindref="member">getDurationOfSpeedBoundedAcceleration</ref>(initialSpeed,<sp/>0.0d,<sp/>dec);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>duration<sp/>when<sp/>the<sp/>movement<sp/>is<sp/>going<sp/>on<sp/>with<sp/>the<sp/>initial<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initialSpeedDuration<sp/>=<sp/>totalDuration-breakingFromInitialSpeedToZeroDuration;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>distance<sp/>which<sp/>consist<sp/>of<sp/>the<sp/>constant<sp/>initialSpeed<sp/>movement<sp/>and<sp/>break<sp/>to<sp/>zero<sp/>with<sp/>the<sp/>given<sp/>duration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initialSpeedToDestinyDistance<sp/>=<sp/>(initialSpeed*initialSpeedDuration)+<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a56ec32ff8a930a37fee4412e5951da29" kindref="member">getDistanceOfSpeedBoundedAcceleration</ref>(initialSpeed,<sp/>0.0d,<sp/>dec);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>we<sp/>need<sp/>to<sp/>speed<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(initialSpeedToDestinyDistance&lt;totalDistance){</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>squared<sp/>=<sp/>(acc*acc*totalDuration*totalDuration*dec*dec)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+(2*acc*dec*dec*initialSpeed*totalDuration)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+(acc*dec*initialSpeed*initialSpeed)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-(2*acc*dec*dec*totalDistance)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+(2*acc*acc*totalDistance*dec);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(squared&lt;0){</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>squareroot<sp/>of<sp/>a<sp/>negative<sp/>value<sp/>should<sp/>be<sp/>calculated.<sp/>Please<sp/>check<sp/>the<sp/>input&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>accToConstantSpeedDuration<sp/>=<sp/>((-acc*initialSpeed)-(acc*totalDuration*dec)-Math.sqrt(squared))/(acc*(acc-dec));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(accToConstantSpeedDuration&lt;0){</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>calculated<sp/>acceleration<sp/>time<sp/>is<sp/>negative.<sp/>Check<sp/>input.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>breakFromConstantSpeedToZeroDuration<sp/>=<sp/>(-(acc*accToConstantSpeedDuration+initialSpeed))/dec;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>movement<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement" kindref="compound">Movement</ref>(movement.<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement_1a26bab2672bccae609fd7f35d141bc148" kindref="member">getTrack</ref>(),accToConstantSpeedDuration,totalDuration-accToConstantSpeedDuration-breakFromConstantSpeedToZeroDuration,breakFromConstantSpeedToZeroDuration,initialSpeed,acc*accToConstantSpeedDuration+initialSpeed,0.0d);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>we<sp/>need<sp/>to<sp/>speed<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(initialSpeedToDestinyDistance&gt;totalDistance){</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>decToConstantSpeedDuration<sp/>=<sp/>-((2*initialSpeed*totalDuration*dec)+(initialSpeed*initialSpeed)-(2*totalDistance*dec))/(2*dec*(totalDuration*dec+initialSpeed));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(decToConstantSpeedDuration&lt;0){</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>calculated<sp/>acceleration<sp/>time<sp/>is<sp/>negative.<sp/>Check<sp/>input.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>breakFromConstantSpeedToZeroDuration<sp/>=<sp/>(-(dec*decToConstantSpeedDuration+initialSpeed))/dec;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>movement<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement" kindref="compound">Movement</ref>(movement.<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement_1a26bab2672bccae609fd7f35d141bc148" kindref="member">getTrack</ref>(),decToConstantSpeedDuration,totalDuration-decToConstantSpeedDuration-breakFromConstantSpeedToZeroDuration,breakFromConstantSpeedToZeroDuration,initialSpeed,dec*decToConstantSpeedDuration+initialSpeed,0.0d);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//just<sp/>for<sp/>the<sp/>case<sp/>that<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>adjust<sp/>the<sp/>initial<sp/>speed<sp/>at<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>movement<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement" kindref="compound">Movement</ref>(movement.<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement_1a26bab2672bccae609fd7f35d141bc148" kindref="member">getTrack</ref>(),0.0d,initialSpeedDuration,breakingFromInitialSpeedToZeroDuration,initialSpeed,initialSpeed,0.0d);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>whether<sp/>it&apos;s<sp/>possible<sp/>to<sp/>reach<sp/>the<sp/>destination<sp/>in<sp/>time.<sp/>If<sp/>not,<sp/>an<sp/>exception<sp/>will<sp/>be<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fastestPossibleMovement.getTotalDuration().getTimeAsDouble(TimeUnit.SECONDS)&gt;totalDuration){</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>given<sp/>duration<sp/>is<sp/>too<sp/>short<sp/>to<sp/>reach<sp/>the<sp/>destination<sp/>in<sp/>time.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//just<sp/>for<sp/>the<sp/>case<sp/>that<sp/>the<sp/>fastest<sp/>possible<sp/>movement<sp/>is<sp/>exactly<sp/>what<sp/>we<sp/>want</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>movement<sp/>=<sp/>fastestPossibleMovement;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>movement;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130" refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a883e881eec5c27b7e82926c9b12605c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement" kindref="compound">Movement</ref><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a883e881eec5c27b7e82926c9b12605c9" kindref="member">configureMovement</ref>(<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement" kindref="compound">Movement</ref><sp/>movement,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totalDistance,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initialSpeed,<sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acc,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dec,<sp/><ref refid="classdesmoj_1_1core_1_1simulator_1_1_time_span" kindref="compound">TimeSpan</ref><sp/>totalSimDuration){</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(totalDistance&lt;=0){</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>length<sp/>of<sp/>the<sp/>movement<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>zero.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(totalSimDuration==null){</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;A<sp/>duration<sp/>in<sp/>SimTime<sp/>must<sp/>be<sp/>given.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>distance<sp/>needed<sp/>to<sp/>break<sp/>from<sp/>initialSpeed<sp/>to<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>breakToZeroDistance<sp/>=<sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a56ec32ff8a930a37fee4412e5951da29" kindref="member">getDistanceOfSpeedBoundedAcceleration</ref>(initialSpeed,<sp/>0.0d,<sp/>dec);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>there<sp/>is<sp/>still<sp/>room<sp/>for<sp/>more<sp/>moving.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(breakToZeroDistance&lt;=totalDistance){</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>given<sp/>total<sp/>duration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totalDuration<sp/>=<sp/>totalSimDuration.getTimeAsDouble(TimeUnit.SECONDS);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//test<sp/>whether<sp/>the<sp/>initialSpeed<sp/>should<sp/>be<sp/>speeded<sp/>down<sp/>or<sp/>speeded<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>duration<sp/>from<sp/>initialSpeed<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>breakingFromInitialSpeedToZeroDuration<sp/>=<sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a9590fb45375fb782b13c1e7aefcd09ef" kindref="member">getDurationOfSpeedBoundedAcceleration</ref>(initialSpeed,<sp/>0.0d,<sp/>dec);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>duration<sp/>when<sp/>the<sp/>movement<sp/>is<sp/>going<sp/>on<sp/>with<sp/>the<sp/>initial<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initialSpeedDuration<sp/>=<sp/>totalDuration-breakingFromInitialSpeedToZeroDuration;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>distance<sp/>which<sp/>consist<sp/>of<sp/>the<sp/>constant<sp/>initialSpeed<sp/>movement<sp/>and<sp/>break<sp/>to<sp/>zero<sp/>with<sp/>the<sp/>given<sp/>duration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initialSpeedToDestinyDistance<sp/>=<sp/>(initialSpeed*initialSpeedDuration)+breakToZeroDistance;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>we<sp/>need<sp/>to<sp/>speed<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(initialSpeedToDestinyDistance&lt;totalDistance){</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>squared<sp/>=<sp/>(acc*acc*totalDuration*totalDuration*dec*dec)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+(2*acc*dec*dec*initialSpeed*totalDuration)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+(acc*dec*initialSpeed*initialSpeed)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-(2*acc*dec*dec*totalDistance)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+(2*acc*acc*totalDistance*dec);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(squared&lt;0){</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>squareroot<sp/>of<sp/>a<sp/>negative<sp/>value<sp/>should<sp/>be<sp/>calculated.<sp/>Please<sp/>check<sp/>the<sp/>input&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>accToConstantSpeedDuration<sp/>=<sp/>((-acc*initialSpeed)-(acc*totalDuration*dec)-Math.sqrt(squared))/(acc*(acc-dec));</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(accToConstantSpeedDuration&lt;0){</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>calculated<sp/>acceleration<sp/>time<sp/>is<sp/>negative.<sp/>Check<sp/>input.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>breakFromConstantSpeedToZeroDuration<sp/>=<sp/>(-(acc*accToConstantSpeedDuration+initialSpeed))/dec;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>movement<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement" kindref="compound">Movement</ref>(movement.<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement_1a26bab2672bccae609fd7f35d141bc148" kindref="member">getTrack</ref>(),accToConstantSpeedDuration,totalDuration-accToConstantSpeedDuration-breakFromConstantSpeedToZeroDuration,breakFromConstantSpeedToZeroDuration,initialSpeed,acc*accToConstantSpeedDuration+initialSpeed,0.0d);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>we<sp/>need<sp/>to<sp/>speed<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(initialSpeedToDestinyDistance&gt;totalDistance){</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>decToConstantSpeedDuration<sp/>=<sp/>-((2*initialSpeed*totalDuration*dec)+(initialSpeed*initialSpeed)-(2*totalDistance*dec))/(2*dec*(totalDuration*dec+initialSpeed));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(decToConstantSpeedDuration&lt;0){</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>calculated<sp/>acceleration<sp/>time<sp/>is<sp/>negative.<sp/>Check<sp/>input.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>breakFromConstantSpeedToZeroDuration<sp/>=<sp/>(-(dec*decToConstantSpeedDuration+initialSpeed))/dec;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>movement<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement" kindref="compound">Movement</ref>(movement.<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement_1a26bab2672bccae609fd7f35d141bc148" kindref="member">getTrack</ref>(),decToConstantSpeedDuration,totalDuration-decToConstantSpeedDuration-breakFromConstantSpeedToZeroDuration,breakFromConstantSpeedToZeroDuration,initialSpeed,dec*decToConstantSpeedDuration+initialSpeed,0.0d);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//just<sp/>for<sp/>the<sp/>case<sp/>that<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>adjust<sp/>the<sp/>initial<sp/>speed<sp/>at<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>movement<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement" kindref="compound">Movement</ref>(movement.<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement_1a26bab2672bccae609fd7f35d141bc148" kindref="member">getTrack</ref>(),0.0d,initialSpeedDuration,breakingFromInitialSpeedToZeroDuration,initialSpeed,initialSpeed,0.0d);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>breaking<sp/>distance<sp/>longer<sp/>than<sp/>the<sp/>distance<sp/>to<sp/>the<sp/>destination<sp/>an<sp/>exception<sp/>will<sp/>be<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>initial<sp/>speed<sp/>is<sp/>too<sp/>high.<sp/>It&apos;s<sp/>not<sp/>possible<sp/>to<sp/>break<sp/>to<sp/>zero<sp/>within<sp/>the<sp/>given<sp/>distance.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>movement;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a1278dc640383ff17899ef0a2b6ce3062" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement" kindref="compound">Movement</ref><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a1278dc640383ff17899ef0a2b6ce3062" kindref="member">configureMovement</ref>(<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement" kindref="compound">Movement</ref><sp/>movement,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totalDistance,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initialSpeed,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxSpeed,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acc,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dec)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(totalDistance&lt;=0){</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>length<sp/>of<sp/>the<sp/>movement<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>zero.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>distance<sp/>needed<sp/>to<sp/>break<sp/>from<sp/>initialSpeed<sp/>to<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>breakToZeroDistance<sp/>=<sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a56ec32ff8a930a37fee4412e5951da29" kindref="member">getDistanceOfSpeedBoundedAcceleration</ref>(initialSpeed,<sp/>0.0d,<sp/>dec);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>breaking<sp/>distance<sp/>longer<sp/>than<sp/>the<sp/>distance<sp/>to<sp/>the<sp/>destination.<sp/>There<sp/>is<sp/>still<sp/>room<sp/>for<sp/>more<sp/>moving.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(breakToZeroDistance&lt;totalDistance){</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>initialSpeed<sp/>lies<sp/>under<sp/>the<sp/>maximum<sp/>speed,<sp/>means<sp/>an<sp/>acceleration<sp/>is<sp/>needed<sp/>at<sp/>the<sp/>beginning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(initialSpeed&lt;maxSpeed){</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>maximum<sp/>speed<sp/>if<sp/>the<sp/>acceleration<sp/>phase<sp/>is<sp/>just<sp/>followed<sp/>by<sp/>the<sp/>deceleration<sp/>phase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxAcceleratedSpeed<sp/>=<sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1abca46ed18d939e15189a48f5ad70918d" kindref="member">getMaxAcceleratedSpeed</ref>(totalDistance,<sp/>initialSpeed,<sp/>0.0d,<sp/>acc,<sp/>dec);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>there&apos;s<sp/>a<sp/>phase<sp/>where<sp/>the<sp/>speed<sp/>is<sp/>constant<sp/>at<sp/>the<sp/>maximum<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//then<sp/>moving<sp/>duration<sp/>is<sp/>the<sp/>sum<sp/>of<sp/>the<sp/>duration<sp/>of<sp/>the<sp/>acceleration<sp/>to<sp/>the<sp/>maximum<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>the<sp/>duration<sp/>with<sp/>constant<sp/>maximum<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>the<sp/>breaking<sp/>duration<sp/>from<sp/>the<sp/>maximum<sp/>speed<sp/>to<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(maxAcceleratedSpeed<sp/>&gt;<sp/>maxSpeed){</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>accDistance<sp/>=<sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a56ec32ff8a930a37fee4412e5951da29" kindref="member">getDistanceOfSpeedBoundedAcceleration</ref>(initialSpeed,<sp/>maxSpeed,<sp/>acc);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>breakingDistance<sp/>=<sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a56ec32ff8a930a37fee4412e5951da29" kindref="member">getDistanceOfSpeedBoundedAcceleration</ref>(maxSpeed,<sp/>0.0d,<sp/>dec);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distanceWithMaxSpeed<sp/>=<sp/>totalDistance<sp/>-<sp/>accDistance<sp/>-<sp/>breakingDistance;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>accDuration<sp/>=<sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a9590fb45375fb782b13c1e7aefcd09ef" kindref="member">getDurationOfSpeedBoundedAcceleration</ref>(initialSpeed,<sp/>maxSpeed,<sp/>acc);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>breakingDuration<sp/>=<sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a9590fb45375fb782b13c1e7aefcd09ef" kindref="member">getDurationOfSpeedBoundedAcceleration</ref>(maxSpeed,<sp/>0.0d,<sp/>dec);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>durationWithMaxSpeed<sp/>=<sp/>distanceWithMaxSpeed<sp/>/<sp/>maxSpeed;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>movement<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement" kindref="compound">Movement</ref>(movement.<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement_1a26bab2672bccae609fd7f35d141bc148" kindref="member">getTrack</ref>(),<sp/>accDuration,durationWithMaxSpeed,breakingDuration,initialSpeed,maxSpeed,0.0d);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>acceleration<sp/>phase<sp/>is<sp/>just<sp/>followed<sp/>by<sp/>the<sp/>deceleration<sp/>phase<sp/>after<sp/>the<sp/>maximum<sp/>speed<sp/>is<sp/>reached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//then<sp/>the<sp/>moving<sp/>duration<sp/>is<sp/>the<sp/>sum<sp/>of<sp/>the<sp/>duration<sp/>of<sp/>the<sp/>acceleration<sp/>to<sp/>the<sp/>maximum<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>the<sp/>breaking<sp/>duration<sp/>from<sp/>the<sp/>maximum<sp/>speed<sp/>to<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(maxAcceleratedSpeed<sp/>==<sp/>maxSpeed){</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>accDuration<sp/>=<sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a9590fb45375fb782b13c1e7aefcd09ef" kindref="member">getDurationOfSpeedBoundedAcceleration</ref>(initialSpeed,<sp/>maxSpeed,<sp/>acc);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>breakingDuration<sp/>=<sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a9590fb45375fb782b13c1e7aefcd09ef" kindref="member">getDurationOfSpeedBoundedAcceleration</ref>(maxSpeed,<sp/>0.0d,<sp/>dec);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>movement<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement" kindref="compound">Movement</ref>(movement.<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement_1a26bab2672bccae609fd7f35d141bc148" kindref="member">getTrack</ref>(),<sp/>accDuration,0.0d,breakingDuration,initialSpeed,maxSpeed,0.0d);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>distance<sp/>isn&apos;t<sp/>enough<sp/>for<sp/>the<sp/>maximum<sp/>speed<sp/>to<sp/>be<sp/>reached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//then<sp/>the<sp/>moving<sp/>duration<sp/>is<sp/>the<sp/>sum<sp/>of<sp/>the<sp/>duration<sp/>of<sp/>the<sp/>acceleration<sp/>to<sp/>the<sp/>reachable<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>the<sp/>breaking<sp/>duration<sp/>from<sp/>the<sp/>reachable<sp/>speed<sp/>to<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>accDuration<sp/>=<sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a9590fb45375fb782b13c1e7aefcd09ef" kindref="member">getDurationOfSpeedBoundedAcceleration</ref>(initialSpeed,<sp/>maxAcceleratedSpeed,<sp/>acc);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>breakingDuration<sp/>=<sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a9590fb45375fb782b13c1e7aefcd09ef" kindref="member">getDurationOfSpeedBoundedAcceleration</ref>(maxAcceleratedSpeed,<sp/>0.0d,<sp/>dec);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>movement<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement" kindref="compound">Movement</ref>(movement.<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement_1a26bab2672bccae609fd7f35d141bc148" kindref="member">getTrack</ref>(),<sp/>accDuration,0.0d,breakingDuration,initialSpeed,maxAcceleratedSpeed,0.0d);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>initialSpeed<sp/>lies<sp/>over<sp/>the<sp/>maximum<sp/>speed,<sp/>means<sp/>a<sp/>break<sp/>to<sp/>the<sp/>new<sp/>maxSpeed<sp/>is<sp/>necessary<sp/>at<sp/>the<sp/>beginning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distanceWithMaxSpeed<sp/>=<sp/>totalDistance<sp/>-<sp/>breakToZeroDistance;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>durationWithMaxSpeed<sp/>=<sp/>distanceWithMaxSpeed<sp/>/<sp/>maxSpeed;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>movement<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement" kindref="compound">Movement</ref>(movement.<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement_1a26bab2672bccae609fd7f35d141bc148" kindref="member">getTrack</ref>(),<sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a9590fb45375fb782b13c1e7aefcd09ef" kindref="member">getDurationOfSpeedBoundedAcceleration</ref>(initialSpeed,<sp/>maxSpeed,<sp/>dec),durationWithMaxSpeed,<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a9590fb45375fb782b13c1e7aefcd09ef" kindref="member">getDurationOfSpeedBoundedAcceleration</ref>(maxSpeed,<sp/>0,<sp/>dec),initialSpeed,maxSpeed,0.0d);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>breaking<sp/>distance<sp/>longer<sp/>than<sp/>the<sp/>distance<sp/>to<sp/>the<sp/>destination<sp/>an<sp/>exception<sp/>will<sp/>be<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(breakToZeroDistance&gt;totalDistance){</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>initial<sp/>speed<sp/>is<sp/>too<sp/>high.<sp/>It&apos;s<sp/>not<sp/>possible<sp/>to<sp/>break<sp/>to<sp/>zero<sp/>within<sp/>the<sp/>given<sp/>distance.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>breaking<sp/>distance<sp/>is<sp/>exactly<sp/>the<sp/>distance<sp/>to<sp/>the<sp/>destination,<sp/>it&apos;ll<sp/>break<sp/>to<sp/>zero<sp/>immediately.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>movement<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement" kindref="compound">Movement</ref>(movement.<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement_1a26bab2672bccae609fd7f35d141bc148" kindref="member">getTrack</ref>(),<sp/>0.0d,0.0d,<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a9590fb45375fb782b13c1e7aefcd09ef" kindref="member">getDurationOfSpeedBoundedAcceleration</ref>(initialSpeed,<sp/>0.0d,<sp/>dec),initialSpeed,0.0d,0.0d);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>movement;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a7c52992e3aeea61e0a7aad8dd1cb88d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a7c52992e3aeea61e0a7aad8dd1cb88d0" kindref="member">getAcceleration</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initialSpeed,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>endSpeed,<sp/><ref refid="classdesmoj_1_1core_1_1simulator_1_1_time_span" kindref="compound">TimeSpan</ref><sp/>duration){</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>durationValue<sp/>=<sp/>duration.getTimeAsDouble(TimeUnit.SECONDS);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(durationValue&lt;0){</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>duration<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>0.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(durationValue==0){</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>duration<sp/>can&apos;t<sp/>be<sp/>0.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(endSpeed-initialSpeed)/durationValue;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1aa6171e1d21d8faaa09a00892f8bf51d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1aa6171e1d21d8faaa09a00892f8bf51d1" kindref="member">getCurrentSpeed</ref>(<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement" kindref="compound">Movement</ref><sp/>movement,<sp/><ref refid="classdesmoj_1_1core_1_1simulator_1_1_time_instant" kindref="compound">TimeInstant</ref><sp/>movingStartTime,<sp/><ref refid="classdesmoj_1_1core_1_1simulator_1_1_time_instant" kindref="compound">TimeInstant</ref><sp/>now)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>duration<sp/>how<sp/>long<sp/>the<sp/>object<sp/>has<sp/>already<sp/>moved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeDelta<sp/>=<sp/>now.getTimeAsDouble(TimeUnit.SECONDS)<sp/>-<sp/>movingStartTime.<ref refid="classdesmoj_1_1core_1_1simulator_1_1_time_instant_1a8950df6fa11e90f358e5b0a7d9cab7d4" kindref="member">getTimeAsDouble</ref>(TimeUnit.SECONDS);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>elapsed<sp/>time<sp/>is<sp/>in<sp/>the<sp/>acceleration<sp/>phase<sp/>of<sp/>the<sp/>movement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timeDelta&lt;movement.<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement_1abfb9f2ddd5e806c5efae582db65ce247" kindref="member">getAccDuration</ref>().getTimeAsDouble(TimeUnit.SECONDS)){</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1ae0432e032d431c0e0b383edccf73bdf8" kindref="member">getSpeedOfTimedAcceleration</ref>(timeDelta,<sp/>movement.<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement_1ae4c3747d6707ec287098c94a06a9e0c8" kindref="member">getInitialSpeed</ref>(),<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a7c52992e3aeea61e0a7aad8dd1cb88d0" kindref="member">getAcceleration</ref>(movement.<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement_1ae4c3747d6707ec287098c94a06a9e0c8" kindref="member">getInitialSpeed</ref>(),movement.getMaxSpeed(),movement.<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement_1abfb9f2ddd5e806c5efae582db65ce247" kindref="member">getAccDuration</ref>()));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>elapsed<sp/>time<sp/>is<sp/>in<sp/>the<sp/>maximum<sp/>speed<sp/>phase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timeDelta&lt;=(movement.<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement_1abfb9f2ddd5e806c5efae582db65ce247" kindref="member">getAccDuration</ref>().getTimeAsDouble(TimeUnit.SECONDS)+movement.<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement_1a1627ad62de5f66d5f5f19520defc5f62" kindref="member">getMaxSpeedDuration</ref>().getTimeAsDouble(TimeUnit.SECONDS))){</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>movement.getMaxSpeed();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>elapsed<sp/>time<sp/>is<sp/>in<sp/>the<sp/>deceleration<sp/>phase<sp/>of<sp/>the<sp/>movement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timeDelta&lt;movement.<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement_1a1aa04335e285a04d97b270aa8baf8f38" kindref="member">getTotalDuration</ref>().getTimeAsDouble(TimeUnit.SECONDS)){</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>elapsed<sp/>time<sp/>in<sp/>the<sp/>deceleration<sp/>phase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>decelerationDuration<sp/>=<sp/>timeDelta-(movement.getAccDuration().getTimeAsDouble(TimeUnit.SECONDS)+movement.getMaxSpeedDuration().getTimeAsDouble(TimeUnit.SECONDS));</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1ae0432e032d431c0e0b383edccf73bdf8" kindref="member">getSpeedOfTimedAcceleration</ref>(decelerationDuration,<sp/>movement.<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement_1a5544ed4c653e2ace65f8da514bc9996a" kindref="member">getMaxSpeed</ref>(),<sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a7c52992e3aeea61e0a7aad8dd1cb88d0" kindref="member">getAcceleration</ref>(movement.<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement_1a5544ed4c653e2ace65f8da514bc9996a" kindref="member">getMaxSpeed</ref>(),<sp/>movement.getEndSpeed(),<sp/>movement.<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement_1ad661100465d4d2330539e6a3a5cbe2c1" kindref="member">getDecDuration</ref>()));</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>moved<sp/>time<sp/>is<sp/>exactly<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>movement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timeDelta==movement.<ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_movement_1a1aa04335e285a04d97b270aa8baf8f38" kindref="member">getTotalDuration</ref>().getTimeAsDouble(TimeUnit.SECONDS)){</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>movement.getEndSpeed();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>elapsed<sp/>time<sp/>is<sp/>greater<sp/>than<sp/>the<sp/>total<sp/>movement<sp/>duration,<sp/>an<sp/>exception<sp/>will<sp/>be<sp/>thrown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>duration<sp/>can&apos;t<sp/>be<sp/>greater<sp/>than<sp/>the<sp/>total<sp/>movement<sp/>duration.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a56ec32ff8a930a37fee4412e5951da29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a56ec32ff8a930a37fee4412e5951da29" kindref="member">getDistanceOfSpeedBoundedAcceleration</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initialSpeed,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>endSpeed,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acc)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((endSpeed&lt;initialSpeed&amp;&amp;acc&gt;0.0d)||(endSpeed&gt;initialSpeed&amp;&amp;acc&lt;0.0d)){</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>sign<sp/>of<sp/>the<sp/>start<sp/>and<sp/>end<sp/>speed<sp/>don&apos;t<sp/>match<sp/>to<sp/>the<sp/>sign<sp/>of<sp/>the<sp/>acceleration<sp/>or<sp/>the<sp/>deceleration.<sp/>The<sp/>duration<sp/>can&apos;t<sp/>be<sp/>calculated.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acc<sp/>==<sp/>0.0d){</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>acceleration<sp/>can&apos;t<sp/>be<sp/>zero.<sp/>The<sp/>distance<sp/>can&apos;t<sp/>be<sp/>calculated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(endSpeed<sp/>*<sp/>endSpeed<sp/>-<sp/>initialSpeed<sp/>*<sp/>initialSpeed)<sp/>/<sp/>(2<sp/>*<sp/>acc);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1af88b6fad0dd1b1185f96a77410f3b3bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1af88b6fad0dd1b1185f96a77410f3b3bf" kindref="member">getDistanceOfTimedAcceleration</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>duration,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initialSpeed,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acc)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(initialSpeed&lt;0){</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>initial<sp/>speed<sp/>can&apos;t<sp/>be<sp/>negative.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(acc&gt;=0){</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(acc*duration*0.5*duration)<sp/>+<sp/>(initialSpeed*duration);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Math.max(0.0d,<sp/>(acc*duration*0.5*duration)<sp/>+<sp/>(initialSpeed*duration));</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1aa2937e36f2bb476ad2b7b9c264f0fd9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1aa2937e36f2bb476ad2b7b9c264f0fd9c" kindref="member">getDurationOfDistanceBoundedMovement</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distance,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initialSpeed,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>endSpeed){</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(distance&lt;0.0||initialSpeed&lt;0.0||endSpeed&lt;0.0){</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;All<sp/>the<sp/>parameters<sp/>have<sp/>to<sp/>be<sp/>positive.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(initialSpeed+endSpeed==0){</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>initial<sp/>speed<sp/>and<sp/>the<sp/>end<sp/>speed<sp/>can&apos;t<sp/>be<sp/>both<sp/>zero.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(distance*2)/(initialSpeed+endSpeed);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a9590fb45375fb782b13c1e7aefcd09ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a9590fb45375fb782b13c1e7aefcd09ef" kindref="member">getDurationOfSpeedBoundedAcceleration</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initialSpeed,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>endSpeed,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acc)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((endSpeed&lt;initialSpeed&amp;&amp;acc&gt;0.0d)||(endSpeed&gt;initialSpeed&amp;&amp;acc&lt;0.0d)){</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>sign<sp/>of<sp/>the<sp/>start<sp/>and<sp/>end<sp/>speed<sp/>don&apos;t<sp/>match<sp/>to<sp/>the<sp/>sign<sp/>of<sp/>the<sp/>acceleration<sp/>or<sp/>the<sp/>deceleration.<sp/>The<sp/>duration<sp/>can&apos;t<sp/>be<sp/>calculated.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(acc==0.0){</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>acceleration<sp/>can&apos;t<sp/>be<sp/>zero.<sp/>The<sp/>duration<sp/>can&apos;t<sp/>be<sp/>calculated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(initialSpeed<sp/>==<sp/>endSpeed){</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(endSpeed<sp/>-<sp/>initialSpeed)<sp/>/<sp/>acc;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="420" refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1abca46ed18d939e15189a48f5ad70918d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1abca46ed18d939e15189a48f5ad70918d" kindref="member">getMaxAcceleratedSpeed</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distance,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initialSpeed,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>endSpeed,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acc,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dec)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(acc==dec){</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>acceleration<sp/>can&apos;t<sp/>have<sp/>the<sp/>same<sp/>value<sp/>as<sp/>the<sp/>deceleration.<sp/>Normally<sp/>they<sp/>have<sp/>different<sp/>sign.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>squaredSpeed<sp/>=<sp/>((2<sp/>*<sp/>acc<sp/>*<sp/>dec<sp/>*<sp/>distance)<sp/>+<sp/>(dec<sp/>*<sp/>initialSpeed<sp/>*<sp/>initialSpeed)<sp/>-<sp/>(acc<sp/>*<sp/>endSpeed<sp/>*<sp/>endSpeed))<sp/>/<sp/>(dec<sp/>-<sp/>acc);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(squaredSpeed&lt;0){</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>squareroot<sp/>of<sp/>a<sp/>negative<sp/>value<sp/>should<sp/>be<sp/>calculated.<sp/>Please<sp/>check<sp/>the<sp/>input&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Math.sqrt(squaredSpeed);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="441" refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a86b11a58d761bc2ee4b7079f47aa55db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1a86b11a58d761bc2ee4b7079f47aa55db" kindref="member">getSpeedOfDistanceBoundedAcceleration</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distance,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initialSpeed,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acc){</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(distance&lt;0){</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>acceleration<sp/>distance<sp/>can&apos;t<sp/>be<sp/>negative.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(initialSpeed&lt;0){</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>initial<sp/>speed<sp/>can&apos;t<sp/>be<sp/>negative.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>speedSqr<sp/>=<sp/>(initialSpeed*initialSpeed)<sp/>+<sp/>(2*acc*distance);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(speedSqr&lt;0){</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>input.<sp/>The<sp/>squareroot<sp/>of<sp/>a<sp/>negative<sp/>value<sp/>is<sp/>tried<sp/>to<sp/>be<sp/>calculated.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Math.sqrt(speedSqr);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="462" refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1ae0432e032d431c0e0b383edccf73bdf8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classdesmoj_1_1extensions_1_1space3_d_1_1_kinematics_calculations_1ae0432e032d431c0e0b383edccf73bdf8" kindref="member">getSpeedOfTimedAcceleration</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>duration,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initialSpeed,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acc)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(initialSpeed&lt;0){</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IllegalArgumentException(</highlight><highlight class="stringliteral">&quot;The<sp/>initial<sp/>speed<sp/>can&apos;t<sp/>be<sp/>negative.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Math.max(0.0d,<sp/>acc<sp/>*<sp/>duration<sp/>+<sp/>initialSpeed);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/extensions/space3D/KinematicsCalculations.java"/>
  </compounddef>
</doxygen>
