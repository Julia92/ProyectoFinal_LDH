<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl" kind="class" prot="public">
    <compoundname>org::apache::commons::math::distribution::PoissonDistributionImpl</compoundname>
    <basecompoundref refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution" prot="public" virt="non-virtual">org.apache.commons.math.distribution.AbstractIntegerDistribution</basecompoundref>
    <basecompoundref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution" prot="public" virt="non-virtual">org.apache.commons.math.distribution.PoissonDistribution</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Serializable</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1aa013e08f2f3557dc3dbaf77d3980f5d7" prot="private" static="yes" mutable="no">
        <type>final long</type>
        <definition>final long org.apache.commons.math.distribution.PoissonDistributionImpl.serialVersionUID</definition>
        <argsstring></argsstring>
        <name>serialVersionUID</name>
        <initializer>= -3349935121172596109L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializable version identifier </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" line="34" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1aff9c7133aac6b5f1906bcf3227fdabdd" prot="private" static="no" mutable="no">
        <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_normal_distribution" kindref="compound">NormalDistribution</ref></type>
        <definition>NormalDistribution org.apache.commons.math.distribution.PoissonDistributionImpl.normal</definition>
        <argsstring></argsstring>
        <name>normal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution" kindref="compound">Distribution</ref> used to compute normal approximation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" line="37" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a27b55d02e916adb1bec6ba3004aada60" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.PoissonDistributionImpl.mean</definition>
        <argsstring></argsstring>
        <name>mean</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Holds the Poisson mean for the distribution. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" line="42" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a23f95026c517140252df5729cf6b5293" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl</definition>
        <argsstring>(double p)</argsstring>
        <name>PoissonDistributionImpl</name>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new Poisson distribution with the given the mean. The mean value must be positive; otherwise an <computeroutput>IllegalArgument</computeroutput> is thrown.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the Poisson mean </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if p <le/> 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" line="52" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a81c68dffd62a3d4aacfcbab3241eda12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl</definition>
        <argsstring>(double p, NormalDistribution z)</argsstring>
        <name>PoissonDistributionImpl</name>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_normal_distribution" kindref="compound">NormalDistribution</ref></type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new Poisson distribution with the given the mean. The mean value must be positive; otherwise an <computeroutput>IllegalArgument</computeroutput> is thrown.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the Poisson mean </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>a normal distribution used to compute normal approximations. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if p <le/> 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>1.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" line="66" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" bodystart="66" bodyend="70"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a7566751594f1f531739b50eb5546da91" compoundref="_poisson_distribution_impl_8java" startline="180" endline="182">org.apache.commons.math.distribution.PoissonDistributionImpl.setNormal</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1ab7161707f5b1ce4f0f796e9db1300128" compoundref="_poisson_distribution_impl_8java" startline="89" endline="97">org.apache.commons.math.distribution.PoissonDistributionImpl.setMean</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a120cc3954769ee7ab4a2c5f8fdeccb48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.PoissonDistributionImpl.getMean</definition>
        <argsstring>()</argsstring>
        <name>getMean</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_1a7b2f2fd4f938b93659daecb1561cac91">getMean</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the Poisson mean for the distribution.</para><para><simplesect kind="return"><para>the Poisson mean for the distribution. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" line="77" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1ab7161707f5b1ce4f0f796e9db1300128" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.math.distribution.PoissonDistributionImpl.setMean</definition>
        <argsstring>(double p)</argsstring>
        <name>setMean</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_1a4238480da43e92d9fb5304dd7e39d4e8">setMean</reimplements>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the Poisson mean for the distribution. The mean value must be positive; otherwise an <computeroutput>IllegalArgument</computeroutput> is thrown.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the Poisson mean value </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if p <le/> 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" line="89" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" bodystart="89" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a987b9b587a890441e5798c31f8abf118" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.PoissonDistributionImpl.probability</definition>
        <argsstring>(int x)</argsstring>
        <name>probability</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution_1ae20d4195b3f5ab562d332070c82c4cdd">probability</reimplements>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The probability mass function P(X = x) for a Poisson distribution.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value at which the probability density function is evaluated. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the probability mass function at x </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" line="105" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" bodystart="105" bodyend="111"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a120cc3954769ee7ab4a2c5f8fdeccb48" compoundref="_poisson_distribution_impl_8java" startline="77" endline="79">org.apache.commons.math.distribution.PoissonDistributionImpl.getMean</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a2e000da460a84f0d651a6030ba3f0b80" compoundref="_math_utils_8java" startline="357" endline="362">org.apache.commons.math.util.MathUtils.factorialDouble</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a892f522be5fe3e199d1ae29571a1f99c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.PoissonDistributionImpl.cumulativeProbability</definition>
        <argsstring>(int x)</argsstring>
        <name>cumulativeProbability</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1af64ac51473a3452bf6c2d4cc95b470c6">cumulativeProbability</reimplements>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The probability distribution function P(X &lt;= x) for a Poisson distribution.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value at which the PDF is evaluated. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Poisson distribution function evaluated at x </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the cumulative probability can not be computed due to convergence or other numerical errors. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" line="121" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" bodystart="121" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a100f35b3bb50bf9606fd8ce008c656ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.PoissonDistributionImpl.normalApproximateProbability</definition>
        <argsstring>(int x)</argsstring>
        <name>normalApproximateProbability</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_1a1bb3e9ff23679ea89cf49d2f95986e30">normalApproximateProbability</reimplements>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the Poisson distribution function using a normal approximation. The <computeroutput>N(mean, sqrt(mean))</computeroutput> distribution is used to approximate the Poisson distribution. </para><para>The computation uses &quot;half-correction&quot; <ndash/> evaluating the normal distribution function at <computeroutput>x + 0.5</computeroutput></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the upper bound, inclusive </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the distribution function value calculated using a normal approximation </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if an error occurs computing the normal approximation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" line="144" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a7566751594f1f531739b50eb5546da91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.math.distribution.PoissonDistributionImpl.setNormal</definition>
        <argsstring>(NormalDistribution value)</argsstring>
        <name>setNormal</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_normal_distribution" kindref="compound">NormalDistribution</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Modify the normal distribution used to compute normal approximations. The caller is responsible for insuring the normal distribution has the proper parameter settings. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the new distribution </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>1.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" line="180" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" bodystart="180" bodyend="182"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a3ca89329663129976a0e663704510ae4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int org.apache.commons.math.distribution.PoissonDistributionImpl.getDomainLowerBound</definition>
        <argsstring>(double p)</argsstring>
        <name>getDomainLowerBound</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1a9e292c6a847a50d2bff94d8b6f4571a3">getDomainLowerBound</reimplements>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the domain value lower bound, based on <computeroutput>p</computeroutput>, used to bracket a CDF root. This method is used by <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution_1a1f81723addd210b0a5b69aa29611938e" kindref="member">inverseCumulativeProbability(double)</ref> to find critical values.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired probability for the critical value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>domain lower bound </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" line="157" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" bodystart="157" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a46c85859c5c59028eb081c8a3636e3ad" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int org.apache.commons.math.distribution.PoissonDistributionImpl.getDomainUpperBound</definition>
        <argsstring>(double p)</argsstring>
        <name>getDomainUpperBound</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1a916035a8a060fc4b055f7fadafa3a383">getDomainUpperBound</reimplements>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the domain value upper bound, based on <computeroutput>p</computeroutput>, used to bracket a CDF root. This method is used by <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution_1a1f81723addd210b0a5b69aa29611938e" kindref="member">inverseCumulativeProbability(double)</ref> to find critical values.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired probability for the critical value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>domain upper bound </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" line="169" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" bodystart="169" bodyend="171"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Implementation for the <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution" kindref="compound">PoissonDistribution</ref>.</para><para><simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision:</title><para>617953 </para></simplesect>
<simplesect kind="rcs"><title>Date:</title><para>2008-02-02 22:54:00 -0700 (Sat, 02 Feb 2008) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="9442">
        <label>org.apache.commons.math.distribution.AbstractIntegerDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution"/>
        <childnode refid="9443" relation="public-inheritance">
        </childnode>
        <childnode refid="9446" relation="public-inheritance">
        </childnode>
        <childnode refid="9445" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9441">
        <label>org.apache.commons.math.distribution.PoissonDistributionImpl</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl"/>
        <childnode refid="9442" relation="public-inheritance">
        </childnode>
        <childnode refid="9448" relation="public-inheritance">
        </childnode>
        <childnode refid="9445" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9446">
        <label>org.apache.commons.math.distribution.IntegerDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution"/>
        <childnode refid="9447" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9445">
        <label>Serializable</label>
      </node>
      <node id="9448">
        <label>org.apache.commons.math.distribution.PoissonDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution"/>
        <childnode refid="9446" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9443">
        <label>org.apache.commons.math.distribution.AbstractDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_distribution"/>
        <childnode refid="9444" relation="public-inheritance">
        </childnode>
        <childnode refid="9445" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9444">
        <label>org.apache.commons.math.distribution.Distribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution"/>
      </node>
      <node id="9447">
        <label>org.apache.commons.math.distribution.DiscreteDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_discrete_distribution"/>
        <childnode refid="9444" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9450">
        <label>org.apache.commons.math.distribution.AbstractIntegerDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution"/>
        <childnode refid="9451" relation="public-inheritance">
        </childnode>
        <childnode refid="9454" relation="public-inheritance">
        </childnode>
        <childnode refid="9453" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9449">
        <label>org.apache.commons.math.distribution.PoissonDistributionImpl</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl"/>
        <childnode refid="9450" relation="public-inheritance">
        </childnode>
        <childnode refid="9456" relation="public-inheritance">
        </childnode>
        <childnode refid="9453" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9454">
        <label>org.apache.commons.math.distribution.IntegerDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution"/>
        <childnode refid="9455" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9453">
        <label>Serializable</label>
      </node>
      <node id="9456">
        <label>org.apache.commons.math.distribution.PoissonDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution"/>
        <childnode refid="9454" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9451">
        <label>org.apache.commons.math.distribution.AbstractDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_distribution"/>
        <childnode refid="9452" relation="public-inheritance">
        </childnode>
        <childnode refid="9453" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9452">
        <label>org.apache.commons.math.distribution.Distribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution"/>
      </node>
      <node id="9455">
        <label>org.apache.commons.math.distribution.DiscreteDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_discrete_distribution"/>
        <childnode refid="9452" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" line="31" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PoissonDistributionImpl.java" bodystart="30" bodyend="184"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_distribution_1a69b03d7cd00b00c946eea69dfa8da7ba" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::distribution::PoissonDistributionImpl</scope><name>AbstractDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1a5319f9938a77a957c740bd552a2ce2ba" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::distribution::PoissonDistributionImpl</scope><name>AbstractIntegerDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a892f522be5fe3e199d1ae29571a1f99c" prot="public" virt="virtual"><scope>org::apache::commons::math::distribution::PoissonDistributionImpl</scope><name>cumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1ab1cf216fde5141e5cc5a448bf387a8a1" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::AbstractIntegerDistribution."><scope>org::apache::commons::math::distribution::PoissonDistributionImpl</scope><name>cumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1a5a311468d6c2ba4d51710302f716afef" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::AbstractIntegerDistribution."><scope>org::apache::commons::math::distribution::PoissonDistributionImpl</scope><name>cumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1a8bae6edc0a95af6afaa6a09f6c0944ce" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::AbstractIntegerDistribution."><scope>org::apache::commons::math::distribution::PoissonDistributionImpl</scope><name>cumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a3ca89329663129976a0e663704510ae4" prot="protected" virt="virtual"><scope>org::apache::commons::math::distribution::PoissonDistributionImpl</scope><name>getDomainLowerBound</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a46c85859c5c59028eb081c8a3636e3ad" prot="protected" virt="virtual"><scope>org::apache::commons::math::distribution::PoissonDistributionImpl</scope><name>getDomainUpperBound</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a120cc3954769ee7ab4a2c5f8fdeccb48" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::PoissonDistributionImpl</scope><name>getMean</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1afc3955226e809146a1ff1e7f5d3945e5" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::PoissonDistributionImpl</scope><name>inverseCumulativeProbability</name></member>
      <member refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution_1a1f81723addd210b0a5b69aa29611938e" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::IntegerDistribution."><scope>org::apache::commons::math::distribution::PoissonDistributionImpl</scope><name>inverseCumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a27b55d02e916adb1bec6ba3004aada60" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::PoissonDistributionImpl</scope><name>mean</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1aff9c7133aac6b5f1906bcf3227fdabdd" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::PoissonDistributionImpl</scope><name>normal</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a100f35b3bb50bf9606fd8ce008c656ca" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::PoissonDistributionImpl</scope><name>normalApproximateProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a23f95026c517140252df5729cf6b5293" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::PoissonDistributionImpl</scope><name>PoissonDistributionImpl</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a81c68dffd62a3d4aacfcbab3241eda12" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::PoissonDistributionImpl</scope><name>PoissonDistributionImpl</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a987b9b587a890441e5798c31f8abf118" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::PoissonDistributionImpl</scope><name>probability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1a3535594dbf1de8fe562aa1a55ac6ae83" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::AbstractIntegerDistribution."><scope>org::apache::commons::math::distribution::PoissonDistributionImpl</scope><name>probability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1aa013e08f2f3557dc3dbaf77d3980f5d7" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::PoissonDistributionImpl</scope><name>serialVersionUID</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1ab7161707f5b1ce4f0f796e9db1300128" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::PoissonDistributionImpl</scope><name>setMean</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a7566751594f1f531739b50eb5546da91" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::PoissonDistributionImpl</scope><name>setNormal</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
