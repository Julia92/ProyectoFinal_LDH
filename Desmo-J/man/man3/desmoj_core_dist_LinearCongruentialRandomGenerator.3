.TH "desmoj.core.dist.LinearCongruentialRandomGenerator" 3 "Wed Dec 4 2013" "Version 1.0" "Desmo-J" \" -*- nroff -*-
.ad l
.nh
.SH NAME
desmoj.core.dist.LinearCongruentialRandomGenerator \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBdesmoj\&.core\&.dist\&.UniformRandomGenerator\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBLinearCongruentialRandomGenerator\fP ()"
.br
.ti -1c
.RI "\fBLinearCongruentialRandomGenerator\fP (long seed)"
.br
.ti -1c
.RI "double \fBnextDouble\fP ()"
.br
.ti -1c
.RI "void \fBsetSeed\fP (long newSeed)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "Random \fBjavaAPIRandomGenerator\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Linear congruential random generator for uniformly distributed pseudo random numbers configured such that a stream of [0,1] double values is produced\&. Implements the \fCdesmoj\&.dist\&.UniformRandomGenerator\fP interface\&. All \fCDistributions\fP in this package use this random generator by default\&. The implementation is based on the Java API \fCjava\&.util\&.Random\fP class' random generator\&. The Java API Random class uses a 48-bit seed as input to the linear congruential formula\&. (See Donald Knuth, The Art of Computer Programming, Volume 2, Section 3\&.2\&.1\&.)
.PP
\fBSee Also:\fP
.RS 4
\fBdesmoj\&.core\&.dist\&.UniformRandomGenerator\fP 
.PP
\fBdesmoj\&.core\&.dist\&.Distribution\fP 
.PP
java\&.util\&.Random
.RE
.PP
\fBVersion:\fP
.RS 4
DESMO-J, Ver\&. 2\&.4\&.0 copyright (c) 2013 
.RE
.PP
\fBAuthor:\fP
.RS 4
Tim Lechler 
.PP
.nf
    Licensed under the Apache License, Version 2.0 (the "License"); you
    may not use this file except in compliance with the License. You may
    obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
    implied. See the License for the specific language governing
    permissions and limitations under the License.
.fi
.PP
 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "desmoj\&.core\&.dist\&.LinearCongruentialRandomGenerator\&.LinearCongruentialRandomGenerator ()"
Creates a DefaultrandomGenerator with seed 42\&. The value 42 has been taken by pure coincidence\&. It is not really related to Douglas Adams' 'Hitchhikers Guide to the Galaxy' trilogy of five books (so far)\&. 
.SS "desmoj\&.core\&.dist\&.LinearCongruentialRandomGenerator\&.LinearCongruentialRandomGenerator (longseed)"
Creates a DefaultrandomGenerator with given value as initial seed\&.
.PP
\fBParameters:\fP
.RS 4
\fIseed\fP long : The initial seed of the underlying pseudo random generator 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "double desmoj\&.core\&.dist\&.LinearCongruentialRandomGenerator\&.nextDouble ()"
Returns the next pseudo random uniform [0,1] distributed double value from the stream produced by the underlying pseudo random number generator\&.
.PP
\fBReturns:\fP
.RS 4
double : The next pseudo random uniform [0,1] distributed double value 
.RE
.PP

.PP
Implements \fBdesmoj\&.core\&.dist\&.UniformRandomGenerator\fP\&.
.SS "void desmoj\&.core\&.dist\&.LinearCongruentialRandomGenerator\&.setSeed (longnewSeed)"
Sets the seed for the pseudo random number generator\&.
.PP
\fBParameters:\fP
.RS 4
\fInewSeed\fP long : The new initial seed value for the pseudo random number generator 
.RE
.PP

.PP
Implements \fBdesmoj\&.core\&.dist\&.UniformRandomGenerator\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "Random desmoj\&.core\&.dist\&.LinearCongruentialRandomGenerator\&.javaAPIRandomGenerator\fC [protected]\fP"
The random generator provided by the Java API class \fCjava\&.util\&.Random\fP 

.SH "Author"
.PP 
Generated automatically by Doxygen for Desmo-J from the source code\&.
