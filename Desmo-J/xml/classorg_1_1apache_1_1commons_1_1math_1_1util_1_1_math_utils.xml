<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils" kind="class" prot="public">
    <compoundname>org::apache::commons::math::util::MathUtils</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1adfab80479a21f0d8b259813926a13426" prot="private" static="yes" mutable="no">
        <type>final byte</type>
        <definition>final byte org.apache.commons.math.util.MathUtils.NB</definition>
        <argsstring></argsstring>
        <name>NB</name>
        <initializer>= (byte)-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>-1.0 cast as a byte. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="29" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1afa624450b2c31c7845cd7c7520f2d2ed" prot="private" static="yes" mutable="no">
        <type>final short</type>
        <definition>final short org.apache.commons.math.util.MathUtils.NS</definition>
        <argsstring></argsstring>
        <name>NS</name>
        <initializer>= (short)-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>-1.0 cast as a short. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="32" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a912d63ae1a638198adf23908a35c18f5" prot="private" static="yes" mutable="no">
        <type>final byte</type>
        <definition>final byte org.apache.commons.math.util.MathUtils.PB</definition>
        <argsstring></argsstring>
        <name>PB</name>
        <initializer>= (byte)1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>1.0 cast as a byte. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="35" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1aacc8f19932eb7792647c5c8d36ab9711" prot="private" static="yes" mutable="no">
        <type>final short</type>
        <definition>final short org.apache.commons.math.util.MathUtils.PS</definition>
        <argsstring></argsstring>
        <name>PS</name>
        <initializer>= (short)1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>1.0 cast as a short. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="38" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ae208769219b364355f50e89393cb0547" prot="private" static="yes" mutable="no">
        <type>final byte</type>
        <definition>final byte org.apache.commons.math.util.MathUtils.ZB</definition>
        <argsstring></argsstring>
        <name>ZB</name>
        <initializer>= (byte)0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0.0 cast as a byte. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="41" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a7a8cdda450c3e261dea4762f458f465c" prot="private" static="yes" mutable="no">
        <type>final short</type>
        <definition>final short org.apache.commons.math.util.MathUtils.ZS</definition>
        <argsstring></argsstring>
        <name>ZS</name>
        <initializer>= (short)0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0.0 cast as a short. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="44" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a504bcefe16a36b295287b5ec3b0d1a58" prot="private" static="yes" mutable="no">
        <type>final double</type>
        <definition>final double org.apache.commons.math.util.MathUtils.TWO_PI</definition>
        <argsstring></argsstring>
        <name>TWO_PI</name>
        <initializer>= 2 * Math.PI</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>2 <pi/>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="47" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ac71387811c8009330b6f3593d1107e1d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.math.util.MathUtils.MathUtils</definition>
        <argsstring>()</argsstring>
        <name>MathUtils</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Private Constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="52" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="52" bodyend="54"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ae917242ef8c464ac78ebecfecaf63f1e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int org.apache.commons.math.util.MathUtils.addAndCheck</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>addAndCheck</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add two integers, checking for overflow.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>an addend </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>an addend </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the sum <computeroutput>x+y</computeroutput> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArithmeticException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the result can not be represented as an int </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="66" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="66" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a0eaa2da8307ffa3bcd04d5b5a9096d32" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long org.apache.commons.math.util.MathUtils.addAndCheck</definition>
        <argsstring>(long a, long b)</argsstring>
        <name>addAndCheck</name>
        <param>
          <type>long</type>
          <declname>a</declname>
        </param>
        <param>
          <type>long</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add two long integers, checking for overflow.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>an addend </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>an addend </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the sum <computeroutput>a+b</computeroutput> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArithmeticException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the result can not be represented as an long </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>1.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="84" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="84" bodyend="86"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ae917242ef8c464ac78ebecfecaf63f1e" compoundref="_math_utils_8java" startline="66" endline="72">org.apache.commons.math.util.MathUtils.addAndCheck</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a138bb573cced53f1eeed13c1f9062d45" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long org.apache.commons.math.util.MathUtils.binomialCoefficient</definition>
        <argsstring>(final int n, final int k)</argsstring>
        <name>binomialCoefficient</name>
        <param>
          <type>final int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>final int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an exact representation of the <ulink url="http://mathworld.wolfram.com/BinomialCoefficient.html">Binomial Coefficient</ulink>, &quot;&lt;code&gt;n choose k&lt;/code&gt;&quot;, the number of <computeroutput>k</computeroutput>-element subsets that can be selected from an <computeroutput>n</computeroutput>-element set. </para><para><bold>Preconditions</bold>: <itemizedlist>
<listitem>
<para><computeroutput>0 &lt;= k &lt;= n </computeroutput> (otherwise <computeroutput>IllegalArgumentException</computeroutput> is thrown) </para></listitem>
<listitem>
<para>The result is small enough to fit into a <computeroutput>long</computeroutput>. The largest value of <computeroutput>n</computeroutput> for which all coefficients are <computeroutput> &lt; Long.MAX_VALUE</computeroutput> is 66. If the computed value exceeds <computeroutput>Long.MAX_VALUE</computeroutput> an <computeroutput>ArithMeticException </computeroutput> is thrown. </para></listitem>
</itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the subsets to be counted </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>n choose k</computeroutput> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if preconditions are not met. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ArithmeticException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the result is too large to be represented by a long integer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="160" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="160" bodyend="182"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1aab6fe339d140d8df62545b2036ccec84" compoundref="_math_utils_8java" startline="206" endline="208">org.apache.commons.math.util.MathUtils.binomialCoefficientDouble</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1aab6fe339d140d8df62545b2036ccec84" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double org.apache.commons.math.util.MathUtils.binomialCoefficientDouble</definition>
        <argsstring>(final int n, final int k)</argsstring>
        <name>binomialCoefficientDouble</name>
        <param>
          <type>final int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>final int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <computeroutput>double</computeroutput> representation of the <ulink url="http://mathworld.wolfram.com/BinomialCoefficient.html">Binomial Coefficient</ulink>, &quot;&lt;code&gt;n choose k&lt;/code&gt;&quot;, the number of <computeroutput>k</computeroutput>-element subsets that can be selected from an <computeroutput>n</computeroutput>-element set. </para><para><bold>Preconditions</bold>: <itemizedlist>
<listitem>
<para><computeroutput>0 &lt;= k &lt;= n </computeroutput> (otherwise <computeroutput>IllegalArgumentException</computeroutput> is thrown) </para></listitem>
<listitem>
<para>The result is small enough to fit into a <computeroutput>double</computeroutput>. The largest value of <computeroutput>n</computeroutput> for which all coefficients are &lt; Double.MAX_VALUE is 1029. If the computed value exceeds Double.MAX_VALUE, Double.POSITIVE_INFINITY is returned </para></listitem>
</itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the subsets to be counted </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>n choose k</computeroutput> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if preconditions are not met. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="206" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="206" bodyend="208"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ae957d36ba17c1dcb746bdd56d243c3cf" compoundref="_math_utils_8java" startline="228" endline="256">org.apache.commons.math.util.MathUtils.binomialCoefficientLog</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ae957d36ba17c1dcb746bdd56d243c3cf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double org.apache.commons.math.util.MathUtils.binomialCoefficientLog</definition>
        <argsstring>(final int n, final int k)</argsstring>
        <name>binomialCoefficientLog</name>
        <param>
          <type>final int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>final int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the natural <computeroutput>log</computeroutput> of the <ulink url="http://mathworld.wolfram.com/BinomialCoefficient.html">Binomial Coefficient</ulink>, &quot;&lt;code&gt;n choose k&lt;/code&gt;&quot;, the number of <computeroutput>k</computeroutput>-element subsets that can be selected from an <computeroutput>n</computeroutput>-element set. </para><para><bold>Preconditions</bold>: <itemizedlist>
<listitem>
<para><computeroutput>0 &lt;= k &lt;= n </computeroutput> (otherwise <computeroutput>IllegalArgumentException</computeroutput> is thrown) </para></listitem>
</itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the subsets to be counted </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>n choose k</computeroutput> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if preconditions are not met. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="228" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="228" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a8ad278c26c97c411772df4676f390870" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double org.apache.commons.math.util.MathUtils.cosh</definition>
        <argsstring>(double x)</argsstring>
        <name>cosh</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the <ulink url="http://mathworld.wolfram.com/HyperbolicCosine.html">hyperbolic cosine</ulink> of x.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>double value for which to find the hyperbolic cosine </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hyperbolic cosine of x </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="265" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="265" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a59a7ad4221b57e13bafcd7e32907615b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>static boolean org.apache.commons.math.util.MathUtils.equals</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>equals</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true iff both arguments are NaN or neither is NaN and they are equal</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the values are equal or both are NaN </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="277" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="277" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a41dd8694f60d00ea854a045891cb1b31" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>static boolean org.apache.commons.math.util.MathUtils.equals</definition>
        <argsstring>(double[] x, double[] y)</argsstring>
        <name>equals</name>
        <param>
          <type>double[]</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double[]</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true iff both arguments are null or have same dimensions and all their elements are <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a59a7ad4221b57e13bafcd7e32907615b" kindref="member">equals</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>first array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>second array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the values are both null or have same dimension and equal elements </para></simplesect>
<simplesect kind="since"><para>1.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="291" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="291" bodyend="304"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a59a7ad4221b57e13bafcd7e32907615b" compoundref="_math_utils_8java" startline="277" endline="279">org.apache.commons.math.util.MathUtils.equals</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a75f49a3a106d6dcf3087a22d1987b74f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long org.apache.commons.math.util.MathUtils.factorial</definition>
        <argsstring>(final int n)</argsstring>
        <name>factorial</name>
        <param>
          <type>final int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns n!. Shorthand for <computeroutput>n</computeroutput> <ulink url="http://mathworld.wolfram.com/Factorial.html">Factorial</ulink>, the product of the numbers <computeroutput>1,...,n</computeroutput>. </para><para><bold>Preconditions</bold>: <itemizedlist>
<listitem>
<para><computeroutput>n &gt;= 0</computeroutput> (otherwise <computeroutput>IllegalArgumentException</computeroutput> is thrown) </para></listitem>
<listitem>
<para>The result is small enough to fit into a <computeroutput>long</computeroutput>. The largest value of <computeroutput>n</computeroutput> for which <computeroutput>n!</computeroutput> &lt; Long.MAX_VALUE is 20. If the computed value exceeds <computeroutput>Long.MAX_VALUE</computeroutput> an <computeroutput>ArithMeticException </computeroutput> is thrown. </para></listitem>
</itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>n!</computeroutput> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArithmeticException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the result is too large to be represented by a long integer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if n &lt; 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="328" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="328" bodyend="335"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a2e000da460a84f0d651a6030ba3f0b80" compoundref="_math_utils_8java" startline="357" endline="362">org.apache.commons.math.util.MathUtils.factorialDouble</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a2e000da460a84f0d651a6030ba3f0b80" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double org.apache.commons.math.util.MathUtils.factorialDouble</definition>
        <argsstring>(final int n)</argsstring>
        <name>factorialDouble</name>
        <param>
          <type>final int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns n!. Shorthand for <computeroutput>n</computeroutput> <ulink url="http://mathworld.wolfram.com/Factorial.html">Factorial</ulink>, the product of the numbers <computeroutput>1,...,n</computeroutput> as a <computeroutput>double</computeroutput>. </para><para><bold>Preconditions</bold>: <itemizedlist>
<listitem>
<para><computeroutput>n &gt;= 0</computeroutput> (otherwise <computeroutput>IllegalArgumentException</computeroutput> is thrown) </para></listitem>
<listitem>
<para>The result is small enough to fit into a <computeroutput>double</computeroutput>. The largest value of <computeroutput>n</computeroutput> for which <computeroutput>n!</computeroutput> &lt; Double.MAX_VALUE is 170. If the computed value exceeds Double.MAX_VALUE, Double.POSITIVE_INFINITY is returned </para></listitem>
</itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>n!</computeroutput> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if n &lt; 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="357" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="357" bodyend="362"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a1662250a915f961555eeefd9e922b469" compoundref="_math_utils_8java" startline="377" endline="386">org.apache.commons.math.util.MathUtils.factorialLog</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a1662250a915f961555eeefd9e922b469" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double org.apache.commons.math.util.MathUtils.factorialLog</definition>
        <argsstring>(final int n)</argsstring>
        <name>factorialLog</name>
        <param>
          <type>final int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the natural logarithm of n!. </para><para><bold>Preconditions</bold>: <itemizedlist>
<listitem>
<para><computeroutput>n &gt;= 0</computeroutput> (otherwise <computeroutput>IllegalArgumentException</computeroutput> is thrown) </para></listitem>
</itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>n!</computeroutput> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if preconditions are not met. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="377" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="377" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ac1cd2e43a4a696dcec596db626e646e6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int org.apache.commons.math.util.MathUtils.gcd</definition>
        <argsstring>(int u, int v)</argsstring>
        <name>gcd</name>
        <param>
          <type>int</type>
          <declname>u</declname>
        </param>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the greatest common divisor of the absolute value of two numbers, using the &quot;binary gcd&quot; method which avoids division and modulo operations. See Knuth 4.5.2 algorithm B. This algorithm is due to Josef Stein (1961). </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>a non-zero number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>a non-zero number </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the greatest common divisor, never zero </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="401" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="401" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1aa228e07fd4bcfe523fc7792a2d2d5121" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int org.apache.commons.math.util.MathUtils.hash</definition>
        <argsstring>(double value)</argsstring>
        <name>hash</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an integer hash code representing the given double value.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to be hashed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the hash code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="458" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="458" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a05e8efb700ece5f36257cdb9f7756fa4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int org.apache.commons.math.util.MathUtils.hash</definition>
        <argsstring>(double[] value)</argsstring>
        <name>hash</name>
        <param>
          <type>double[]</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an integer hash code representing the given double array value.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to be hashed (may be null) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the hash code </para></simplesect>
<simplesect kind="since"><para>1.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="470" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="470" bodyend="479"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1aa228e07fd4bcfe523fc7792a2d2d5121" compoundref="_math_utils_8java" startline="458" endline="461">org.apache.commons.math.util.MathUtils.hash</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1af283493d5a9f5ac479ed02a7427def21" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte</type>
        <definition>static byte org.apache.commons.math.util.MathUtils.indicator</definition>
        <argsstring>(final byte x)</argsstring>
        <name>indicator</name>
        <param>
          <type>final byte</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For a byte value x, this method returns (byte)(+1) if x &gt;= 0 and (byte)(-1) if x &lt; 0.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value, a byte </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(byte)(+1) or (byte)(-1), depending on the sign of x </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="488" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="488" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1aeb61ef6d61f6f5ca798d68001bd5f932" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double org.apache.commons.math.util.MathUtils.indicator</definition>
        <argsstring>(final double x)</argsstring>
        <name>indicator</name>
        <param>
          <type>final double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For a double precision value x, this method returns +1.0 if x &gt;= 0 and -1.0 if x &lt; 0. Returns <computeroutput>NaN</computeroutput> if <computeroutput>x</computeroutput> is <computeroutput>NaN</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value, a double </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>+1.0 or -1.0, depending on the sign of x </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="500" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="500" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ad1227be36db3e0f7c42c13ab2b5bf720" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float org.apache.commons.math.util.MathUtils.indicator</definition>
        <argsstring>(final float x)</argsstring>
        <name>indicator</name>
        <param>
          <type>final float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For a float value x, this method returns +1.0F if x &gt;= 0 and -1.0F if x &lt; 0. Returns <computeroutput>NaN</computeroutput> if <computeroutput>x</computeroutput> is <computeroutput>NaN</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value, a float </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>+1.0F or -1.0F, depending on the sign of x </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="514" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="514" bodyend="519"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a1099ca0f6e631fea4b583026f2becb7b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int org.apache.commons.math.util.MathUtils.indicator</definition>
        <argsstring>(final int x)</argsstring>
        <name>indicator</name>
        <param>
          <type>final int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For an int value x, this method returns +1 if x &gt;= 0 and -1 if x &lt; 0.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value, an int </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>+1 or -1, depending on the sign of x </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="527" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="527" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ab92e69d969cf138bae17e8027fc766a0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long org.apache.commons.math.util.MathUtils.indicator</definition>
        <argsstring>(final long x)</argsstring>
        <name>indicator</name>
        <param>
          <type>final long</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For a long value x, this method returns +1L if x &gt;= 0 and -1L if x &lt; 0.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value, a long </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>+1L or -1L, depending on the sign of x </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="537" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="537" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a8b6af213422e8c7cdc530d4c8a0236b4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>short</type>
        <definition>static short org.apache.commons.math.util.MathUtils.indicator</definition>
        <argsstring>(final short x)</argsstring>
        <name>indicator</name>
        <param>
          <type>final short</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For a short value x, this method returns (short)(+1) if x &gt;= 0 and (short)(-1) if x &lt; 0.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value, a short </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(short)(+1) or (short)(-1), depending on the sign of x </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="548" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="548" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1aeb4f19eda8c4902c254dfdc4e54fdfb0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int org.apache.commons.math.util.MathUtils.lcm</definition>
        <argsstring>(int a, int b)</argsstring>
        <name>lcm</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the least common multiple between two integer values.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>the first integer value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>the second integer value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the least common multiple between a and b. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArithmeticException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the lcm is too large to store as an int </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="561" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="561" bodyend="563"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1afda7d04d5558c781c9c6236aa9cca367" compoundref="_math_utils_8java" startline="595" endline="601">org.apache.commons.math.util.MathUtils.mulAndCheck</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ac1cd2e43a4a696dcec596db626e646e6" compoundref="_math_utils_8java" startline="401" endline="450">org.apache.commons.math.util.MathUtils.gcd</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1af9abd58db5bd1744563f107f9f96d4a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double org.apache.commons.math.util.MathUtils.log</definition>
        <argsstring>(double base, double x)</argsstring>
        <name>log</name>
        <param>
          <type>double</type>
          <declname>base</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the <ulink url="http://mathworld.wolfram.com/Logarithm.html">logarithm</ulink> for base <computeroutput>b</computeroutput> of <computeroutput>x</computeroutput>. </para><para>Returns <computeroutput>NaN<computeroutput> if either argument is negative. If <computeroutput>base</computeroutput> is 0 and <computeroutput>x</computeroutput> is positive, 0 is returned. If <computeroutput>base</computeroutput> is positive and <computeroutput>x</computeroutput> is 0, <computeroutput>Double.NEGATIVE_INFINITY</computeroutput> is returned. If both arguments are 0, the result is <computeroutput>NaN</computeroutput>.</computeroutput></computeroutput></para><para><computeroutput><computeroutput></computeroutput></computeroutput></para><para><computeroutput><computeroutput><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>the base of the logarithm, must be greater than 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>argument, must be greater than 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the logarithm - the number y such that base^y = x. </para></simplesect>
<simplesect kind="since"><para>1.2 </para></simplesect>
</computeroutput></computeroutput></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="581" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="581" bodyend="583"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1afda7d04d5558c781c9c6236aa9cca367" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int org.apache.commons.math.util.MathUtils.mulAndCheck</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>mulAndCheck</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiply two integers, checking for overflow.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>a factor </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the product <computeroutput>x*y</computeroutput> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArithmeticException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the result can not be represented as an int </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="595" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="595" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a673ef7ff5bd2c88ff24d469adf085d67" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long org.apache.commons.math.util.MathUtils.mulAndCheck</definition>
        <argsstring>(long a, long b)</argsstring>
        <name>mulAndCheck</name>
        <param>
          <type>long</type>
          <declname>a</declname>
        </param>
        <param>
          <type>long</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiply two long integers, checking for overflow.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>first value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>second value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the product <computeroutput>a * b</computeroutput> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArithmeticException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the result can not be represented as an long </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>1.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="613" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="613" bodyend="656"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1afda7d04d5558c781c9c6236aa9cca367" compoundref="_math_utils_8java" startline="595" endline="601">org.apache.commons.math.util.MathUtils.mulAndCheck</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1aa6527acf4bc3dc3f2f4b2b25420e3408" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double org.apache.commons.math.util.MathUtils.nextAfter</definition>
        <argsstring>(double d, double direction)</argsstring>
        <name>nextAfter</name>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <param>
          <type>double</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the next machine representable number after a number, moving in the direction of another number. </para><para>If <computeroutput>direction</computeroutput> is greater than or equal to<computeroutput>d</computeroutput>, the smallest machine representable number strictly greater than <computeroutput>d</computeroutput> is returned; otherwise the largest representable number strictly less than <computeroutput>d</computeroutput> is returned.</para><para>If <computeroutput>d</computeroutput> is NaN or Infinite, it is returned unchanged.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>base number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>(the only important thing is whether direction is greater or smaller than d) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the next machine representable number in the specified direction </para></simplesect>
<simplesect kind="since"><para>1.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="675" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="675" bodyend="713"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1aacf4ca1d2aec97cdf9295fc0375fad2b" compoundref="_math_utils_8java" startline="902" endline="904">org.apache.commons.math.util.MathUtils.sign</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a7bb685b964ee9837098745cb33a329c5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double org.apache.commons.math.util.MathUtils.normalizeAngle</definition>
        <argsstring>(double a, double center)</argsstring>
        <name>normalizeAngle</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>center</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Normalize an angle in a 2&amp;pi wide interval around a center value. </para><para>This method has three main uses:</para><para><itemizedlist>
<listitem>
<para>normalize an angle between 0 and 2<pi/>:<linebreak/>
 <computeroutput>a = <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a7bb685b964ee9837098745cb33a329c5" kindref="member">MathUtils.normalizeAngle</ref>(a, Math.PI);</computeroutput> </para></listitem>
<listitem>
<para>normalize an angle between -<pi/> and +<pi/><linebreak/>
 <computeroutput>a = <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a7bb685b964ee9837098745cb33a329c5" kindref="member">MathUtils.normalizeAngle</ref>(a, 0.0);</computeroutput> </para></listitem>
<listitem>
<para>compute the angle between two defining angular positions:<linebreak/>
 <computeroutput>angle = MathUtils.normalizeAngle(end, start) - start;</computeroutput> </para></listitem>
</itemizedlist>
</para><para>Note that due to numerical accuracy and since <pi/> cannot be represented exactly, the result interval is <emphasis>closed</emphasis>, it cannot be half-closed as would be more satisfactory in a purely mathematical view.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>angle to normalize </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para>center of the desired 2<pi/> interval for the result </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a-2k<pi/> with integer k and center-<pi/> &lt;= a-2k<pi/> &lt;= center+<pi/> </para></simplesect>
<simplesect kind="since"><para>1.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="734" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="734" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a5c94c79cfa14c48e6e54b88dcd992e33" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double org.apache.commons.math.util.MathUtils.round</definition>
        <argsstring>(double x, int scale)</argsstring>
        <name>round</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Round the given value to the specified number of decimal places. The value is rounded using the <ref refid="" kindref="compound">BigDecimal#ROUND_HALF_UP</ref> method.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to round. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of digits to the right of the decimal point. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the rounded value. </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="747" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="747" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a71fdfca8feb1b754f84d589a775c8518" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double org.apache.commons.math.util.MathUtils.round</definition>
        <argsstring>(double x, int scale, int roundingMethod)</argsstring>
        <name>round</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>int</type>
          <declname>roundingMethod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Round the given value to the specified number of decimal places. The value is rounded using the given method which is any method defined in <ref refid="" kindref="compound">BigDecimal</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to round. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of digits to the right of the decimal point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>roundingMethod</parametername>
</parameternamelist>
<parameterdescription>
<para>the rounding method as defined in <ref refid="" kindref="compound">BigDecimal</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the rounded value. </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="763" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="763" bodyend="776"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a33ab10730d2fa15032917974b0d02666" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float org.apache.commons.math.util.MathUtils.round</definition>
        <argsstring>(float x, int scale)</argsstring>
        <name>round</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Round the given value to the specified number of decimal places. The value is rounding using the <ref refid="" kindref="compound">BigDecimal#ROUND_HALF_UP</ref> method.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to round. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of digits to the right of the decimal point. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the rounded value. </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="787" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="787" bodyend="789"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a5c94c79cfa14c48e6e54b88dcd992e33" compoundref="_math_utils_8java" startline="747" endline="749">org.apache.commons.math.util.MathUtils.round</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1acfb0a342151e2d07a5e00be5b1cb668f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float org.apache.commons.math.util.MathUtils.round</definition>
        <argsstring>(float x, int scale, int roundingMethod)</argsstring>
        <name>round</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>int</type>
          <declname>roundingMethod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Round the given value to the specified number of decimal places. The value is rounded using the given method which is any method defined in <ref refid="" kindref="compound">BigDecimal</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to round. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of digits to the right of the decimal point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>roundingMethod</parametername>
</parameternamelist>
<parameterdescription>
<para>the rounding method as defined in <ref refid="" kindref="compound">BigDecimal</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the rounded value. </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="803" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="803" bodyend="807"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1aacf4ca1d2aec97cdf9295fc0375fad2b" compoundref="_math_utils_8java" startline="902" endline="904">org.apache.commons.math.util.MathUtils.sign</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1af283493d5a9f5ac479ed02a7427def21" compoundref="_math_utils_8java" startline="488" endline="490">org.apache.commons.math.util.MathUtils.indicator</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1aacf4ca1d2aec97cdf9295fc0375fad2b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte</type>
        <definition>static byte org.apache.commons.math.util.MathUtils.sign</definition>
        <argsstring>(final byte x)</argsstring>
        <name>sign</name>
        <param>
          <type>final byte</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the <ulink url="http://mathworld.wolfram.com/Sign.html">sign</ulink> for byte value <computeroutput>x</computeroutput>. </para><para>For a byte value x, this method returns (byte)(+1) if x &gt; 0, (byte)(0) if x = 0, and (byte)(-1) if x &lt; 0.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value, a byte </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(byte)(+1), (byte)(0), or (byte)(-1), depending on the sign of x </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="902" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="902" bodyend="904"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ab215e65de31ea1be665f6733bf97b270" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double org.apache.commons.math.util.MathUtils.sign</definition>
        <argsstring>(final double x)</argsstring>
        <name>sign</name>
        <param>
          <type>final double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the <ulink url="http://mathworld.wolfram.com/Sign.html">sign</ulink> for double precision <computeroutput>x</computeroutput>. </para><para>For a double value <computeroutput>x</computeroutput>, this method returns <computeroutput>+1.0</computeroutput> if <computeroutput>x &gt; 0</computeroutput>, <computeroutput>0.0</computeroutput> if <computeroutput>x = 0.0</computeroutput>, and <computeroutput>-1.0</computeroutput> if <computeroutput>x &lt; 0</computeroutput>. Returns <computeroutput>NaN</computeroutput> if <computeroutput>x</computeroutput> is <computeroutput>NaN</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value, a double </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>+1.0, 0.0, or -1.0, depending on the sign of x </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="918" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="918" bodyend="923"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ad22c6afe1833cec84f4a91792a3c6454" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float org.apache.commons.math.util.MathUtils.sign</definition>
        <argsstring>(final float x)</argsstring>
        <name>sign</name>
        <param>
          <type>final float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the <ulink url="http://mathworld.wolfram.com/Sign.html">sign</ulink> for float value <computeroutput>x</computeroutput>. </para><para>For a float value x, this method returns +1.0F if x &gt; 0, 0.0F if x = 0.0F, and -1.0F if x &lt; 0. Returns <computeroutput>NaN</computeroutput> if <computeroutput>x</computeroutput> is <computeroutput>NaN</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value, a float </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>+1.0F, 0.0F, or -1.0F, depending on the sign of x </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="936" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="936" bodyend="941"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1aa8500c80e848635d25e95817570ae8ca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int org.apache.commons.math.util.MathUtils.sign</definition>
        <argsstring>(final int x)</argsstring>
        <name>sign</name>
        <param>
          <type>final int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the <ulink url="http://mathworld.wolfram.com/Sign.html">sign</ulink> for int value <computeroutput>x</computeroutput>. </para><para>For an int value x, this method returns +1 if x &gt; 0, 0 if x = 0, and -1 if x &lt; 0.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value, an int </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>+1, 0, or -1, depending on the sign of x </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="953" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="953" bodyend="955"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a79fc94c67f9ed213c8e4eca389b2a7a3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long org.apache.commons.math.util.MathUtils.sign</definition>
        <argsstring>(final long x)</argsstring>
        <name>sign</name>
        <param>
          <type>final long</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the <ulink url="http://mathworld.wolfram.com/Sign.html">sign</ulink> for long value <computeroutput>x</computeroutput>. </para><para>For a long value x, this method returns +1L if x &gt; 0, 0L if x = 0, and -1L if x &lt; 0.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value, a long </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>+1L, 0L, or -1L, depending on the sign of x </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="967" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="967" bodyend="969"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a9790c6dbc8f18cd72994198b47d5d529" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>short</type>
        <definition>static short org.apache.commons.math.util.MathUtils.sign</definition>
        <argsstring>(final short x)</argsstring>
        <name>sign</name>
        <param>
          <type>final short</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the <ulink url="http://mathworld.wolfram.com/Sign.html">sign</ulink> for short value <computeroutput>x</computeroutput>. </para><para>For a short value x, this method returns (short)(+1) if x &gt; 0, (short)(0) if x = 0, and (short)(-1) if x &lt; 0.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value, a short </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(short)(+1), (short)(0), or (short)(-1), depending on the sign of x </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="982" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="982" bodyend="984"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1adc98225290687458ad2e70a53bb58d58" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double org.apache.commons.math.util.MathUtils.sinh</definition>
        <argsstring>(double x)</argsstring>
        <name>sinh</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the <ulink url="http://mathworld.wolfram.com/HyperbolicSine.html">hyperbolic sine</ulink> of x.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>double value for which to find the hyperbolic sine </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hyperbolic sine of x </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="993" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="993" bodyend="995"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a0021a7130df0446acfe9f0913598c86c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int org.apache.commons.math.util.MathUtils.subAndCheck</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>subAndCheck</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subtract two integers, checking for overflow.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the minuend </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the subtrahend </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the difference <computeroutput>x-y</computeroutput> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArithmeticException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the result can not be represented as an int </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="1007" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="1007" bodyend="1013"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ae9d84683160125c3052dcaa8a0a157f0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long org.apache.commons.math.util.MathUtils.subAndCheck</definition>
        <argsstring>(long a, long b)</argsstring>
        <name>subAndCheck</name>
        <param>
          <type>long</type>
          <declname>a</declname>
        </param>
        <param>
          <type>long</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subtract two long integers, checking for overflow.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>first value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>second value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the difference <computeroutput>a-b</computeroutput> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArithmeticException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the result can not be represented as an long </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>1.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="1025" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="1025" bodyend="1039"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ae917242ef8c464ac78ebecfecaf63f1e" compoundref="_math_utils_8java" startline="66" endline="72">org.apache.commons.math.util.MathUtils.addAndCheck</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a75f02e874094af71fb74ef88e405afa5" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long org.apache.commons.math.util.MathUtils.addAndCheck</definition>
        <argsstring>(long a, long b, String msg)</argsstring>
        <name>addAndCheck</name>
        <param>
          <type>long</type>
          <declname>a</declname>
        </param>
        <param>
          <type>long</type>
          <declname>b</declname>
        </param>
        <param>
          <type>String</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add two long integers, checking for overflow.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>an addend </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>an addend </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to use for any thrown exception. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the sum <computeroutput>a+b</computeroutput> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArithmeticException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the result can not be represented as an long </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>1.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="99" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="99" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1afd25ee110ffd2063d746c294ea185258" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double org.apache.commons.math.util.MathUtils.roundUnscaled</definition>
        <argsstring>(double unscaled, double sign, int roundingMethod)</argsstring>
        <name>roundUnscaled</name>
        <param>
          <type>double</type>
          <declname>unscaled</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sign</declname>
        </param>
        <param>
          <type>int</type>
          <declname>roundingMethod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Round the given non-negative, value to the &quot;nearest&quot; integer. Nearest is determined by the rounding method specified. Rounding methods are defined in <ref refid="" kindref="compound">BigDecimal</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unscaled</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to round. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sign</parametername>
</parameternamelist>
<parameterdescription>
<para>the sign of the original, scaled value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>roundingMethod</parametername>
</parameternamelist>
<parameterdescription>
<para>the rounding method as defined in <ref refid="" kindref="compound">BigDecimal</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the rounded value. </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="821" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="821" bodyend="890"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Some useful additions to the built-in functions in <ref refid="" kindref="compound">Math</ref>. <simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision:</title><para>620312 </para></simplesect>
<simplesect kind="rcs"><title>Date:</title><para>2008-02-10 12:28:59 -0700 (Sun, 10 Feb 2008) </para></simplesect>
</para>    </detaileddescription>
    <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" line="26" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/MathUtils.java" bodystart="26" bodyend="1041"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ae917242ef8c464ac78ebecfecaf63f1e" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>addAndCheck</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a0eaa2da8307ffa3bcd04d5b5a9096d32" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>addAndCheck</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a75f02e874094af71fb74ef88e405afa5" prot="private" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>addAndCheck</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a138bb573cced53f1eeed13c1f9062d45" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>binomialCoefficient</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1aab6fe339d140d8df62545b2036ccec84" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>binomialCoefficientDouble</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ae957d36ba17c1dcb746bdd56d243c3cf" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>binomialCoefficientLog</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a8ad278c26c97c411772df4676f390870" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>cosh</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a59a7ad4221b57e13bafcd7e32907615b" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>equals</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a41dd8694f60d00ea854a045891cb1b31" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>equals</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a75f49a3a106d6dcf3087a22d1987b74f" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>factorial</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a2e000da460a84f0d651a6030ba3f0b80" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>factorialDouble</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a1662250a915f961555eeefd9e922b469" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>factorialLog</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ac1cd2e43a4a696dcec596db626e646e6" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>gcd</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1aa228e07fd4bcfe523fc7792a2d2d5121" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>hash</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a05e8efb700ece5f36257cdb9f7756fa4" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>hash</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1af283493d5a9f5ac479ed02a7427def21" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>indicator</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1aeb61ef6d61f6f5ca798d68001bd5f932" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>indicator</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ad1227be36db3e0f7c42c13ab2b5bf720" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>indicator</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a1099ca0f6e631fea4b583026f2becb7b" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>indicator</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ab92e69d969cf138bae17e8027fc766a0" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>indicator</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a8b6af213422e8c7cdc530d4c8a0236b4" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>indicator</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1aeb4f19eda8c4902c254dfdc4e54fdfb0" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>lcm</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1af9abd58db5bd1744563f107f9f96d4a5" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>log</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ac71387811c8009330b6f3593d1107e1d" prot="private" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>MathUtils</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1afda7d04d5558c781c9c6236aa9cca367" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>mulAndCheck</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a673ef7ff5bd2c88ff24d469adf085d67" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>mulAndCheck</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1adfab80479a21f0d8b259813926a13426" prot="private" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>NB</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1aa6527acf4bc3dc3f2f4b2b25420e3408" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>nextAfter</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a7bb685b964ee9837098745cb33a329c5" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>normalizeAngle</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1afa624450b2c31c7845cd7c7520f2d2ed" prot="private" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>NS</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a912d63ae1a638198adf23908a35c18f5" prot="private" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>PB</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1aacc8f19932eb7792647c5c8d36ab9711" prot="private" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>PS</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a5c94c79cfa14c48e6e54b88dcd992e33" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>round</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a71fdfca8feb1b754f84d589a775c8518" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>round</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a33ab10730d2fa15032917974b0d02666" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>round</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1acfb0a342151e2d07a5e00be5b1cb668f" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>round</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1afd25ee110ffd2063d746c294ea185258" prot="private" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>roundUnscaled</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1aacf4ca1d2aec97cdf9295fc0375fad2b" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>sign</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ab215e65de31ea1be665f6733bf97b270" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>sign</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ad22c6afe1833cec84f4a91792a3c6454" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>sign</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1aa8500c80e848635d25e95817570ae8ca" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>sign</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a79fc94c67f9ed213c8e4eca389b2a7a3" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>sign</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a9790c6dbc8f18cd72994198b47d5d529" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>sign</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1adc98225290687458ad2e70a53bb58d58" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>sinh</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a0021a7130df0446acfe9f0913598c86c" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>subAndCheck</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ae9d84683160125c3052dcaa8a0a157f0" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>subAndCheck</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a504bcefe16a36b295287b5ec3b0d1a58" prot="private" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>TWO_PI</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1ae208769219b364355f50e89393cb0547" prot="private" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>ZB</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1a7a8cdda450c3e261dea4762f458f465c" prot="private" virt="non-virtual"><scope>org::apache::commons::math::util::MathUtils</scope><name>ZS</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
