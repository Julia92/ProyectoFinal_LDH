<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form" kind="class" prot="public">
    <compoundname>org::apache::commons::math::analysis::PolynomialFunctionNewtonForm</compoundname>
    <basecompoundref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function" prot="public" virt="non-virtual">org.apache.commons.math.analysis.UnivariateRealFunction</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Serializable</basecompoundref>
      <sectiondef kind="package-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1a0b2086c9e541f27eb14eb849c5db0cbb" prot="package" static="yes" mutable="no">
        <type>final long</type>
        <definition>final long org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.serialVersionUID</definition>
        <argsstring></argsstring>
        <name>serialVersionUID</name>
        <initializer>= -3353896576191389897L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>serializable version identifier </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" line="39" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1a8a7fcd124161844e7ae681b9cfaed51e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.coefficients[]</definition>
        <argsstring>[]</argsstring>
        <name>coefficients</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The coefficients of the polynomial, ordered by degree <ndash/> i.e. coefficients[0] is the constant term and coefficients[n] is the coefficient of x^n where n is the degree of the polynomial. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" line="46" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1afcb0caa77d8c8028084dc897e4075afc" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.a[]</definition>
        <argsstring>[]</argsstring>
        <name>a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Members of c[] are called centers of the Newton polynomial. When all c[i] = 0, a[] becomes normal polynomial coefficients, i.e. a[i] = coefficients[i]. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" line="53" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1ad60b38c9655966403ae2769d4e399967" prot="private" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.coefficientsComputed</definition>
        <argsstring></argsstring>
        <name>coefficientsComputed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether the polynomial coefficients are available. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" line="58" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1a5cea9a227dc9aad50035656ff2a62f52" prot="package" static="no" mutable="no">
        <type>double</type>
        <definition>double org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.c[]</definition>
        <argsstring>[]</argsstring>
        <name>c</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" line="53" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1aae9737cc647c684f23d4c3e6d44188ad" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.PolynomialFunctionNewtonForm</definition>
        <argsstring>(double a[], double c[])</argsstring>
        <name>PolynomialFunctionNewtonForm</name>
        <param>
          <type>double</type>
          <declname>a</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>c</declname>
          <array>[]</array>
        </param>
        <exceptions> throws IllegalArgumentException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a Newton polynomial with the given a[] and c[]. The order of centers are important in that if c[] shuffle, then values of a[] would completely change, not just a permutation of old a[]. </para><para>The constructor makes copy of the input arrays and assigns them.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>the coefficients in Newton form formula </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>the centers </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if input arrays are not valid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" line="71" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" bodystart="71" bodyend="80"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1aa9eba8e51c848e36a8fabfd1286877cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.value</definition>
        <argsstring>(double z)</argsstring>
        <name>value</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function_1a0e7a98f515a5fecfb77a21244e70b919">value</reimplements>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the function value at the given point.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the point at which the function value is to be computed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the function value </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if a runtime error occurs </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function_1a0e7a98f515a5fecfb77a21244e70b919" kindref="member">UnivariateRealFunction::value(double)</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" line="90" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" bodystart="90" bodyend="92"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1a9f84ce14dde5a63e16b4f2837f1d9c90" compoundref="_polynomial_function_newton_form_8java" startline="157" endline="169">org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.evaluate</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1aac4a83e639a9073ce5ec0330ca24dcc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.degree</definition>
        <argsstring>()</argsstring>
        <name>degree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the degree of the polynomial.</para><para><simplesect kind="return"><para>the degree of the polynomial </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" line="99" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1a6b5575208bd30d16df0d3d478a32ce0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double[]</type>
        <definition>double [] org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getNewtonCoefficients</definition>
        <argsstring>()</argsstring>
        <name>getNewtonCoefficients</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a copy of coefficients in Newton form formula. </para><para>Changes made to the returned copy will not affect the polynomial.</para><para><simplesect kind="return"><para>a fresh copy of coefficients in Newton form formula </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" line="110" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" bodystart="110" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1a5d81f62254e0e3995e83cfba2c73687b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double[]</type>
        <definition>double [] org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getCenters</definition>
        <argsstring>()</argsstring>
        <name>getCenters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a copy of the centers array. </para><para>Changes made to the returned copy will not affect the polynomial.</para><para><simplesect kind="return"><para>a fresh copy of the centers array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" line="123" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" bodystart="123" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1a9a8c1a34d114bcae929f3f87ea6cf584" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double[]</type>
        <definition>double [] org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getCoefficients</definition>
        <argsstring>()</argsstring>
        <name>getCoefficients</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a copy of the coefficients array. </para><para>Changes made to the returned copy will not affect the polynomial.</para><para><simplesect kind="return"><para>a fresh copy of the coefficients array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" line="136" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" bodystart="136" bodyend="143"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1ae51ba600c1330c1297ca8c0a735ccfa2" compoundref="_polynomial_function_newton_form_8java" startline="175" endline="192">org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.computeCoefficients</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1a9f84ce14dde5a63e16b4f2837f1d9c90" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.evaluate</definition>
        <argsstring>(double a[], double c[], double z)</argsstring>
        <name>evaluate</name>
        <param>
          <type>double</type>
          <declname>a</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>c</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref>, IllegalArgumentException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate the Newton polynomial using nested multiplication. It is also called <ulink url="http://mathworld.wolfram.com/HornersRule.html">Horner&apos;s Rule</ulink> and takes O(N) time.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>the coefficients in Newton form formula </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>the centers </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the point at which the function value is to be computed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the function value </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if a runtime error occurs </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if inputs are not valid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" line="157" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" bodystart="157" bodyend="169"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1a4902749e07f67f72695528baa5604d75" compoundref="_polynomial_function_newton_form_8java" startline="206" endline="217">org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.verifyInputArray</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1aa9eba8e51c848e36a8fabfd1286877cd" compoundref="_polynomial_function_newton_form_8java" startline="90" endline="92">org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.value</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1ae51ba600c1330c1297ca8c0a735ccfa2" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.computeCoefficients</definition>
        <argsstring>()</argsstring>
        <name>computeCoefficients</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the normal polynomial coefficients given the Newton form. It also uses nested multiplication but takes O(N^2) time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" line="175" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" bodystart="175" bodyend="192"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1aac4a83e639a9073ce5ec0330ca24dcc1" compoundref="_polynomial_function_newton_form_8java" startline="99" endline="101">org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.degree</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1a4902749e07f67f72695528baa5604d75" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.verifyInputArray</definition>
        <argsstring>(double a[], double c[])</argsstring>
        <name>verifyInputArray</name>
        <param>
          <type>double</type>
          <declname>a</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>c</declname>
          <array>[]</array>
        </param>
        <exceptions> throws IllegalArgumentException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Verifies that the input arrays are valid. </para><para>The centers must be distinct for interpolation purposes, but not for general use. Thus it is not verified here.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>the coefficients in Newton form formula </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>the centers </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if not valid </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_divided_difference_interpolator_1a4ca04c14fd8fcdba1d7ac84284faf0cd" kindref="member">DividedDifferenceInterpolator::computeDividedDifference</ref>(double[], double[]) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" line="206" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" bodystart="206" bodyend="217"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Implements the representation of a real polynomial function in Newton Form. For reference, see <bold>Elementary Numerical Analysis</bold>, ISBN 0070124477, chapter 2. </para><para>The formula of polynomial in Newton form is p(x) = a[0] + a[1](x-c[0]) + a[2](x-c[0])(x-c[1]) + ... + a[n](x-c[0])(x-c[1])...(x-c[n-1]) Note that the length of a[] is one more than the length of c[]</para><para><simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision:</title><para>620312 </para></simplesect>
<simplesect kind="rcs"><title>Date:</title><para>2008-02-10 12:28:59 -0700 (Sun, 10 Feb 2008) </para></simplesect>
<simplesect kind="since"><para>1.2 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="9473">
        <label>Serializable</label>
      </node>
      <node id="9472">
        <label>org.apache.commons.math.analysis.UnivariateRealFunction</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function"/>
      </node>
      <node id="9471">
        <label>org.apache.commons.math.analysis.PolynomialFunctionNewtonForm</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form"/>
        <childnode refid="9472" relation="public-inheritance">
        </childnode>
        <childnode refid="9473" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9476">
        <label>Serializable</label>
      </node>
      <node id="9475">
        <label>org.apache.commons.math.analysis.UnivariateRealFunction</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function"/>
      </node>
      <node id="9474">
        <label>org.apache.commons.math.analysis.PolynomialFunctionNewtonForm</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form"/>
        <childnode refid="9475" relation="public-inheritance">
        </childnode>
        <childnode refid="9476" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" line="36" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java" bodystart="35" bodyend="218"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1afcb0caa77d8c8028084dc897e4075afc" prot="private" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionNewtonForm</scope><name>a</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1a5cea9a227dc9aad50035656ff2a62f52" prot="package" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionNewtonForm</scope><name>c</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1a8a7fcd124161844e7ae681b9cfaed51e" prot="private" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionNewtonForm</scope><name>coefficients</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1ad60b38c9655966403ae2769d4e399967" prot="private" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionNewtonForm</scope><name>coefficientsComputed</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1ae51ba600c1330c1297ca8c0a735ccfa2" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionNewtonForm</scope><name>computeCoefficients</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1aac4a83e639a9073ce5ec0330ca24dcc1" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionNewtonForm</scope><name>degree</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1a9f84ce14dde5a63e16b4f2837f1d9c90" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionNewtonForm</scope><name>evaluate</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1a5d81f62254e0e3995e83cfba2c73687b" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionNewtonForm</scope><name>getCenters</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1a9a8c1a34d114bcae929f3f87ea6cf584" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionNewtonForm</scope><name>getCoefficients</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1a6b5575208bd30d16df0d3d478a32ce0c" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionNewtonForm</scope><name>getNewtonCoefficients</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1aae9737cc647c684f23d4c3e6d44188ad" prot="package" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionNewtonForm</scope><name>PolynomialFunctionNewtonForm</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1a0b2086c9e541f27eb14eb849c5db0cbb" prot="package" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionNewtonForm</scope><name>serialVersionUID</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1aa9eba8e51c848e36a8fabfd1286877cd" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionNewtonForm</scope><name>value</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_newton_form_1a4902749e07f67f72695528baa5604d75" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionNewtonForm</scope><name>verifyInputArray</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
