<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map" kind="class" prot="public">
    <compoundname>org::apache::commons::collections::map::AbstractReferenceMap</compoundname>
    <basecompoundref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map" prot="public" virt="non-virtual">org.apache.commons.collections.map.AbstractHashedMap</basecompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map" prot="public" virt="non-virtual">org.apache.commons.collections.map.ReferenceMap</derivedcompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map_generic" prot="public" virt="non-virtual">org.apache.commons.collections.map.ReferenceMapGeneric</derivedcompoundref>
    <innerclass refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1_1_reference_entry" prot="protected">org::apache::commons::collections::map::AbstractReferenceMap::ReferenceEntry</innerclass>
    <innerclass refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1_1_reference_entry_set" prot="package">org::apache::commons::collections::map::AbstractReferenceMap::ReferenceEntrySet</innerclass>
    <innerclass refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1_1_reference_entry_set_iterator" prot="package">org::apache::commons::collections::map::AbstractReferenceMap::ReferenceEntrySetIterator</innerclass>
    <innerclass refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1_1_reference_key_set" prot="package">org::apache::commons::collections::map::AbstractReferenceMap::ReferenceKeySet</innerclass>
    <innerclass refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1_1_reference_key_set_iterator" prot="package">org::apache::commons::collections::map::AbstractReferenceMap::ReferenceKeySetIterator</innerclass>
    <innerclass refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1_1_reference_map_iterator" prot="package">org::apache::commons::collections::map::AbstractReferenceMap::ReferenceMapIterator</innerclass>
    <innerclass refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1_1_reference_values" prot="package">org::apache::commons::collections::map::AbstractReferenceMap::ReferenceValues</innerclass>
    <innerclass refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1_1_reference_values_iterator" prot="package">org::apache::commons::collections::map::AbstractReferenceMap::ReferenceValuesIterator</innerclass>
    <innerclass refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1_1_soft_ref" prot="package">org::apache::commons::collections::map::AbstractReferenceMap::SoftRef</innerclass>
    <innerclass refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1_1_weak_ref" prot="package">org::apache::commons::collections::map::AbstractReferenceMap::WeakRef</innerclass>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af731b002fab45855199994aa132d0c7e" prot="public" static="yes" mutable="no">
        <type>final int</type>
        <definition>final int org.apache.commons.collections.map.AbstractReferenceMap.HARD</definition>
        <argsstring></argsstring>
        <name>HARD</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constant indicating that hard references should be used </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="88" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a5d616e45811742a81988965e86f403db" prot="public" static="yes" mutable="no">
        <type>final int</type>
        <definition>final int org.apache.commons.collections.map.AbstractReferenceMap.SOFT</definition>
        <argsstring></argsstring>
        <name>SOFT</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constant indicating that soft references should be used </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="91" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af6dd0361c4cd113da7b56e8515165487" prot="public" static="yes" mutable="no">
        <type>final int</type>
        <definition>final int org.apache.commons.collections.map.AbstractReferenceMap.WEAK</definition>
        <argsstring></argsstring>
        <name>WEAK</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constant indicating that weak references should be used </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="94" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a4740a8292bec34a1012770fbd58faa2f" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int org.apache.commons.collections.map.AbstractReferenceMap.keyType</definition>
        <argsstring></argsstring>
        <name>keyType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The reference type for keys. Must be HARD, SOFT, WEAK.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="100" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1aa34a045877daedff230dbfdb261180d1" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int org.apache.commons.collections.map.AbstractReferenceMap.valueType</definition>
        <argsstring></argsstring>
        <name>valueType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The reference type for values. Must be HARD, SOFT, WEAK.  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="106" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a4c1de0f34c08b8d1cccb884edf975e57" prot="protected" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean org.apache.commons.collections.map.AbstractReferenceMap.purgeValues</definition>
        <argsstring></argsstring>
        <name>purgeValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Should the value be automatically purged when the associated key has been collected? </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="111" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a5938c4d59a2902a9d549d94459e7d1fa" prot="private" static="no" mutable="no">
        <type>transient ReferenceQueue</type>
        <definition>transient ReferenceQueue org.apache.commons.collections.map.AbstractReferenceMap.queue</definition>
        <argsstring></argsstring>
        <name>queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ReferenceQueue used to eliminate stale mappings. See purge. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="117" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a6cf69ead5c6006d84ac9c93a9fe36601" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.collections.map.AbstractReferenceMap.AbstractReferenceMap</definition>
        <argsstring>()</argsstring>
        <name>AbstractReferenceMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor used during deserialization. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="123" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1acf3bc97fa986f072fbf4b6b1837d8bc4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.collections.map.AbstractReferenceMap.AbstractReferenceMap</definition>
        <argsstring>(int keyType, int valueType, int capacity, float loadFactor, boolean purgeValues)</argsstring>
        <name>AbstractReferenceMap</name>
        <param>
          <type>int</type>
          <declname>keyType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>valueType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>float</type>
          <declname>loadFactor</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>purgeValues</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new empty map with the specified reference types, load factor and initial capacity.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keyType</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of reference to use for keys; must be <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af731b002fab45855199994aa132d0c7e" kindref="member">HARD</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a5d616e45811742a81988965e86f403db" kindref="member">SOFT</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af6dd0361c4cd113da7b56e8515165487" kindref="member">WEAK</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valueType</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of reference to use for values; must be <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af731b002fab45855199994aa132d0c7e" kindref="member">HARD</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a5d616e45811742a81988965e86f403db" kindref="member">SOFT</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af6dd0361c4cd113da7b56e8515165487" kindref="member">WEAK</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>the initial capacity for the map </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loadFactor</parametername>
</parameternamelist>
<parameterdescription>
<para>the load factor for the map </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>purgeValues</parametername>
</parameternamelist>
<parameterdescription>
<para>should the value be automatically purged when the key is garbage collected </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="140" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="140" bodyend="149"/>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a4740a8292bec34a1012770fbd58faa2f" compoundref="_abstract_reference_map_8java" startline="100">org.apache.commons.collections.map.AbstractReferenceMap.keyType</references>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1aa34a045877daedff230dbfdb261180d1" compoundref="_abstract_reference_map_8java" startline="106">org.apache.commons.collections.map.AbstractReferenceMap.valueType</references>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a4c1de0f34c08b8d1cccb884edf975e57" compoundref="_abstract_reference_map_8java" startline="111">org.apache.commons.collections.map.AbstractReferenceMap.purgeValues</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a9fc795753d47ee1df60e1310725d862b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.collections.map.AbstractReferenceMap.init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialise this subclass during construction, cloning or deserialization. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="154" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a34172b6ce67c1b6f966bba7351d64e76" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.collections.map.AbstractReferenceMap.purgeBeforeRead</definition>
        <argsstring>()</argsstring>
        <name>purgeBeforeRead</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Purges stale mappings from this map before read operations. </para><para>This implementation calls <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a048ff84d4217b867296fc949a377f496" kindref="member">purge()</ref> to maintain a consistent state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="336" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="336" bodyend="338"/>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a048ff84d4217b867296fc949a377f496" compoundref="_abstract_reference_map_8java" startline="357" endline="363">org.apache.commons.collections.map.AbstractReferenceMap.purge</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a507daa6652dffb0c2e91776eaac85f56" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.collections.map.AbstractReferenceMap.purgeBeforeWrite</definition>
        <argsstring>()</argsstring>
        <name>purgeBeforeWrite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Purges stale mappings from this map before write operations. </para><para>This implementation calls <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a048ff84d4217b867296fc949a377f496" kindref="member">purge()</ref> to maintain a consistent state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="345" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="345" bodyend="347"/>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a048ff84d4217b867296fc949a377f496" compoundref="_abstract_reference_map_8java" startline="357" endline="363">org.apache.commons.collections.map.AbstractReferenceMap.purge</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a048ff84d4217b867296fc949a377f496" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.collections.map.AbstractReferenceMap.purge</definition>
        <argsstring>()</argsstring>
        <name>purge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Purges stale mappings from this map. </para><para>Note that this method is not synchronized! Special care must be taken if, for instance, you want stale mappings to be removed on a periodic basis by some background thread. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="357" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="357" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1acfba62cc5ac10c677c50d3ffdbe46449" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.collections.map.AbstractReferenceMap.purge</definition>
        <argsstring>(Reference ref)</argsstring>
        <name>purge</name>
        <param>
          <type>Reference</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Purges the specified reference.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para>the reference to purge </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="370" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="370" bodyend="392"/>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1af8656af330dfd198ea87ffadab432820" compoundref="_abstract_hashed_map_8java" startline="371" endline="379">org.apache.commons.collections.map.AbstractHashedMap.hash</references>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a07c7cee89f737ff26bfdc1c8091d577c" compoundref="_abstract_hashed_map_8java" startline="416" endline="418">org.apache.commons.collections.map.AbstractHashedMap.hashIndex</references>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a66ee201f17013ae1324c6dcf16816a91" compoundref="_abstract_hashed_map_8java" startline="87">org.apache.commons.collections.map.AbstractHashedMap.data</references>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a048ff84d4217b867296fc949a377f496" compoundref="_abstract_reference_map_8java" startline="357" endline="363">org.apache.commons.collections.map.AbstractReferenceMap.purge</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a60772a78e39e666140729ec158a5f2e8" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HashEntry</type>
        <definition>HashEntry org.apache.commons.collections.map.AbstractReferenceMap.getEntry</definition>
        <argsstring>(Object key)</argsstring>
        <name>getEntry</name>
        <param>
          <type>Object</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the entry mapped to the key specified.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the key </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the entry, null if no match </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="401" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="401" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af5989b24990dba61bcd0f905b8c5c293" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.apache.commons.collections.map.AbstractReferenceMap.hashEntry</definition>
        <argsstring>(Object key, Object value)</argsstring>
        <name>hashEntry</name>
        <param>
          <type>Object</type>
          <declname>key</declname>
        </param>
        <param>
          <type>Object</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the hash code for a MapEntry. Subclasses can override this, for example to use the identityHashCode.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the key to get a hash code for, may be null </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to get a hash code for, may be null </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the hash code, as per the MapEntry specification </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="417" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="417" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ad410af0b0554e8b9a1fcfaba46af845a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.commons.collections.map.AbstractReferenceMap.isEqualKey</definition>
        <argsstring>(Object key1, Object key2)</argsstring>
        <name>isEqualKey</name>
        <param>
          <type>Object</type>
          <declname>key1</declname>
        </param>
        <param>
          <type>Object</type>
          <declname>key2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares two keys, in internal converted form, to see if they are equal. </para><para>This implementation converts the key from the entry to a real reference before comparison.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first key to compare passed in from outside </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second key extracted from the entry via <computeroutput>entry.key</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if equal </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="432" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="432" bodyend="435"/>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a4740a8292bec34a1012770fbd58faa2f" compoundref="_abstract_reference_map_8java" startline="100">org.apache.commons.collections.map.AbstractReferenceMap.keyType</references>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af731b002fab45855199994aa132d0c7e" compoundref="_abstract_reference_map_8java" startline="88">org.apache.commons.collections.map.AbstractReferenceMap.HARD</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ac6d8356419279a605f27de9dcc3ba07e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HashEntry</type>
        <definition>HashEntry org.apache.commons.collections.map.AbstractReferenceMap.createEntry</definition>
        <argsstring>(HashEntry next, int hashCode, Object key, Object value)</argsstring>
        <name>createEntry</name>
        <param>
          <type>HashEntry</type>
          <declname>next</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hashCode</declname>
        </param>
        <param>
          <type>Object</type>
          <declname>key</declname>
        </param>
        <param>
          <type>Object</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a ReferenceEntry instead of a HashEntry.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>next</parametername>
</parameternamelist>
<parameterdescription>
<para>the next entry in sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hashCode</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash code to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the key to store </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to store </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the newly created entry </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="446" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="446" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ac2793da9c9d45d1a3a63e571fc8b5008" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Iterator</type>
        <definition>Iterator org.apache.commons.collections.map.AbstractReferenceMap.createEntrySetIterator</definition>
        <argsstring>()</argsstring>
        <name>createEntrySetIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an entry set iterator.</para><para><simplesect kind="return"><para>the entrySet iterator </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="455" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="455" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a2bb5379604af9c8c923751fdedc61066" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Iterator</type>
        <definition>Iterator org.apache.commons.collections.map.AbstractReferenceMap.createKeySetIterator</definition>
        <argsstring>()</argsstring>
        <name>createKeySetIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an key set iterator.</para><para><simplesect kind="return"><para>the keySet iterator </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="464" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="464" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a222d08d584fb157b0e1df04bca7c1c81" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Iterator</type>
        <definition>Iterator org.apache.commons.collections.map.AbstractReferenceMap.createValuesIterator</definition>
        <argsstring>()</argsstring>
        <name>createValuesIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an values iterator.</para><para><simplesect kind="return"><para>the values iterator </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="473" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="473" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a588e99ada8fe57f5095bde8fbdff196f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.collections.map.AbstractReferenceMap.doWriteObject</definition>
        <argsstring>(ObjectOutputStream out)</argsstring>
        <name>doWriteObject</name>
        <param>
          <type>ObjectOutputStream</type>
          <declname>out</declname>
        </param>
        <exceptions> throws IOException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replaces the superclass method to store the state of this class. </para><para>Serialization is not one of the JDK&apos;s nicest topics. Normal serialization will initialise the superclass before the subclass. Sometimes however, this isn&apos;t what you want, as in this case the <computeroutput><ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ac2374be980421e681fae891f89e4a77e" kindref="member">put()</ref></computeroutput> method on read can be affected by subclass state. </para><para>The solution adopted here is to serialize the state data of this class in this protected method. This method must be called by the <computeroutput>writeObject()</computeroutput> of the first serializable subclass. </para><para>Subclasses may override if they have a specific field that must be present on read before this implementation will work. Generally, the read determines what must be serialized here, if anything.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="930" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="930" bodyend="942"/>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a4740a8292bec34a1012770fbd58faa2f" compoundref="_abstract_reference_map_8java" startline="100">org.apache.commons.collections.map.AbstractReferenceMap.keyType</references>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1aa34a045877daedff230dbfdb261180d1" compoundref="_abstract_reference_map_8java" startline="106">org.apache.commons.collections.map.AbstractReferenceMap.valueType</references>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a4c1de0f34c08b8d1cccb884edf975e57" compoundref="_abstract_reference_map_8java" startline="111">org.apache.commons.collections.map.AbstractReferenceMap.purgeValues</references>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a2b6eca9c5a9367ea944670a443a5b555" compoundref="_abstract_hashed_map_8java" startline="83">org.apache.commons.collections.map.AbstractHashedMap.loadFactor</references>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ad2ff03d9591b09848effe30508656f12" compoundref="_abstract_reference_map_8java" startline="288" endline="290">org.apache.commons.collections.map.AbstractReferenceMap.mapIterator</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1aff3de0136a097bba4d3f620a6c44225b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.collections.map.AbstractReferenceMap.doReadObject</definition>
        <argsstring>(ObjectInputStream in)</argsstring>
        <name>doReadObject</name>
        <param>
          <type>ObjectInputStream</type>
          <declname>in</declname>
        </param>
        <exceptions> throws IOException, ClassNotFoundException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replaces the superclassm method to read the state of this class. </para><para>Serialization is not one of the JDK&apos;s nicest topics. Normal serialization will initialise the superclass before the subclass. Sometimes however, this isn&apos;t what you want, as in this case the <computeroutput><ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ac2374be980421e681fae891f89e4a77e" kindref="member">put()</ref></computeroutput> method on read can be affected by subclass state. </para><para>The solution adopted here is to deserialize the state data of this class in this protected method. This method must be called by the <computeroutput>readObject()</computeroutput> of the first serializable subclass. </para><para>Subclasses may override if the subclass has a specific field that must be present before <computeroutput><ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ac2374be980421e681fae891f89e4a77e" kindref="member">put()</ref></computeroutput> or <computeroutput><ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1afd62eac0894938109577146f848c5a4c" kindref="member">calculateThreshold()</ref></computeroutput> will work correctly.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>the input stream </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="961" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="961" bodyend="979"/>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a9fc795753d47ee1df60e1310725d862b" compoundref="_abstract_reference_map_8java" startline="154" endline="156">org.apache.commons.collections.map.AbstractReferenceMap.init</references>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a66ee201f17013ae1324c6dcf16816a91" compoundref="_abstract_hashed_map_8java" startline="87">org.apache.commons.collections.map.AbstractHashedMap.data</references>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ac2374be980421e681fae891f89e4a77e" compoundref="_abstract_reference_map_8java" startline="247" endline="257">org.apache.commons.collections.map.AbstractReferenceMap.put</references>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a3e6b7ae91dbd17786779a520f94dbc11" compoundref="_abstract_hashed_map_8java" startline="89">org.apache.commons.collections.map.AbstractHashedMap.threshold</references>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1afd62eac0894938109577146f848c5a4c" compoundref="_abstract_hashed_map_8java" startline="662" endline="664">org.apache.commons.collections.map.AbstractHashedMap.calculateThreshold</references>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a2b6eca9c5a9367ea944670a443a5b555" compoundref="_abstract_hashed_map_8java" startline="83">org.apache.commons.collections.map.AbstractHashedMap.loadFactor</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a6a128ff8a3523a52a8bd08d5c943e743" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void org.apache.commons.collections.map.AbstractReferenceMap.verify</definition>
        <argsstring>(String name, int type)</argsstring>
        <name>verify</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks the type int is a valid value.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name for error messages </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type value to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if the value if invalid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="166" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="166" bodyend="170"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ac283e757d1b924316731ebb4467f2a67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.apache.commons.collections.map.AbstractReferenceMap.size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the size of the map.</para><para><simplesect kind="return"><para>the size </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="178" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="178" bodyend="181"/>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a34172b6ce67c1b6f966bba7351d64e76" compoundref="_abstract_reference_map_8java" startline="336" endline="338">org.apache.commons.collections.map.AbstractReferenceMap.purgeBeforeRead</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a3cb4d5bb4aa13d1f8f7ce569412aac18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.commons.collections.map.AbstractReferenceMap.isEmpty</definition>
        <argsstring>()</argsstring>
        <name>isEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks whether the map is currently empty.</para><para><simplesect kind="return"><para>true if the map is currently size zero </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="188" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="188" bodyend="191"/>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a34172b6ce67c1b6f966bba7351d64e76" compoundref="_abstract_reference_map_8java" startline="336" endline="338">org.apache.commons.collections.map.AbstractReferenceMap.purgeBeforeRead</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ab963c5099821c43b60d482a29bd20552" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.commons.collections.map.AbstractReferenceMap.containsKey</definition>
        <argsstring>(Object key)</argsstring>
        <name>containsKey</name>
        <param>
          <type>Object</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks whether the map contains the specified key.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the key to search for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the map contains the key </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="199" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="199" bodyend="206"/>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a34172b6ce67c1b6f966bba7351d64e76" compoundref="_abstract_reference_map_8java" startline="336" endline="338">org.apache.commons.collections.map.AbstractReferenceMap.purgeBeforeRead</references>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a60772a78e39e666140729ec158a5f2e8" compoundref="_abstract_reference_map_8java" startline="401" endline="407">org.apache.commons.collections.map.AbstractReferenceMap.getEntry</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a89cf67baf7989433faa3ae3386dd9f70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean org.apache.commons.collections.map.AbstractReferenceMap.containsValue</definition>
        <argsstring>(Object value)</argsstring>
        <name>containsValue</name>
        <param>
          <type>Object</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks whether the map contains the specified value.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to search for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the map contains the value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="214" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="214" bodyend="220"/>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a34172b6ce67c1b6f966bba7351d64e76" compoundref="_abstract_reference_map_8java" startline="336" endline="338">org.apache.commons.collections.map.AbstractReferenceMap.purgeBeforeRead</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a5d12a808946c34ba34f935973b5bbf43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Object</type>
        <definition>Object org.apache.commons.collections.map.AbstractReferenceMap.get</definition>
        <argsstring>(Object key)</argsstring>
        <name>get</name>
        <param>
          <type>Object</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the value mapped to the key specified.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the key </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the mapped value, null if no match </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="228" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="228" bodyend="235"/>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a34172b6ce67c1b6f966bba7351d64e76" compoundref="_abstract_reference_map_8java" startline="336" endline="338">org.apache.commons.collections.map.AbstractReferenceMap.purgeBeforeRead</references>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a60772a78e39e666140729ec158a5f2e8" compoundref="_abstract_reference_map_8java" startline="401" endline="407">org.apache.commons.collections.map.AbstractReferenceMap.getEntry</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ac2374be980421e681fae891f89e4a77e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Object</type>
        <definition>Object org.apache.commons.collections.map.AbstractReferenceMap.put</definition>
        <argsstring>(Object key, Object value)</argsstring>
        <name>put</name>
        <param>
          <type>Object</type>
          <declname>key</declname>
        </param>
        <param>
          <type>Object</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Puts a key-value mapping into this map. Neither the key nor the value may be null.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the key to add, must not be null </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to add, must not be null </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value previously mapped to this key, null if none </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NullPointerException</parametername>
</parameternamelist>
<parameterdescription>
<para>if either the key or value is null </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="247" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="247" bodyend="257"/>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a507daa6652dffb0c2e91776eaac85f56" compoundref="_abstract_reference_map_8java" startline="345" endline="347">org.apache.commons.collections.map.AbstractReferenceMap.purgeBeforeWrite</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1aad2b68077e4cf57002a4434038959fc6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Object</type>
        <definition>Object org.apache.commons.collections.map.AbstractReferenceMap.remove</definition>
        <argsstring>(Object key)</argsstring>
        <name>remove</name>
        <param>
          <type>Object</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes the specified mapping from this map.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the mapping to remove </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value mapped to the removed key, null if key not in map </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="265" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="265" bodyend="271"/>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a507daa6652dffb0c2e91776eaac85f56" compoundref="_abstract_reference_map_8java" startline="345" endline="347">org.apache.commons.collections.map.AbstractReferenceMap.purgeBeforeWrite</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1aa58bff1287ae8f3e57e515f93b917fc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.collections.map.AbstractReferenceMap.clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clears this map. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="276" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="276" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ad2ff03d9591b09848effe30508656f12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1collections_1_1_map_iterator" kindref="compound">MapIterator</ref></type>
        <definition>MapIterator org.apache.commons.collections.map.AbstractReferenceMap.mapIterator</definition>
        <argsstring>()</argsstring>
        <name>mapIterator</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1collections_1_1_iterable_map_1a9286d00402feb25d1c72e27e253e2663">mapIterator</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets a <ref refid="interfaceorg_1_1apache_1_1commons_1_1collections_1_1_map_iterator" kindref="compound">MapIterator</ref> over the reference map. The iterator only returns valid key/value pairs.</para><para><simplesect kind="return"><para>a map iterator </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="288" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="288" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a49db678a6f139255adbd75483d3d34cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Set</type>
        <definition>Set org.apache.commons.collections.map.AbstractReferenceMap.entrySet</definition>
        <argsstring>()</argsstring>
        <name>entrySet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a set view of this map&apos;s entries. An iterator returned entry is valid until <computeroutput>next()</computeroutput> is called again. The <computeroutput>setValue()</computeroutput> method on the <computeroutput>toArray</computeroutput> entries has no effect.</para><para><simplesect kind="return"><para>a set view of this map&apos;s entries </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="299" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="299" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ac6a1b622d81961532735cf10a68a2dcc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Set</type>
        <definition>Set org.apache.commons.collections.map.AbstractReferenceMap.keySet</definition>
        <argsstring>()</argsstring>
        <name>keySet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a set view of this map&apos;s keys.</para><para><simplesect kind="return"><para>a set view of this map&apos;s keys </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="311" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="311" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1aff315edaecb7c719092db9db7dbebf1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Collection</type>
        <definition>Collection org.apache.commons.collections.map.AbstractReferenceMap.values</definition>
        <argsstring>()</argsstring>
        <name>values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a collection view of this map&apos;s values.</para><para><simplesect kind="return"><para>a set view of this map&apos;s values </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="323" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="323" bodyend="328"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An abstract implementation of a hash-based map that allows the entries to be removed by the garbage collector. </para><para>This class implements all the features necessary for a subclass reference hash-based map. Key-value entries are stored in instances of the <computeroutput>ReferenceEntry</computeroutput> class which can be overridden and replaced. The iterators can similarly be replaced, without the need to replace the KeySet, EntrySet and Values view classes. </para><para>Overridable methods are provided to change the default hashing behaviour, and to change how entries are added to and removed from the map. Hopefully, all you need for unusual subclasses is here. </para><para>When you construct an <computeroutput><ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map" kindref="compound">AbstractReferenceMap</ref></computeroutput>, you can specify what kind of references are used to store the map&apos;s keys and values. If non-hard references are used, then the garbage collector can remove mappings if a key or value becomes unreachable, or if the JVM&apos;s memory is running low. For information on how the different reference types behave, see <ref refid="" kindref="compound">Reference</ref>. </para><para>Different types of references can be specified for keys and values. The keys can be configured to be weak but the values hard, in which case this class will behave like a <ulink url="http://java.sun.com/j2se/1.4/docs/api/java/util/WeakHashMap.html"><computeroutput>WeakHashMap</computeroutput></ulink>. However, you can also specify hard keys and weak values, or any other combination. The default constructor uses hard keys and soft values, providing a memory-sensitive cache. </para><para>This <ref refid="" kindref="compound">Map</ref> implementation does <emphasis>not</emphasis> allow null elements. Attempting to add a null key or value to the map will raise a <computeroutput>NullPointerException</computeroutput>. </para><para>All the available iterators can be reset back to the start by casting to <computeroutput><ref refid="interfaceorg_1_1apache_1_1commons_1_1collections_1_1_resettable_iterator" kindref="compound">ResettableIterator</ref></computeroutput> and calling <computeroutput>reset()</computeroutput>. </para><para>This implementation is not synchronized. You can use <ref refid="" kindref="compound">java.util.Collections#synchronizedMap</ref> to provide synchronized access to a <computeroutput><ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map" kindref="compound">ReferenceMap</ref></computeroutput>.</para><para><simplesect kind="see"><para>java.lang.ref.Reference </para></simplesect>
<simplesect kind="since"><para>Commons Collections 3.1 (extracted from <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map" kindref="compound">ReferenceMap</ref> in 3.0) </para></simplesect>
<simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision:</title><para>646777 </para></simplesect>
<simplesect kind="rcs"><title>Date:</title><para>2008-04-10 13:33:15 +0100 (Thu, 10 Apr 2008) </para></simplesect>
</para><para><simplesect kind="author"><para>Paul Jack </para><simplesectsep/><para>Stephen Colebourne </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="5831">
        <label>AbstractMap</label>
      </node>
      <node id="5829">
        <label>org.apache.commons.collections.map.AbstractReferenceMap</label>
        <link refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map"/>
        <childnode refid="5830" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5832">
        <label>org.apache.commons.collections.IterableMap</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1collections_1_1_iterable_map"/>
        <childnode refid="5833" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5833">
        <label>Map</label>
      </node>
      <node id="5835">
        <label>org.apache.commons.collections.map.ReferenceMapGeneric</label>
        <link refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map_generic"/>
        <childnode refid="5829" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5834">
        <label>org.apache.commons.collections.map.ReferenceMap</label>
        <link refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map"/>
        <childnode refid="5829" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5830">
        <label>org.apache.commons.collections.map.AbstractHashedMap</label>
        <link refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map"/>
        <childnode refid="5831" relation="public-inheritance">
        </childnode>
        <childnode refid="5832" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5841">
        <label>org.apache.commons.collections.map.AbstractHashedMap.EntrySet</label>
        <childnode refid="5842" relation="public-inheritance">
        </childnode>
        <childnode refid="5837" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
      <node id="5846">
        <label>org.apache.commons.collections.KeyValue</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1collections_1_1_key_value"/>
      </node>
      <node id="5838">
        <label>AbstractMap</label>
      </node>
      <node id="5836">
        <label>org.apache.commons.collections.map.AbstractReferenceMap</label>
        <link refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map"/>
        <childnode refid="5837" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5845">
        <label>Map::Entry</label>
      </node>
      <node id="5839">
        <label>org.apache.commons.collections.IterableMap</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1collections_1_1_iterable_map"/>
        <childnode refid="5840" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5844">
        <label>org.apache.commons.collections.map.AbstractHashedMap.HashEntry</label>
        <childnode refid="5845" relation="public-inheritance">
        </childnode>
        <childnode refid="5846" relation="public-inheritance">
        </childnode>
        <childnode refid="5844" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="5840">
        <label>Map</label>
      </node>
      <node id="5843">
        <label>org.apache.commons.collections.map.AbstractHashedMap.KeySet</label>
        <childnode refid="5842" relation="public-inheritance">
        </childnode>
        <childnode refid="5837" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
      <node id="5842">
        <label>AbstractSet</label>
      </node>
      <node id="5848">
        <label>AbstractCollection</label>
      </node>
      <node id="5837">
        <label>org.apache.commons.collections.map.AbstractHashedMap</label>
        <link refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map"/>
        <childnode refid="5838" relation="public-inheritance">
        </childnode>
        <childnode refid="5839" relation="public-inheritance">
        </childnode>
        <childnode refid="5841" relation="usage">
          <edgelabel>entrySet</edgelabel>
        </childnode>
        <childnode refid="5843" relation="usage">
          <edgelabel>keySet</edgelabel>
        </childnode>
        <childnode refid="5844" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
        <childnode refid="5847" relation="usage">
          <edgelabel>values</edgelabel>
        </childnode>
      </node>
      <node id="5847">
        <label>org.apache.commons.collections.map.AbstractHashedMap.Values</label>
        <childnode refid="5848" relation="public-inheritance">
        </childnode>
        <childnode refid="5837" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" line="85" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/AbstractReferenceMap.java" bodystart="85" bodyend="981"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a9c9672ea02d7a64c6733a5ddb5c260d3" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>AbstractHashedMap</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a6bf720b9f0bfcf97f1640ec5d3d493df" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>AbstractHashedMap</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a28a8a5def3988c22b463c3d4ec209e55" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>AbstractHashedMap</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a8f1b7669151ae4e139b970aa109048c5" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>AbstractHashedMap</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a77e8bb4264ea6f5dc5b612f4168d61c0" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>AbstractHashedMap</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a6cf69ead5c6006d84ac9c93a9fe36601" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>AbstractReferenceMap</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1acf3bc97fa986f072fbf4b6b1837d8bc4" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>AbstractReferenceMap</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a6927cadb67581f7ad0f96c99686a1e62" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>addEntry</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a253695db7aee484720c3d5034509219c" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>addMapping</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a7eb0eaf5d1bdd0b4912d98b3c58a09b1" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>calculateNewCapacity</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1afd62eac0894938109577146f848c5a4c" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>calculateThreshold</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a0a946881b0fba5cfc41bd7e4a9e0ced3" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>checkCapacity</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1aa58bff1287ae8f3e57e515f93b917fc1" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>clear</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a277425ab358a8a5a03d5148cdb4671a6" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>clone</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ab963c5099821c43b60d482a29bd20552" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>containsKey</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a89cf67baf7989433faa3ae3386dd9f70" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>containsValue</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a37ac0c36936c4e2df09e41b24aaff298" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>convertKey</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ac6d8356419279a605f27de9dcc3ba07e" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>createEntry</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ac2793da9c9d45d1a3a63e571fc8b5008" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>createEntrySetIterator</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a2bb5379604af9c8c923751fdedc61066" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>createKeySetIterator</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a222d08d584fb157b0e1df04bca7c1c81" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>createValuesIterator</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a66ee201f17013ae1324c6dcf16816a91" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>data</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1ab75b9040c76cea48c33ab7d3c71fd7dd" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>DEFAULT_CAPACITY</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1aeaa44bca56ee02ccd1fffbd07364ab2a" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>DEFAULT_LOAD_FACTOR</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1aa1b5d36f94451298f4727391d677d159" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>DEFAULT_THRESHOLD</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a40294c523403f093e811c27e70f68677" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>destroyEntry</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1aff3de0136a097bba4d3f620a6c44225b" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>doReadObject</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a588e99ada8fe57f5095bde8fbdff196f" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>doWriteObject</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1ab717b34a417392901d5444762fb99984" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>ensureCapacity</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1aee1d3a4b667b467eeeb9269c1769bdb9" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>entryHashCode</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a95a0b02bc43cdd0685be8f6838bead4d" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>entryKey</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a41641e16b5d44b10252a54f8fadbb700" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>entryNext</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a49db678a6f139255adbd75483d3d34cd" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>entrySet</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a12d684404409096009c6cb75d06c5831" prot="protected" virt="non-virtual" ambiguityscope="org::apache::commons::collections::map::AbstractHashedMap."><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>entrySet</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1af92abcb1403889edf2af4f9101c61a2e" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>entryValue</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a51f160d58d2e1c71c78911f89b4b1b5d" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>equals</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a5d12a808946c34ba34f935973b5bbf43" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>get</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a60772a78e39e666140729ec158a5f2e8" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>getEntry</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1adeb9f01a500a97b48ff1cd172be147b7" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>GETKEY_INVALID</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1abb26a07cd1e1b25fcc83dfc95d70e4fe" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>GETVALUE_INVALID</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af731b002fab45855199994aa132d0c7e" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>HARD</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1af8656af330dfd198ea87ffadab432820" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>hash</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1ae29b5039030a3969ef39f7e1e009e709" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>hashCode</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af5989b24990dba61bcd0f905b8c5c293" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>hashEntry</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a07c7cee89f737ff26bfdc1c8091d577c" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>hashIndex</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a9fc795753d47ee1df60e1310725d862b" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>init</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a3cb4d5bb4aa13d1f8f7ce569412aac18" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>isEmpty</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ad410af0b0554e8b9a1fcfaba46af845a" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>isEqualKey</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a8878c87b575609924fe0e2d33f4efc2b" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>isEqualValue</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ac6a1b622d81961532735cf10a68a2dcc" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>keySet</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a17174511c9bc47b8324149672f236a02" prot="protected" virt="non-virtual" ambiguityscope="org::apache::commons::collections::map::AbstractHashedMap."><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>keySet</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a4740a8292bec34a1012770fbd58faa2f" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>keyType</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a2b6eca9c5a9367ea944670a443a5b555" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>loadFactor</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ad2ff03d9591b09848effe30508656f12" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>mapIterator</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a32b97e399f63f1c47be210d4c26fa45e" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>MAXIMUM_CAPACITY</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a7d8a11a63c0cc092215b92b90105f8ab" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>modCount</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1ad36d3f7d8a7ad41625b8c818c7604bee" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>NO_NEXT_ENTRY</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1aebe646b8e13879cd69169199a2055d88" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>NO_PREVIOUS_ENTRY</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1af8d3344e60612d8519a55e94156342ac" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>NULL</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a048ff84d4217b867296fc949a377f496" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>purge</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1acfba62cc5ac10c677c50d3ffdbe46449" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>purge</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a34172b6ce67c1b6f966bba7351d64e76" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>purgeBeforeRead</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a507daa6652dffb0c2e91776eaac85f56" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>purgeBeforeWrite</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a4c1de0f34c08b8d1cccb884edf975e57" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>purgeValues</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ac2374be980421e681fae891f89e4a77e" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>put</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1af1c55fc542c160b51bdb8bd8f6656504" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>putAll</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a5938c4d59a2902a9d549d94459e7d1fa" prot="private" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>queue</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1aad2b68077e4cf57002a4434038959fc6" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>remove</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a1b0135f4e27d123f41c461098f207eb8" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>REMOVE_INVALID</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a3794a97519e1fe9831073d1c54778cf4" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>removeEntry</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a0dd50e56c27f5bcb049e91ea52df3203" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>removeMapping</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a73815bc6d192060cccc83044d8f39416" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>reuseEntry</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a94acef38eb0c1138d5393561d075ffe0" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>SETVALUE_INVALID</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ac283e757d1b924316731ebb4467f2a67" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>size</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a94289b9872435205bc446ab9520d4d9e" prot="protected" virt="non-virtual" ambiguityscope="org::apache::commons::collections::map::AbstractHashedMap."><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>size</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a5d616e45811742a81988965e86f403db" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>SOFT</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a3e6b7ae91dbd17786779a520f94dbc11" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>threshold</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a38e0feace02a112ff562b8cbf91f2cc0" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>toString</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a039d627c353264ac3febe170edca5a06" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>updateEntry</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1aff315edaecb7c719092db9db7dbebf1b" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>values</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1aa566df1228b61b14daae67766e214283" prot="protected" virt="non-virtual" ambiguityscope="org::apache::commons::collections::map::AbstractHashedMap."><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>values</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1aa34a045877daedff230dbfdb261180d1" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>valueType</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a6a128ff8a3523a52a8bd08d5c943e743" prot="private" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>verify</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af6dd0361c4cd113da7b56e8515165487" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::AbstractReferenceMap</scope><name>WEAK</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
