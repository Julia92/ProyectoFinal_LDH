.TH "desmoj.core.simulator.Condition< E extends Entity >" 3 "Wed Dec 4 2013" "Version 1.0" "Desmo-J" \" -*- nroff -*-
.ad l
.nh
.SH NAME
desmoj.core.simulator.Condition< E extends Entity > \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBdesmoj\&.core\&.simulator\&.ModelComponent\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCondition\fP (\fBModel\fP owner, String name, boolean showInTrace, Object\&.\&.\&.args)"
.br
.ti -1c
.RI "boolean \fBhasPrimitiveArguments\fP ()"
.br
.ti -1c
.RI "Object[] \fBgetConstructArguments\fP ()"
.br
.ti -1c
.RI "abstract boolean \fBcheck\fP (E e)"
.br
.ti -1c
.RI "boolean \fBcheck\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Derive from this class to create a conditional which an entity (including processes as special entities) may fulfill or not, e\&.g\&. for the purpose of queue filtering\&. Override method \fBcheck(E e)\fP such that it returns \fCtrue\fP whenever an entity complies to the condition\&.
.PP
For conditions that do not apply to a specific \fBEntity\fP, but to the model as whole (e\&.g\&. when to stop an experiment), use \fC\fBModelCondition\fP\fP\&.
.PP
\fBVersion:\fP
.RS 4
DESMO-J, Ver\&. 2\&.4\&.0 copyright (c) 2013 
.RE
.PP
\fBAuthor:\fP
.RS 4
Tim Lechler
.RE
.PP
Licensed under the Apache License, Version 2\&.0 (the 'License'); you may not use this file except in compliance with the License\&. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
.PP
Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied\&. See the License for the specific language governing permissions and limitations under the License\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "desmoj\&.core\&.simulator\&.Condition< E extends \fBEntity\fP >\&.Condition (\fBModel\fPowner, Stringname, booleanshowInTrace, Object\&.\&.\&.args)"
Constructs a condition with the given name and parameters for trace files\&.
.PP
\fBParameters:\fP
.RS 4
\fIowner\fP \fBModel\fP : The main model this condition is associated to 
.br
\fIname\fP java\&.lang\&.String : The name of this condition 
.br
\fIshowInTrace\fP boolean : Flag for showing this condition in trace-files\&. Set it to \fCtrue\fP if model should show up in trace, \fCfalse\fP if model should not be shown in trace\&. 
.br
\fIargs\fP Object\&.\&.\&. : Arguments to pass to the condition (can be omitted) 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "abstract boolean desmoj\&.core\&.simulator\&.Condition< E extends \fBEntity\fP >\&.check (Ee)\fC [pure virtual]\fP"
Returns a boolean showing whether the given \fBEntity\fP complies to the condition tested by this method or not\&. Inherit from this class and implement this abstract method to return true if the passed \fBEntity\fP conforms to your special condition\&.
.PP
\fBReturns:\fP
.RS 4
boolean : Is \fCtrue\fP, if the entity given conforms to the condition, \fCfalse\fP otherwise\&. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIe\fP E : The \fBEntity\fP to test the condition on 
.RE
.PP

.SS "boolean desmoj\&.core\&.simulator\&.Condition< E extends \fBEntity\fP >\&.check ()"

.PP
\fBDeprecated\fP
.RS 4
Replaced by \fC\fBModelCondition\&.check()\fP\fP
.RE
.PP
.PP
Returns a boolean showing whether the model complies to the condition tested by this method or not\&. Inherit from this class and override this method to return true if the model conforms to your special condition; the entity type this condition was parameterised with is ignored\&.
.PP
\fBReturns:\fP
.RS 4
boolean : Is \fCtrue\fP, if the model conforms to the condition, \fCfalse\fP otherwise\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Desmo-J from the source code\&.
