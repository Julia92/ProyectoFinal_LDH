<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classdesmoj_1_1core_1_1simulator_1_1_randomizing_event_tree_list" kind="class" prot="public">
    <compoundname>desmoj::core::simulator::RandomizingEventTreeList</compoundname>
    <basecompoundref refid="classdesmoj_1_1core_1_1simulator_1_1_event_tree_list" prot="public" virt="non-virtual">desmoj.core.simulator.EventTreeList</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdesmoj_1_1core_1_1simulator_1_1_randomizing_event_tree_list_1a87944e01c53eebb85e0dfe647c56ad86" prot="private" static="no" mutable="no">
        <type>Random</type>
        <definition>Random desmoj.core.simulator.RandomizingEventTreeList._positionGenerator</definition>
        <argsstring></argsstring>
        <name>_positionGenerator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the random position generator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/core/simulator/RandomizingEventTreeList.java" line="38" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/core/simulator/RandomizingEventTreeList.java" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdesmoj_1_1core_1_1simulator_1_1_randomizing_event_tree_list_1aed82317c0596fb628654b8d3b1f71a9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>desmoj.core.simulator.RandomizingEventTreeList.RandomizingEventTreeList</definition>
        <argsstring>()</argsstring>
        <name>RandomizingEventTreeList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new randomizing Event tree list. Initializes the event tree list and the random position generator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/core/simulator/RandomizingEventTreeList.java" line="47" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/core/simulator/RandomizingEventTreeList.java" bodystart="47" bodyend="50"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="classdesmoj_1_1core_1_1simulator_1_1_randomizing_event_tree_list_1a57ce1e29fd2ebe1a9190b6cb4ad5c309" prot="package" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void desmoj.core.simulator.RandomizingEventTreeList.insertBefore</definition>
        <argsstring>(EventNote where, EventNote newNote)</argsstring>
        <name>insertBefore</name>
        <reimplements refid="classdesmoj_1_1core_1_1simulator_1_1_event_tree_list_1a8f63f33a68b87eee66cb4908b1919706">insertBefore</reimplements>
        <param>
          <type><ref refid="classdesmoj_1_1core_1_1simulator_1_1_event_note" kindref="compound">EventNote</ref></type>
          <declname>where</declname>
        </param>
        <param>
          <type><ref refid="classdesmoj_1_1core_1_1simulator_1_1_event_note" kindref="compound">EventNote</ref></type>
          <declname>newNote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inserts the given new event-note directly before the specified Event note. Registers <computeroutput>where</computeroutput> as connected to <computeroutput>newNote</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>: the event-note before which the new note shall be inserted </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newNote</parametername>
</parameternamelist>
<parameterdescription>
<para>: the new event-note to be inserted </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/core/simulator/RandomizingEventTreeList.java" line="64" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/core/simulator/RandomizingEventTreeList.java" bodystart="64" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classdesmoj_1_1core_1_1simulator_1_1_randomizing_event_tree_list_1ae559b64aa939f8415a22f80aa555828a" prot="package" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void desmoj.core.simulator.RandomizingEventTreeList.insertAfter</definition>
        <argsstring>(EventNote where, EventNote newNote)</argsstring>
        <name>insertAfter</name>
        <reimplements refid="classdesmoj_1_1core_1_1simulator_1_1_event_tree_list_1a42015d8372274fe003612894b3b3471b">insertAfter</reimplements>
        <param>
          <type><ref refid="classdesmoj_1_1core_1_1simulator_1_1_event_note" kindref="compound">EventNote</ref></type>
          <declname>where</declname>
        </param>
        <param>
          <type><ref refid="classdesmoj_1_1core_1_1simulator_1_1_event_note" kindref="compound">EventNote</ref></type>
          <declname>newNote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inserts the given new event-note directly behind the specified Event note. Registers <computeroutput>newNote</computeroutput> as connected to <computeroutput>where</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>: the event-note after which the new note shall be inserted </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newNote</parametername>
</parameternamelist>
<parameterdescription>
<para>: the new event-note to be inserted </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/core/simulator/RandomizingEventTreeList.java" line="84" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/core/simulator/RandomizingEventTreeList.java" bodystart="84" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classdesmoj_1_1core_1_1simulator_1_1_randomizing_event_tree_list_1a18815086c67094aae42520dbd289aade" prot="package" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void desmoj.core.simulator.RandomizingEventTreeList.insertAsFirst</definition>
        <argsstring>(EventNote newNote)</argsstring>
        <name>insertAsFirst</name>
        <reimplements refid="classdesmoj_1_1core_1_1simulator_1_1_event_tree_list_1a9486630e5e5cdb7f60fff06e83e33d76">insertAsFirst</reimplements>
        <param>
          <type><ref refid="classdesmoj_1_1core_1_1simulator_1_1_event_note" kindref="compound">EventNote</ref></type>
          <declname>newNote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inserts the given event-note at the front of the event tree list.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newNote</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classdesmoj_1_1core_1_1simulator_1_1_event_note" kindref="compound">EventNote</ref> : the new event-note to be inserted as first note. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/core/simulator/RandomizingEventTreeList.java" line="99" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/core/simulator/RandomizingEventTreeList.java" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classdesmoj_1_1core_1_1simulator_1_1_randomizing_event_tree_list_1a9041addba9ded9ee40d3af247c8ea525" prot="package" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void desmoj.core.simulator.RandomizingEventTreeList.remove</definition>
        <argsstring>(EventNote note)</argsstring>
        <name>remove</name>
        <reimplements refid="classdesmoj_1_1core_1_1simulator_1_1_event_tree_list_1a6f92b56a141392f5a888e2ca3f5fa3e8">remove</reimplements>
        <param>
          <type><ref refid="classdesmoj_1_1core_1_1simulator_1_1_event_note" kindref="compound">EventNote</ref></type>
          <declname>note</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes the given note from the event tree list. A connection between the note&apos;s previous and next note is established if and only if the given note was connnect to both the previous and next node.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>note</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classdesmoj_1_1core_1_1simulator_1_1_event_note" kindref="compound">EventNote</ref> : the event-note to be removed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/core/simulator/RandomizingEventTreeList.java" line="114" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/core/simulator/RandomizingEventTreeList.java" bodystart="114" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classdesmoj_1_1core_1_1simulator_1_1_randomizing_event_tree_list_1a75e0fea73c8edbc0dba9a930a6bd65fe" prot="package" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void desmoj.core.simulator.RandomizingEventTreeList.removeFirst</definition>
        <argsstring>()</argsstring>
        <name>removeFirst</name>
        <reimplements refid="classdesmoj_1_1core_1_1simulator_1_1_event_tree_list_1a1f5009051efa46c3ae50887f0ed528e8">removeFirst</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes the first event-note (if any). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/core/simulator/RandomizingEventTreeList.java" line="132" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/core/simulator/RandomizingEventTreeList.java" bodystart="132" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classdesmoj_1_1core_1_1simulator_1_1_randomizing_event_tree_list_1a27afab982221a1176472fb5edbd11903" prot="package" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void desmoj.core.simulator.RandomizingEventTreeList.insert</definition>
        <argsstring>(EventNote newNote)</argsstring>
        <name>insert</name>
        <reimplements refid="classdesmoj_1_1core_1_1simulator_1_1_event_tree_list_1aad126fd414435b761db403de2c48e200">insert</reimplements>
        <param>
          <type><ref refid="classdesmoj_1_1core_1_1simulator_1_1_event_note" kindref="compound">EventNote</ref></type>
          <declname>newNote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inserts the given event-note into the event tree list. Overwrites the inherited insert() method to achieve random insert for concurrent Events. Takes possible connections between existing event-notes into account, i.e. will not insert the new note between connected events. Connections may only exist between two events of the same time where one of the events has been inserted via insertBefore() or insertAfter().</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newNote</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classdesmoj_1_1core_1_1simulator_1_1_event_note" kindref="compound">EventNote</ref> : the event-note to be inserted </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/core/simulator/RandomizingEventTreeList.java" line="152" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/core/simulator/RandomizingEventTreeList.java" bodystart="152" bodyend="201"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classdesmoj_1_1core_1_1simulator_1_1_randomizing_event_tree_list_1a20bcfd2ef7d46f6f3d995ffc84aedc18" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int desmoj.core.simulator.RandomizingEventTreeList.findLastIndex</definition>
        <argsstring>(int firstIndex)</argsstring>
        <name>findLastIndex</name>
        <param>
          <type>int</type>
          <declname>firstIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This helper method determines the position of the last event-note with the same time/priority as the event-note at position firstIndex doing a simple linear search from firstIndex. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/core/simulator/RandomizingEventTreeList.java" line="208" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/core/simulator/RandomizingEventTreeList.java" bodystart="208" bodyend="220"/>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1list_1_1_tree_list_1a81e032c7fbf98cc6246e5d2297e803ad" compoundref="_tree_list_8java" startline="96" endline="99">org.apache.commons.collections.list.TreeList.get</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A specialized Event tree list providing random order for concurrent Event notes. Random order is achieved by computing a random insert position within the range of simultaneous (concurrent) events. Existing connections between events are maintained, i.e. a new event-note will never be inserted between two connected event-notes. Connections are only possible between to successive concurrent Event notes where one of the notes was inserted by call of the insertBefore() or the insertAfter() method. Most of the methods inherited from the super class <ref refid="classdesmoj_1_1core_1_1simulator_1_1_event_tree_list" kindref="compound">EventTreeList</ref>are only overwritten to keep track of the existing connections.</para><para><simplesect kind="version"><para>DESMO-J, Ver. 2.4.0 copyright (c) 2013 </para></simplesect>
<simplesect kind="author"><para>Ruth Meyer, modified by Johannes G<umlaut char="o"/>bel</para></simplesect>
Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at <ulink url="http://www.apache.org/licenses/LICENSE-2.0">http://www.apache.org/licenses/LICENSE-2.0</ulink></para><para>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="9733">
        <label>desmoj.core.simulator.EventTreeList</label>
        <link refid="classdesmoj_1_1core_1_1simulator_1_1_event_tree_list"/>
        <childnode refid="9734" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9732">
        <label>desmoj.core.simulator.RandomizingEventTreeList</label>
        <link refid="classdesmoj_1_1core_1_1simulator_1_1_randomizing_event_tree_list"/>
        <childnode refid="9733" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9734">
        <label>desmoj.core.simulator.EventList</label>
        <link refid="classdesmoj_1_1core_1_1simulator_1_1_event_list"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9736">
        <label>desmoj.core.simulator.EventTreeList</label>
        <link refid="classdesmoj_1_1core_1_1simulator_1_1_event_tree_list"/>
        <childnode refid="9737" relation="public-inheritance">
        </childnode>
        <childnode refid="9738" relation="usage">
          <edgelabel>eTreeList</edgelabel>
        </childnode>
      </node>
      <node id="9738">
        <label>org.apache.commons.collections.list.TreeList</label>
        <link refid="classorg_1_1apache_1_1commons_1_1collections_1_1list_1_1_tree_list"/>
        <childnode refid="9739" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9735">
        <label>desmoj.core.simulator.RandomizingEventTreeList</label>
        <link refid="classdesmoj_1_1core_1_1simulator_1_1_randomizing_event_tree_list"/>
        <childnode refid="9736" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9739">
        <label>AbstractList</label>
      </node>
      <node id="9737">
        <label>desmoj.core.simulator.EventList</label>
        <link refid="classdesmoj_1_1core_1_1simulator_1_1_event_list"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/core/simulator/RandomizingEventTreeList.java" line="32" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/core/simulator/RandomizingEventTreeList.java" bodystart="32" bodyend="222"/>
    <listofallmembers>
      <member refid="classdesmoj_1_1core_1_1simulator_1_1_randomizing_event_tree_list_1a87944e01c53eebb85e0dfe647c56ad86" prot="private" virt="non-virtual"><scope>desmoj::core::simulator::RandomizingEventTreeList</scope><name>_positionGenerator</name></member>
      <member refid="classdesmoj_1_1core_1_1simulator_1_1_event_tree_list_1ac7b1425cb56e415f1d73b75bbe3488af" prot="package" virt="non-virtual"><scope>desmoj::core::simulator::RandomizingEventTreeList</scope><name>eTreeList</name></member>
      <member refid="classdesmoj_1_1core_1_1simulator_1_1_event_tree_list_1ac9d19de18b9a4945bcb7d7c763aa13d4" prot="package" virt="non-virtual"><scope>desmoj::core::simulator::RandomizingEventTreeList</scope><name>EventTreeList</name></member>
      <member refid="classdesmoj_1_1core_1_1simulator_1_1_randomizing_event_tree_list_1a20bcfd2ef7d46f6f3d995ffc84aedc18" prot="protected" virt="non-virtual"><scope>desmoj::core::simulator::RandomizingEventTreeList</scope><name>findLastIndex</name></member>
      <member refid="classdesmoj_1_1core_1_1simulator_1_1_event_tree_list_1a25a764af8d755c27f26e2ec9a98e5156" prot="package" virt="virtual"><scope>desmoj::core::simulator::RandomizingEventTreeList</scope><name>firstNote</name></member>
      <member refid="classdesmoj_1_1core_1_1simulator_1_1_randomizing_event_tree_list_1a27afab982221a1176472fb5edbd11903" prot="package" virt="virtual"><scope>desmoj::core::simulator::RandomizingEventTreeList</scope><name>insert</name></member>
      <member refid="classdesmoj_1_1core_1_1simulator_1_1_randomizing_event_tree_list_1ae559b64aa939f8415a22f80aa555828a" prot="package" virt="virtual"><scope>desmoj::core::simulator::RandomizingEventTreeList</scope><name>insertAfter</name></member>
      <member refid="classdesmoj_1_1core_1_1simulator_1_1_randomizing_event_tree_list_1a18815086c67094aae42520dbd289aade" prot="package" virt="virtual"><scope>desmoj::core::simulator::RandomizingEventTreeList</scope><name>insertAsFirst</name></member>
      <member refid="classdesmoj_1_1core_1_1simulator_1_1_randomizing_event_tree_list_1a57ce1e29fd2ebe1a9190b6cb4ad5c309" prot="package" virt="virtual"><scope>desmoj::core::simulator::RandomizingEventTreeList</scope><name>insertBefore</name></member>
      <member refid="classdesmoj_1_1core_1_1simulator_1_1_event_tree_list_1a1ca9a3d1addd87c1219e1393bf5c7e7d" prot="package" virt="virtual"><scope>desmoj::core::simulator::RandomizingEventTreeList</scope><name>isEmpty</name></member>
      <member refid="classdesmoj_1_1core_1_1simulator_1_1_event_tree_list_1a5cd0ed6f76f49852bcee85884f866da8" prot="package" virt="virtual"><scope>desmoj::core::simulator::RandomizingEventTreeList</scope><name>lastNote</name></member>
      <member refid="classdesmoj_1_1core_1_1simulator_1_1_event_tree_list_1aecbfeba586d7f544475ac49615002228" prot="package" virt="virtual"><scope>desmoj::core::simulator::RandomizingEventTreeList</scope><name>nextNote</name></member>
      <member refid="classdesmoj_1_1core_1_1simulator_1_1_event_tree_list_1a8202f35ec489522a44b9b14d649f5b1d" prot="package" virt="virtual"><scope>desmoj::core::simulator::RandomizingEventTreeList</scope><name>prevNote</name></member>
      <member refid="classdesmoj_1_1core_1_1simulator_1_1_randomizing_event_tree_list_1aed82317c0596fb628654b8d3b1f71a9b" prot="public" virt="non-virtual"><scope>desmoj::core::simulator::RandomizingEventTreeList</scope><name>RandomizingEventTreeList</name></member>
      <member refid="classdesmoj_1_1core_1_1simulator_1_1_randomizing_event_tree_list_1a9041addba9ded9ee40d3af247c8ea525" prot="package" virt="virtual"><scope>desmoj::core::simulator::RandomizingEventTreeList</scope><name>remove</name></member>
      <member refid="classdesmoj_1_1core_1_1simulator_1_1_randomizing_event_tree_list_1a75e0fea73c8edbc0dba9a930a6bd65fe" prot="package" virt="virtual"><scope>desmoj::core::simulator::RandomizingEventTreeList</scope><name>removeFirst</name></member>
      <member refid="classdesmoj_1_1core_1_1simulator_1_1_event_tree_list_1ada6849ed147bb4f0cc08dcb72faf1c46" prot="public" virt="non-virtual"><scope>desmoj::core::simulator::RandomizingEventTreeList</scope><name>toString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
