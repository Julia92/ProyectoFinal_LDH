<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl" kind="class" prot="public">
    <compoundname>org::apache::commons::math::distribution::DistributionFactoryImpl</compoundname>
    <basecompoundref refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory" prot="public" virt="non-virtual">org.apache.commons.math.distribution.DistributionFactory</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1a0f957d4f098d1f18954db28d2a2299f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.math.distribution.DistributionFactoryImpl.DistributionFactoryImpl</definition>
        <argsstring>()</argsstring>
        <name>DistributionFactoryImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor. Package scope to prevent unwanted instantiation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" line="32" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1ae95b85ac156aa89e95765a907f76eea4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution" kindref="compound">ChiSquaredDistribution</ref></type>
        <definition>ChiSquaredDistribution org.apache.commons.math.distribution.DistributionFactoryImpl.createChiSquareDistribution</definition>
        <argsstring>(final double degreesOfFreedom)</argsstring>
        <name>createChiSquareDistribution</name>
        <param>
          <type>final double</type>
          <declname>degreesOfFreedom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new chi-square distribution with the given degrees of freedom.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>degreesOfFreedom</parametername>
</parameternamelist>
<parameterdescription>
<para>degrees of freedom </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new chi-square distribution </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" line="42" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" bodystart="42" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1a967938ad63c4ce160e0421a24844fe69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_gamma_distribution" kindref="compound">GammaDistribution</ref></type>
        <definition>GammaDistribution org.apache.commons.math.distribution.DistributionFactoryImpl.createGammaDistribution</definition>
        <argsstring>(double alpha, double beta)</argsstring>
        <name>createGammaDistribution</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a32a5a2820ba7cc0ccb64ef44d016a3ee">createGammaDistribution</reimplements>
        <param>
          <type>double</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new gamma distribution the given shape and scale parameters.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>the shape parameter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beta</parametername>
</parameternamelist>
<parameterdescription>
<para>the scale parameter </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new gamma distribution </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" line="55" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" bodystart="55" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1af54e0301ade4c6fe4c63683ca30717b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_t_distribution" kindref="compound">TDistribution</ref></type>
        <definition>TDistribution org.apache.commons.math.distribution.DistributionFactoryImpl.createTDistribution</definition>
        <argsstring>(double degreesOfFreedom)</argsstring>
        <name>createTDistribution</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a10af6be90270681365d0422d0c00a073">createTDistribution</reimplements>
        <param>
          <type>double</type>
          <declname>degreesOfFreedom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new t distribution with the given degrees of freedom.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>degreesOfFreedom</parametername>
</parameternamelist>
<parameterdescription>
<para>degrees of freedom </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new t distribution. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" line="67" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1ac29564f013086e78e435ace0fc931033" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution" kindref="compound">FDistribution</ref></type>
        <definition>FDistribution org.apache.commons.math.distribution.DistributionFactoryImpl.createFDistribution</definition>
        <argsstring>(double numeratorDegreesOfFreedom, double denominatorDegreesOfFreedom)</argsstring>
        <name>createFDistribution</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a0fd2cf0719e62585b5ea6030868c34fc">createFDistribution</reimplements>
        <param>
          <type>double</type>
          <declname>numeratorDegreesOfFreedom</declname>
        </param>
        <param>
          <type>double</type>
          <declname>denominatorDegreesOfFreedom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new F-distribution with the given degrees of freedom.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numeratorDegreesOfFreedom</parametername>
</parameternamelist>
<parameterdescription>
<para>numerator degrees of freedom </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>denominatorDegreesOfFreedom</parametername>
</parameternamelist>
<parameterdescription>
<para>denominator degrees of freedom </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new F-distribution </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" line="78" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" bodystart="78" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1a1196dceb3d543dc258dd0a1aa5ca92cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution" kindref="compound">ExponentialDistribution</ref></type>
        <definition>ExponentialDistribution org.apache.commons.math.distribution.DistributionFactoryImpl.createExponentialDistribution</definition>
        <argsstring>(double mean)</argsstring>
        <name>createExponentialDistribution</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a7bde34c696535769b4a8b02c7d9c92e2">createExponentialDistribution</reimplements>
        <param>
          <type>double</type>
          <declname>mean</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new exponential distribution with the given degrees of freedom.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mean</parametername>
</parameternamelist>
<parameterdescription>
<para>mean </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new exponential distribution </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" line="91" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1af84f352435509d29b4d9ff0f064d345c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_binomial_distribution" kindref="compound">BinomialDistribution</ref></type>
        <definition>BinomialDistribution org.apache.commons.math.distribution.DistributionFactoryImpl.createBinomialDistribution</definition>
        <argsstring>(int numberOfTrials, double probabilityOfSuccess)</argsstring>
        <name>createBinomialDistribution</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1abe6daeb2e12fd174de0efa4d864e48e8">createBinomialDistribution</reimplements>
        <param>
          <type>int</type>
          <declname>numberOfTrials</declname>
        </param>
        <param>
          <type>double</type>
          <declname>probabilityOfSuccess</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a binomial distribution with the given number of trials and probability of success.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numberOfTrials</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of trials </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>probabilityOfSuccess</parametername>
</parameternamelist>
<parameterdescription>
<para>the probability of success </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new binomial distribution </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" line="103" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" bodystart="103" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1afb26406212d11876503052a8cbfe4eb6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution" kindref="compound">HypergeometricDistribution</ref></type>
        <definition>HypergeometricDistribution org.apache.commons.math.distribution.DistributionFactoryImpl.createHypergeometricDistribution</definition>
        <argsstring>(int populationSize, int numberOfSuccesses, int sampleSize)</argsstring>
        <name>createHypergeometricDistribution</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a7975af936a0c7caeabfbaa9d86b30296">createHypergeometricDistribution</reimplements>
        <param>
          <type>int</type>
          <declname>populationSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numberOfSuccesses</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sampleSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new hypergeometric distribution with the given the population size, the number of successes in the population, and the sample size.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>populationSize</parametername>
</parameternamelist>
<parameterdescription>
<para>the population size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numberOfSuccesses</parametername>
</parameternamelist>
<parameterdescription>
<para>number of successes in the population </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sampleSize</parametername>
</parameternamelist>
<parameterdescription>
<para>the sample size </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new hypergeometric desitribution </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" line="118" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" bodystart="118" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1a039c15b625eaed821de8c6eca9f48636" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_normal_distribution" kindref="compound">NormalDistribution</ref></type>
        <definition>NormalDistribution org.apache.commons.math.distribution.DistributionFactoryImpl.createNormalDistribution</definition>
        <argsstring>(double mean, double sd)</argsstring>
        <name>createNormalDistribution</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a2487b1cc8ef62f9faac55d335540198e">createNormalDistribution</reimplements>
        <param>
          <type>double</type>
          <declname>mean</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new normal distribution with the given mean and standard deviation.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mean</parametername>
</parameternamelist>
<parameterdescription>
<para>the mean of the distribution </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sd</parametername>
</parameternamelist>
<parameterdescription>
<para>standard deviation </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new normal distribution </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" line="132" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" bodystart="132" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1a0d8af5fc978e1ad2d725e9c22bc25cb8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_normal_distribution" kindref="compound">NormalDistribution</ref></type>
        <definition>NormalDistribution org.apache.commons.math.distribution.DistributionFactoryImpl.createNormalDistribution</definition>
        <argsstring>()</argsstring>
        <name>createNormalDistribution</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a7f73fce12eeca88fce51f9e9026db268">createNormalDistribution</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new normal distribution with the mean zero and standard deviation one.</para><para><simplesect kind="return"><para>a new normal distribution </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" line="142" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" bodystart="142" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1a7311b48b88255d712f7efe317e0c41ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution" kindref="compound">PoissonDistribution</ref></type>
        <definition>PoissonDistribution org.apache.commons.math.distribution.DistributionFactoryImpl.createPoissonDistribution</definition>
        <argsstring>(double lambda)</argsstring>
        <name>createPoissonDistribution</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a78c33144a92f40738963a967e6c0ab9b">createPoissonDistribution</reimplements>
        <param>
          <type>double</type>
          <declname>lambda</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new Poisson distribution with poisson parameter lambda. </para><para>lambda must be postive; otherwise an <computeroutput>IllegalArgumentException</computeroutput> is thrown.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lambda</parametername>
</parameternamelist>
<parameterdescription>
<para>poisson parameter </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new Poisson distribution </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if lambda <le/> 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" line="156" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" bodystart="156" bodyend="158"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A concrete distribution factory. This is the default factory used by Commons-Math.</para><para><simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision:</title><para>545192 </para></simplesect>
<simplesect kind="rcs"><title>Date:</title><para>2007-06-07 07:35:04 -0700 (Thu, 07 Jun 2007) </para></simplesect>
<xrefsect id="deprecated_1_deprecated000066"><xreftitle>Deprecated</xreftitle><xrefdescription><para>pluggability of distribution instances is now provided through constructors and setters. </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <inheritancegraph>
      <node id="7258">
        <label>org.apache.commons.math.distribution.DistributionFactory</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory"/>
      </node>
      <node id="7257">
        <label>org.apache.commons.math.distribution.DistributionFactoryImpl</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl"/>
        <childnode refid="7258" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7260">
        <label>org.apache.commons.math.distribution.DistributionFactory</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory"/>
      </node>
      <node id="7259">
        <label>org.apache.commons.math.distribution.DistributionFactoryImpl</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl"/>
        <childnode refid="7260" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" line="27" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactoryImpl.java" bodystart="27" bodyend="159"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1af84f352435509d29b4d9ff0f064d345c" prot="public" virt="virtual"><scope>org::apache::commons::math::distribution::DistributionFactoryImpl</scope><name>createBinomialDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1adf244f05eb96596801e3876544b17fba" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::DistributionFactoryImpl</scope><name>createCauchyDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1ae95b85ac156aa89e95765a907f76eea4" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::DistributionFactoryImpl</scope><name>createChiSquareDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a0bc450073e44b6e72327d8c1ad1a5956" prot="public" virt="pure-virtual" ambiguityscope="org::apache::commons::math::distribution::DistributionFactory."><scope>org::apache::commons::math::distribution::DistributionFactoryImpl</scope><name>createChiSquareDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1a1196dceb3d543dc258dd0a1aa5ca92cf" prot="public" virt="virtual"><scope>org::apache::commons::math::distribution::DistributionFactoryImpl</scope><name>createExponentialDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1ac29564f013086e78e435ace0fc931033" prot="public" virt="virtual"><scope>org::apache::commons::math::distribution::DistributionFactoryImpl</scope><name>createFDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1a967938ad63c4ce160e0421a24844fe69" prot="public" virt="virtual"><scope>org::apache::commons::math::distribution::DistributionFactoryImpl</scope><name>createGammaDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1afb26406212d11876503052a8cbfe4eb6" prot="public" virt="virtual"><scope>org::apache::commons::math::distribution::DistributionFactoryImpl</scope><name>createHypergeometricDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1a039c15b625eaed821de8c6eca9f48636" prot="public" virt="virtual"><scope>org::apache::commons::math::distribution::DistributionFactoryImpl</scope><name>createNormalDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1a0d8af5fc978e1ad2d725e9c22bc25cb8" prot="public" virt="virtual"><scope>org::apache::commons::math::distribution::DistributionFactoryImpl</scope><name>createNormalDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a979bc5a69fb67b1e6e04b3ad3020c2a6" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::DistributionFactoryImpl</scope><name>createPascalDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1a7311b48b88255d712f7efe317e0c41ba" prot="public" virt="virtual"><scope>org::apache::commons::math::distribution::DistributionFactoryImpl</scope><name>createPoissonDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1af54e0301ade4c6fe4c63683ca30717b8" prot="public" virt="virtual"><scope>org::apache::commons::math::distribution::DistributionFactoryImpl</scope><name>createTDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a41d656cdd8d9c9dc4b43f54e3b649719" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::DistributionFactoryImpl</scope><name>createWeibullDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a86d67e335bb2b4f962c8beb95c11187f" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::distribution::DistributionFactoryImpl</scope><name>DistributionFactory</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1a0f957d4f098d1f18954db28d2a2299f8" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::DistributionFactoryImpl</scope><name>DistributionFactoryImpl</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1ac5ecf710da378fd5f429237814de2eed" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::DistributionFactoryImpl</scope><name>newInstance</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
