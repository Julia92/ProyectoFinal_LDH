<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="interfaceorg_1_1apache_1_1commons_1_1math_1_1util_1_1_double_array" kind="interface" prot="public">
    <compoundname>org::apache::commons::math::util::DoubleArray</compoundname>
    <derivedcompoundref refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_resizable_double_array" prot="public" virt="non-virtual">org.apache.commons.math.util.ResizableDoubleArray</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1commons_1_1math_1_1util_1_1_double_array_1a89da043e713a69ce300c5f0f7e8fc087" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int org.apache.commons.math.util.DoubleArray.getNumElements</definition>
        <argsstring>()</argsstring>
        <name>getNumElements</name>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_resizable_double_array_1a4867e8a1b5286f7a41ceb130d5580694">getNumElements</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the number of elements currently in the array. Please note that this may be different from the length of the internal storage array.</para><para><simplesect kind="return"><para>number of elements </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/DoubleArray.java" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1commons_1_1math_1_1util_1_1_double_array_1a4788b0b461ccc0479fdd084bec4c9fec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.util.DoubleArray.getElement</definition>
        <argsstring>(int index)</argsstring>
        <name>getElement</name>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_resizable_double_array_1a9175fe9c64ce121b99f1a7a9b76823e1">getElement</reimplementedby>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the element at the specified index. Note that if an out of bounds index is supplied a ArrayIndexOutOfBoundsException will be thrown.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index to fetch a value from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value stored at the specified index </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArrayIndexOutOfBoundsException</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>index</computeroutput> is less than zero or is greater than <computeroutput><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1util_1_1_double_array_1a89da043e713a69ce300c5f0f7e8fc087" kindref="member">getNumElements()</ref> - 1</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/DoubleArray.java" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1commons_1_1math_1_1util_1_1_double_array_1a083ed88f659246e6a7557e03b4a763f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.math.util.DoubleArray.setElement</definition>
        <argsstring>(int index, double value)</argsstring>
        <name>setElement</name>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_resizable_double_array_1ac2d60b4ce4e53faa27dc45c74a7938ea">setElement</reimplementedby>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the element at the specified index. If the specified index is greater than <computeroutput><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1util_1_1_double_array_1a89da043e713a69ce300c5f0f7e8fc087" kindref="member">getNumElements()</ref> - 1</computeroutput>, the <computeroutput>numElements</computeroutput> property is increased to <computeroutput>index +1</computeroutput> and additional storage is allocated (if necessary) for the new element and all (uninitialized) elements between the new element and the previous end of the array).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index to store a value in </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>value to store at the specified index </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArrayIndexOutOfBoundsException</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>index</computeroutput> is less than zero. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/DoubleArray.java" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1commons_1_1math_1_1util_1_1_double_array_1a347c72406c0b4c85b46a73d66457aa34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.math.util.DoubleArray.addElement</definition>
        <argsstring>(double value)</argsstring>
        <name>addElement</name>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_resizable_double_array_1a92bf109c1bd11b2b8ad312bbed29e13e">addElement</reimplementedby>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds an element to the end of this expandable array</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>to be added to end of array </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/DoubleArray.java" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1commons_1_1math_1_1util_1_1_double_array_1a8aa2fff7b3371a8aa8adf7b74bd40bbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.util.DoubleArray.addElementRolling</definition>
        <argsstring>(double value)</argsstring>
        <name>addElementRolling</name>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_resizable_double_array_1a503cbf4a4a334030e27a5a63d2456f4c">addElementRolling</reimplementedby>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds an element to the end of the array and removes the first element in the array. Returns the discarded first element. The effect is similar to a push operation in a FIFO queue. </para><para>Example: If the array contains the elements 1, 2, 3, 4 (in that order) and addElementRolling(5) is invoked, the result is an array containing the entries 2, 3, 4, 5 and the value returned is 1. </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to be added to the array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value which has been discarded or &quot;pushed&quot; out of the array by this rolling insert </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/DoubleArray.java" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1commons_1_1math_1_1util_1_1_double_array_1a1817778927ba7081bdc06b1a268a20de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double[]</type>
        <definition>double [] org.apache.commons.math.util.DoubleArray.getElements</definition>
        <argsstring>()</argsstring>
        <name>getElements</name>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_resizable_double_array_1acf87696cae93f22fbe65ad4d94024b62">getElements</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a double[] array containing the elements of this <computeroutput><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1util_1_1_double_array" kindref="compound">DoubleArray</ref></computeroutput>. If the underlying implementation is array-based, this method should always return a copy, rather than a reference to the underlying array so that changes made to the returned array have no effect on the <computeroutput><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1util_1_1_double_array" kindref="compound">DoubleArray</ref>.</computeroutput></para><para><simplesect kind="return"><para>all elements added to the array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/DoubleArray.java" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1commons_1_1math_1_1util_1_1_double_array_1a010496d02237d3b12b228a378a825720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.math.util.DoubleArray.clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_resizable_double_array_1a12e1042fcf4e23d2af373f7f0841c424">clear</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear the double array </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/DoubleArray.java" line="102" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Provides a standard interface for double arrays. Allows different array implementations to support various storage mechanisms such as automatic expansion, contraction, and array &quot;rolling&quot;.</para><para><simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision:</title><para>480440 </para></simplesect>
<simplesect kind="rcs"><title>Date:</title><para>2006-11-29 00:14:12 -0700 (Wed, 29 Nov 2006) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="7305">
        <label>org.apache.commons.math.util.DoubleArray</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1util_1_1_double_array"/>
      </node>
      <node id="7306">
        <label>org.apache.commons.math.util.ResizableDoubleArray</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_resizable_double_array"/>
        <childnode refid="7305" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/DoubleArray.java" line="27" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/util/DoubleArray.java" bodystart="27" bodyend="104"/>
    <listofallmembers>
      <member refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1util_1_1_double_array_1a347c72406c0b4c85b46a73d66457aa34" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::DoubleArray</scope><name>addElement</name></member>
      <member refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1util_1_1_double_array_1a8aa2fff7b3371a8aa8adf7b74bd40bbc" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::DoubleArray</scope><name>addElementRolling</name></member>
      <member refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1util_1_1_double_array_1a010496d02237d3b12b228a378a825720" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::DoubleArray</scope><name>clear</name></member>
      <member refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1util_1_1_double_array_1a4788b0b461ccc0479fdd084bec4c9fec" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::DoubleArray</scope><name>getElement</name></member>
      <member refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1util_1_1_double_array_1a1817778927ba7081bdc06b1a268a20de" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::DoubleArray</scope><name>getElements</name></member>
      <member refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1util_1_1_double_array_1a89da043e713a69ce300c5f0f7e8fc087" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::DoubleArray</scope><name>getNumElements</name></member>
      <member refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1util_1_1_double_array_1a083ed88f659246e6a7557e03b4a763f4" prot="public" virt="non-virtual"><scope>org::apache::commons::math::util::DoubleArray</scope><name>setElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
