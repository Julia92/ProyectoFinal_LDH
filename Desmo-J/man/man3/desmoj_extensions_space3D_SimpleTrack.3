.TH "desmoj.extensions.space3D.SimpleTrack" 3 "Wed Dec 4 2013" "Version 1.0" "Desmo-J" \" -*- nroff -*-
.ad l
.nh
.SH NAME
desmoj.extensions.space3D.SimpleTrack \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBdesmoj\&.extensions\&.space3D\&.Track\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSimpleTrack\fP (\fBModel\fP owner, String trackName, \fBExtendedLength\fP[] startPosition, \fBExtendedLength\fP[] destination, ArrayList< double[]> wayPoints, boolean showInTrace)"
.br
.ti -1c
.RI "\fBSimpleTrack\fP (\fBModel\fP owner, String trackName, String startLocationName, String destinationLocationName, String exitPointName, String entryPointName, \fBExtendedLength\fP[] startPosition, \fBExtendedLength\fP[] destiny, ArrayList< double[]> wayPoints, boolean showInTrace)"
.br
.ti -1c
.RI "Vector3d \fBgetDirectionAt\fP (double length)"
.br
.ti -1c
.RI "double \fBgetLength\fP ()"
.br
.ti -1c
.RI "\fBExtendedLength\fP[] \fBgetPositionAt\fP (double length)"
.br
.ti -1c
.RI "double[] \fBgetPositionAtValue\fP (double length)"
.br
.ti -1c
.RI "ArrayList< double[]> \fBgetWayPoints\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
A \fBSimpleTrack\fP contains a start position and a destiny position\&. The route between them are modeled through way points\&. Each point (incl\&. the start point) is connected with the successor point through a straight line\&. By following the connected way points from the start point the destiny will be reached at the end\&.
.PP
\fBAuthor:\fP
.RS 4
Fred Sun 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "desmoj\&.extensions\&.space3D\&.SimpleTrack\&.SimpleTrack (\fBModel\fPowner, StringtrackName, \fBExtendedLength\fP[]startPosition, \fBExtendedLength\fP[]destination, ArrayList< double[]>wayPoints, booleanshowInTrace)"
Constructs a SimpleTreck object with the start-, the destination position and the way points\&. Each element of the double[] ArrayList will be interpreted as a way point\&. So the size of the ArrayList must exactly match the number of the way points needed\&.
.PP
\fBParameters:\fP
.RS 4
\fIowner\fP The model this entity is associated to\&. 
.br
\fItrackName\fP The name of this \fBTrack\fP\&. 
.br
\fIstartPosition\fP The start position of the \fBTrack\fP\&. It must be a \fBExtendedLength\fP[] with a length of 3\&. 
.br
\fIdestination\fP The end position of the \fBTrack\fP\&. It must be a \fBExtendedLength\fP[] with a length of 3\&. 
.br
\fIwayPoints\fP The way points (double[] with length of 3) which describes the path between the start and the destination\&. 
.br
\fIshowInTrace\fP Flag for showing entity in trace-files\&. Set it to true if entity should show up in trace\&. Set to false in entity should not be shown in trace\&. 
.RE
.PP

.SS "desmoj\&.extensions\&.space3D\&.SimpleTrack\&.SimpleTrack (\fBModel\fPowner, StringtrackName, StringstartLocationName, StringdestinationLocationName, StringexitPointName, StringentryPointName, \fBExtendedLength\fP[]startPosition, \fBExtendedLength\fP[]destiny, ArrayList< double[]>wayPoints, booleanshowInTrace)"
Constructs a \fBSimpleTrack\fP with the start- and the destination positions\&. The way points can be used to describe the path between the start and the destination\&. The name of the start location, the destination location, the entry point and the exit point are optional and describe where the start- and the destination position are associated to\&. Each element of the double[] ArrayList will be interpreted as a way point\&. So the size of the ArrayList must exactly match the number of the way points needed\&.
.PP
\fBParameters:\fP
.RS 4
\fIowner\fP The model this entity is associated to\&. 
.br
\fItrackName\fP The name of this \fBTrack\fP\&. 
.br
\fIstartLocationName\fP The name of the start location\&. 
.br
\fIdestinationLocationName\fP The name of the destiny location\&. 
.br
\fIexitPointName\fP The name of the exit point\&. 
.br
\fIentryPointName\fP The name of the entry point\&. 
.br
\fIstartPosition\fP The start position of the \fBTrack\fP\&. It must be a \fBExtendedLength\fP[] with a length of 3\&. 
.br
\fIdestination\fP The end position of the \fBTrack\fP\&. It must be a \fBExtendedLength\fP[] with a length of 3\&. 
.br
\fIwayPoints\fP The way points (double[] with length of 3) which describes the path between the start and the destination\&. 
.br
\fIshowInTrace\fP Flag for showing entity in trace-files\&. Set it to true if entity should show up in trace\&. Set to false in entity should not be shown in trace\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "Vector3d desmoj\&.extensions\&.space3D\&.SimpleTrack\&.getDirectionAt (doublelength)\fC [virtual]\fP"
Gets the current moving direction based on the specified length from the start position on the track\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlength\fP The length from the start position to the current position\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The normalized vector which points to the current moving direction\&. 
.RE
.PP

.PP
Implements \fBdesmoj\&.extensions\&.space3D\&.Track\fP\&.
.SS "double desmoj\&.extensions\&.space3D\&.SimpleTrack\&.getLength ()\fC [virtual]\fP"
Gives the total length of the \fBTrack\fP\&. 
.PP
\fBReturns:\fP
.RS 4
The length of the \fBTrack\fP in a double value\&. 
.RE
.PP

.PP
Implements \fBdesmoj\&.extensions\&.space3D\&.Track\fP\&.
.SS "\fBExtendedLength\fP [] desmoj\&.extensions\&.space3D\&.SimpleTrack\&.getPositionAt (doublelength)\fC [virtual]\fP"
Gets the coordinates (in \fBExtendedLength\fP) of the current position based on the specified length from the start position on the track\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlength\fP The length from the start position to the position which we want to know\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
A \fBExtendedLength\fP[3] array which represents the x-, y- and the z-coordinates\&. 
.RE
.PP

.PP
Implements \fBdesmoj\&.extensions\&.space3D\&.Track\fP\&.
.SS "double [] desmoj\&.extensions\&.space3D\&.SimpleTrack\&.getPositionAtValue (doublelength)\fC [virtual]\fP"
Gets the coordinates (in double) of the current position based on the specified length from the start position on the track\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlength\fP The length from the start position to the position which we want to know\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
A double[3] array with the X, Y, and Z-coordinates\&. The value represents meters\&. 
.RE
.PP

.PP
Implements \fBdesmoj\&.extensions\&.space3D\&.Track\fP\&.
.SS "ArrayList<double[]> desmoj\&.extensions\&.space3D\&.SimpleTrack\&.getWayPoints ()"
Gets the way points of this track\&. 
.PP
\fBReturns:\fP
.RS 4
The way points in double[] of length 3\&. The first element represents the x-, the second element the y- and the third element the z-coordinate\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Desmo-J from the source code\&.
