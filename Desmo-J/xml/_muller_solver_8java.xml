<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_muller_solver_8java" kind="file">
    <compoundname>MullerSolver.java</compoundname>
    <innerclass refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_muller_solver" prot="public">org::apache::commons::math::analysis::MullerSolver</innerclass>
    <innernamespace refid="namespaceorg_1_1apache_1_1commons_1_1math_1_1analysis">org::apache::commons::math::analysis</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one<sp/>or<sp/>more</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file<sp/>distributed<sp/>with</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information<sp/>regarding<sp/>copyright<sp/>ownership.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file<sp/>to<sp/>You<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>(the<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">org.apache.commons.math.analysis;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">org.apache.commons.math.FunctionEvaluationException</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_max_iterations_exceeded_exception" kindref="compound">org.apache.commons.math.MaxIterationsExceededException</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils" kindref="compound">org.apache.commons.math.util.MathUtils</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_muller_solver" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_muller_solver" kindref="compound">MullerSolver</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl" kindref="compound">UnivariateRealSolverImpl</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>serialVersionUID<sp/>=<sp/>6552227503458976920L;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_muller_solver_1ad6e8335aaba13fe940a74ae4b63bad63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_muller_solver_1ad6e8335aaba13fe940a74ae4b63bad63" kindref="member">MullerSolver</ref>(<ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function" kindref="compound">UnivariateRealFunction</ref><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a30c75ff5f9f4b4ed740213a68b1fc389" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(f,<sp/>100,<sp/>1E-6);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_muller_solver_1ab21cf9da5f20fbe95d45666633cb4b13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_muller_solver_1ab21cf9da5f20fbe95d45666633cb4b13" kindref="member">solve</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initial)<sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_max_iterations_exceeded_exception" kindref="compound">MaxIterationsExceededException</ref>,<sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>zeros<sp/>before<sp/>verifying<sp/>bracketing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a30c75ff5f9f4b4ed740213a68b1fc389" kindref="member">f</ref>.<ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function_1a0e7a98f515a5fecfb77a21244e70b919" kindref="member">value</ref>(min)<sp/>==<sp/>0.0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min;<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a30c75ff5f9f4b4ed740213a68b1fc389" kindref="member">f</ref>.<ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function_1a0e7a98f515a5fecfb77a21244e70b919" kindref="member">value</ref>(max)<sp/>==<sp/>0.0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max;<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a30c75ff5f9f4b4ed740213a68b1fc389" kindref="member">f</ref>.<ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function_1a0e7a98f515a5fecfb77a21244e70b919" kindref="member">value</ref>(initial)<sp/>==<sp/>0.0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>initial;<sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a44f1a77211c700a26f11b8ace667d319" kindref="member">verifyBracketing</ref>(min,<sp/>max,<sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a30c75ff5f9f4b4ed740213a68b1fc389" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1aa59cb6094878d427b5375bb4938e0d47" kindref="member">verifySequence</ref>(min,<sp/>initial,<sp/>max);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1ae287908a72bb992450cdd9b21c0364b1" kindref="member">isBracketing</ref>(min,<sp/>initial,<sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a30c75ff5f9f4b4ed740213a68b1fc389" kindref="member">f</ref>))<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_muller_solver_1ab21cf9da5f20fbe95d45666633cb4b13" kindref="member">solve</ref>(min,<sp/>initial);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_muller_solver_1ab21cf9da5f20fbe95d45666633cb4b13" kindref="member">solve</ref>(initial,<sp/>max);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_muller_solver_1ad9f2e646cd7c35d05faa143cf26ec192" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_muller_solver_1ad9f2e646cd7c35d05faa143cf26ec192" kindref="member">solve</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max)<sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_max_iterations_exceeded_exception" kindref="compound">MaxIterationsExceededException</ref>,<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[x0,<sp/>x2]<sp/>is<sp/>the<sp/>bracketing<sp/>interval<sp/>in<sp/>each<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x1<sp/>is<sp/>the<sp/>last<sp/>approximation<sp/>and<sp/>an<sp/>interpolation<sp/>point<sp/>in<sp/>(x0,<sp/>x2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>is<sp/>the<sp/>new<sp/>root<sp/>approximation<sp/>and<sp/>new<sp/>x1<sp/>for<sp/>next<sp/>round</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>d01,<sp/>d12,<sp/>d012<sp/>are<sp/>divided<sp/>differences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x0,<sp/>x1,<sp/>x2,<sp/>x,<sp/>oldx,<sp/>y0,<sp/>y1,<sp/>y2,<sp/>y;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d01,<sp/>d12,<sp/>d012,<sp/>c1,<sp/>delta,<sp/>xplus,<sp/>xminus,<sp/>tolerance;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>min;<sp/>y0<sp/>=<sp/>f.value(x0);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>max;<sp/>y2<sp/>=<sp/>f.value(x2);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>0.5<sp/>*<sp/>(x0<sp/>+<sp/>x2);<sp/>y1<sp/>=<sp/>f.value(x1);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>zeros<sp/>before<sp/>verifying<sp/>bracketing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0<sp/>==<sp/>0.0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min;<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y2<sp/>==<sp/>0.0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max;<sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a44f1a77211c700a26f11b8ace667d319" kindref="member">verifyBracketing</ref>(min,<sp/>max,<sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a30c75ff5f9f4b4ed740213a68b1fc389" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldx<sp/>=<sp/>Double.POSITIVE_INFINITY;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;=<sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a717aa802239ffbdb03bd0ef6e203e32f" kindref="member">maximalIterationCount</ref>)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Muller&apos;s<sp/>method<sp/>employs<sp/>quadratic<sp/>interpolation<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x0,<sp/>x1,<sp/>x2<sp/>and<sp/>x<sp/>is<sp/>the<sp/>zero<sp/>of<sp/>the<sp/>interpolating<sp/>parabola.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Due<sp/>to<sp/>bracketing<sp/>condition,<sp/>this<sp/>parabola<sp/>must<sp/>have<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>real<sp/>roots<sp/>and<sp/>we<sp/>choose<sp/>one<sp/>in<sp/>[x0,<sp/>x2]<sp/>to<sp/>be<sp/>x.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d01<sp/>=<sp/>(y1<sp/>-<sp/>y0)<sp/>/<sp/>(x1<sp/>-<sp/>x0);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d12<sp/>=<sp/>(y2<sp/>-<sp/>y1)<sp/>/<sp/>(x2<sp/>-<sp/>x1);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d012<sp/>=<sp/>(d12<sp/>-<sp/>d01)<sp/>/<sp/>(x2<sp/>-<sp/>x0);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c1<sp/>=<sp/>d01<sp/>+<sp/>(x1<sp/>-<sp/>x0)<sp/>*<sp/>d012;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>c1<sp/>*<sp/>c1<sp/>-<sp/>4<sp/>*<sp/>y1<sp/>*<sp/>d012;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xplus<sp/>=<sp/>x1<sp/>+<sp/>(-2.0<sp/>*<sp/>y1)<sp/>/<sp/>(c1<sp/>+<sp/>Math.sqrt(delta));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xminus<sp/>=<sp/>x1<sp/>+<sp/>(-2.0<sp/>*<sp/>y1)<sp/>/<sp/>(c1<sp/>-<sp/>Math.sqrt(delta));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xplus<sp/>and<sp/>xminus<sp/>are<sp/>two<sp/>roots<sp/>of<sp/>parabola<sp/>and<sp/>at<sp/>least</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>of<sp/>them<sp/>should<sp/>lie<sp/>in<sp/>(x0,<sp/>x2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1adc96329982734b3ee86edbb22f181642" kindref="member">isSequence</ref>(x0,<sp/>xplus,<sp/>x2)<sp/>?<sp/>xplus<sp/>:<sp/>xminus;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>f.value(x);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>convergence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tolerance<sp/>=<sp/>Math.max(<ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a2785e7b972feb5321f802fec4ba80cff" kindref="member">relativeAccuracy</ref><sp/>*<sp/>Math.abs(x),<sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1aa22db2016a96b1e018da93a9a60303ca" kindref="member">absoluteAccuracy</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Math.abs(x<sp/>-<sp/>oldx)<sp/>&lt;=<sp/>tolerance)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a5360844fee369d6ab2740b2ff5f7bf5d" kindref="member">setResult</ref>(x,<sp/>i);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1aad730f2a8e813c4b034b7c99d86b0a4b" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Math.abs(y)<sp/>&lt;=<sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a83d7a384f85cef6529e1d129bafa6905" kindref="member">functionValueAccuracy</ref>)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a5360844fee369d6ab2740b2ff5f7bf5d" kindref="member">setResult</ref>(x,<sp/>i);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1aad730f2a8e813c4b034b7c99d86b0a4b" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bisect<sp/>if<sp/>convergence<sp/>is<sp/>too<sp/>slow.<sp/>Bisection<sp/>would<sp/>waste</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>our<sp/>calculation<sp/>of<sp/>x,<sp/>hopefully<sp/>it<sp/>won&apos;t<sp/>happen<sp/>often.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>real<sp/>number<sp/>equality<sp/>test<sp/>x<sp/>==<sp/>x1<sp/>is<sp/>intentional<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>completes<sp/>the<sp/>proximity<sp/>tests<sp/>above<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>bisect<sp/>=<sp/>(x<sp/>&lt;<sp/>x1<sp/>&amp;&amp;<sp/>(x1<sp/>-<sp/>x0)<sp/>&gt;<sp/>0.95<sp/>*<sp/>(x2<sp/>-<sp/>x0))<sp/>||</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x<sp/>&gt;<sp/>x1<sp/>&amp;&amp;<sp/>(x2<sp/>-<sp/>x1)<sp/>&gt;<sp/>0.95<sp/>*<sp/>(x2<sp/>-<sp/>x0))<sp/>||</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x<sp/>==<sp/>x1);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prepare<sp/>the<sp/>new<sp/>bracketing<sp/>interval<sp/>for<sp/>next<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bisect)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>x<sp/>&lt;<sp/>x1<sp/>?<sp/>x0<sp/>:<sp/>x1;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y0<sp/>=<sp/>x<sp/>&lt;<sp/>x1<sp/>?<sp/>y0<sp/>:<sp/>y1;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>x<sp/>&gt;<sp/>x1<sp/>?<sp/>x2<sp/>:<sp/>x1;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y2<sp/>=<sp/>x<sp/>&gt;<sp/>x1<sp/>?<sp/>y2<sp/>:<sp/>y1;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>x;<sp/>y1<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldx<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xm<sp/>=<sp/>0.5<sp/>*<sp/>(x0<sp/>+<sp/>x2);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ym<sp/>=<sp/>f.value(xm);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils" kindref="compound">MathUtils</ref>.<ref refid="classorg_1_1apache_1_1commons_1_1math_1_1util_1_1_math_utils_1aacf4ca1d2aec97cdf9295fc0375fad2b" kindref="member">sign</ref>(y0)<sp/>+<sp/>MathUtils.sign(ym)<sp/>==<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>xm;<sp/>y2<sp/>=<sp/>ym;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>xm;<sp/>y0<sp/>=<sp/>ym;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>0.5<sp/>*<sp/>(x0<sp/>+<sp/>x2);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y1<sp/>=<sp/>f.value(x1);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldx<sp/>=<sp/>Double.POSITIVE_INFINITY;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_max_iterations_exceeded_exception" kindref="compound">MaxIterationsExceededException</ref>(<ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a717aa802239ffbdb03bd0ef6e203e32f" kindref="member">maximalIterationCount</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_muller_solver_1a930871c7344d44e4abf11108461d1f80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_muller_solver_1a930871c7344d44e4abf11108461d1f80" kindref="member">solve2</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max)<sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_max_iterations_exceeded_exception" kindref="compound">MaxIterationsExceededException</ref>,<sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x2<sp/>is<sp/>the<sp/>last<sp/>root<sp/>approximation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>is<sp/>the<sp/>new<sp/>approximation<sp/>and<sp/>new<sp/>x2<sp/>for<sp/>next<sp/>round</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x0<sp/>&lt;<sp/>x1<sp/>&lt;<sp/>x2<sp/>does<sp/>not<sp/>hold<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x0,<sp/>x1,<sp/>x2,<sp/>x,<sp/>oldx,<sp/>y0,<sp/>y1,<sp/>y2,<sp/>y;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q,<sp/>A,<sp/>B,<sp/>C,<sp/>delta,<sp/>denominator,<sp/>tolerance;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>min;<sp/>y0<sp/>=<sp/>f.value(x0);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>max;<sp/>y1<sp/>=<sp/>f.value(x1);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>0.5<sp/>*<sp/>(x0<sp/>+<sp/>x1);<sp/>y2<sp/>=<sp/>f.value(x2);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>zeros<sp/>before<sp/>verifying<sp/>bracketing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0<sp/>==<sp/>0.0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min;<sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y1<sp/>==<sp/>0.0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max;<sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a44f1a77211c700a26f11b8ace667d319" kindref="member">verifyBracketing</ref>(min,<sp/>max,<sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a30c75ff5f9f4b4ed740213a68b1fc389" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldx<sp/>=<sp/>Double.POSITIVE_INFINITY;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;=<sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a717aa802239ffbdb03bd0ef6e203e32f" kindref="member">maximalIterationCount</ref>)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>quadratic<sp/>interpolation<sp/>through<sp/>x0,<sp/>x1,<sp/>x2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>(x2<sp/>-<sp/>x1)<sp/>/<sp/>(x1<sp/>-<sp/>x0);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>=<sp/>q<sp/>*<sp/>(y2<sp/>-<sp/>(1<sp/>+<sp/>q)<sp/>*<sp/>y1<sp/>+<sp/>q<sp/>*<sp/>y0);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B<sp/>=<sp/>(2*q<sp/>+<sp/>1)<sp/>*<sp/>y2<sp/>-<sp/>(1<sp/>+<sp/>q)<sp/>*<sp/>(1<sp/>+<sp/>q)<sp/>*<sp/>y1<sp/>+<sp/>q<sp/>*<sp/>q<sp/>*<sp/>y0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>=<sp/>(1<sp/>+<sp/>q)<sp/>*<sp/>y2;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>B<sp/>*<sp/>B<sp/>-<sp/>4<sp/>*<sp/>A<sp/>*<sp/>C;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delta<sp/>&gt;=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>choose<sp/>a<sp/>denominator<sp/>larger<sp/>in<sp/>magnitude</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dplus<sp/>=<sp/>B<sp/>+<sp/>Math.sqrt(delta);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dminus<sp/>=<sp/>B<sp/>-<sp/>Math.sqrt(delta);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denominator<sp/>=<sp/>Math.abs(dplus)<sp/>&gt;<sp/>Math.abs(dminus)<sp/>?<sp/>dplus<sp/>:<sp/>dminus;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>take<sp/>the<sp/>modulus<sp/>of<sp/>(B<sp/>+/-<sp/>Math.sqrt(delta))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denominator<sp/>=<sp/>Math.sqrt(B<sp/>*<sp/>B<sp/>-<sp/>delta);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denominator<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>x2<sp/>-<sp/>2.0<sp/>*<sp/>C<sp/>*<sp/>(x2<sp/>-<sp/>x1)<sp/>/<sp/>denominator;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>perturb<sp/>x<sp/>if<sp/>it<sp/>exactly<sp/>coincides<sp/>with<sp/>x1<sp/>or<sp/>x2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>equality<sp/>tests<sp/>here<sp/>are<sp/>intentional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>x1<sp/>||<sp/>x<sp/>==<sp/>x2)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1aa22db2016a96b1e018da93a9a60303ca" kindref="member">absoluteAccuracy</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extremely<sp/>rare<sp/>case,<sp/>get<sp/>a<sp/>random<sp/>number<sp/>to<sp/>skip<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>min<sp/>+<sp/>Math.random()<sp/>*<sp/>(max<sp/>-<sp/>min);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldx<sp/>=<sp/>Double.POSITIVE_INFINITY;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>f.value(x);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>convergence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tolerance<sp/>=<sp/>Math.max(<ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a2785e7b972feb5321f802fec4ba80cff" kindref="member">relativeAccuracy</ref><sp/>*<sp/>Math.abs(x),<sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1aa22db2016a96b1e018da93a9a60303ca" kindref="member">absoluteAccuracy</ref>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Math.abs(x<sp/>-<sp/>oldx)<sp/>&lt;=<sp/>tolerance)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a5360844fee369d6ab2740b2ff5f7bf5d" kindref="member">setResult</ref>(x,<sp/>i);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1aad730f2a8e813c4b034b7c99d86b0a4b" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Math.abs(y)<sp/>&lt;=<sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a83d7a384f85cef6529e1d129bafa6905" kindref="member">functionValueAccuracy</ref>)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a5360844fee369d6ab2740b2ff5f7bf5d" kindref="member">setResult</ref>(x,<sp/>i);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1aad730f2a8e813c4b034b7c99d86b0a4b" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prepare<sp/>the<sp/>next<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0<sp/>=<sp/>x1;<sp/>y0<sp/>=<sp/>y1;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>x2;<sp/>y1<sp/>=<sp/>y2;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>x;<sp/>y2<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldx<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_max_iterations_exceeded_exception" kindref="compound">MaxIterationsExceededException</ref>(<ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_impl_1a717aa802239ffbdb03bd0ef6e203e32f" kindref="member">maximalIterationCount</ref>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/MullerSolver.java"/>
  </compounddef>
</doxygen>
