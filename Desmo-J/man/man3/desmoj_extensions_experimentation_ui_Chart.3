.TH "desmoj.extensions.experimentation.ui.Chart" 3 "Wed Dec 4 2013" "Version 1.0" "Desmo-J" \" -*- nroff -*-
.ad l
.nh
.SH NAME
desmoj.extensions.experimentation.ui.Chart \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits JComponent, and ActionListener\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBChart\fP (\fBChartOwner\fP chartOwner, String x_label, String y_label)"
.br
.ti -1c
.RI "void \fBpaint\fP (Graphics g)"
.br
.ti -1c
.RI "void \fBpaintBackground\fP (Graphics g)"
.br
.ti -1c
.RI "int \fBcalculateXPosition\fP (double x)"
.br
.ti -1c
.RI "int \fBcalculateYPosition\fP (double y)"
.br
.ti -1c
.RI "void \fBdrawLine\fP (Graphics g, double x1, double y1, double x2, double y2)"
.br
.ti -1c
.RI "void \fBdrawRect\fP (Graphics g, double x1, double y1, double x2, double y2)"
.br
.ti -1c
.RI "void \fBfillRect\fP (Graphics g, double x1, double y1, double x2, double y2)"
.br
.ti -1c
.RI "void \fBdrawLine\fP (Color color, double x1, double y1, double x2, double y2)"
.br
.ti -1c
.RI "boolean \fBtestValue\fP (double x, double y)"
.br
.ti -1c
.RI "void \fBsetMax_y\fP (double max_y)"
.br
.ti -1c
.RI "void \fBsetMax_x\fP (double max_x)"
.br
.ti -1c
.RI "void \fBsetMin_x\fP (double min_x)"
.br
.ti -1c
.RI "void \fBsetMin_y\fP (double min_y)"
.br
.ti -1c
.RI "void \fBsetX_label\fP (String x_label)"
.br
.ti -1c
.RI "void \fBsetY_label\fP (String y_label)"
.br
.ti -1c
.RI "void \fBprocessMouseEvent\fP (MouseEvent e)"
.br
.ti -1c
.RI "void \fBactionPerformed\fP (ActionEvent e)"
.br
.in -1c
.SH "Detailed Description"
.PP 
A GUI component (inherited from java\&.awt\&.Canvas) which displays a chart\&. It includes two labeled and auto-scaled axes\&. There a methods (drawLine, drawRect, fillRect) to paint on the chart without taking care about transforming or scaling the dimensions\&. You have to add this class to a panel or a frame\&. You also have to implement the method which should draw the data (e\&.g\&. a histogram or a mathematical function) in a class which is inherited from the interface \fBChartOwner\fP\&.
.PP
\fBVersion:\fP
.RS 4
DESMO-J, Ver\&. 2\&.4\&.0 copyright (c) 2013 
.RE
.PP
\fBAuthor:\fP
.RS 4
Philip Joschko
.RE
.PP
Licensed under the Apache License, Version 2\&.0 (the 'License'); you may not use this file except in compliance with the License\&. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
.PP
Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied\&. See the License for the specific language governing permissions and limitations under the License\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "desmoj\&.extensions\&.experimentation\&.ui\&.Chart\&.Chart (\fBChartOwner\fPchartOwner, Stringx_label, Stringy_label)"
Constructor of the chart\&. Saves the given labels for x- and y-axis and calls the constructor of java\&.awt\&.Canvas 
.PP
\fBParameters:\fP
.RS 4
\fIchartOwner\fP The object which implements the drawChart() method\&. 
.br
\fIx_label\fP The legend for the x axis\&. 
.br
\fIy_label\fP The legend for the y axis\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void desmoj\&.extensions\&.experimentation\&.ui\&.Chart\&.actionPerformed (ActionEvente)"
Event handler for this class\&. Does nothing\&. 
.SS "int desmoj\&.extensions\&.experimentation\&.ui\&.Chart\&.calculateXPosition (doublex)"
Calculates the x coordinate in pixels for the given x data value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIx\fP The x data value\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The x position in pixels, where the data value should be painted\&. 
.RE
.PP

.SS "int desmoj\&.extensions\&.experimentation\&.ui\&.Chart\&.calculateYPosition (doubley)"
Calculates the y coordinate in pixels for the given y data value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIy\fP The y data value\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The y position in pixels, where the data value should be painted\&. 
.RE
.PP

.SS "void desmoj\&.extensions\&.experimentation\&.ui\&.Chart\&.drawLine (Graphicsg, doublex1, doubley1, doublex2, doubley2)"
Draws a line into the chart\&. This method automatically calls the methods \fBcalculateXPosition()\fP and \fBcalculateYPosition()\fP so you don`t have to take care about any scaling or transforming\&. 
.PP
\fBParameters:\fP
.RS 4
\fIg\fP The specified Graphics context\&. 
.br
\fIx1\fP The x value of the starting coordinates\&. 
.br
\fIy1\fP The y value of the starting coordinates\&. 
.br
\fIx2\fP The x value of the ending coordinates\&. 
.br
\fIy2\fP The x value of the ending coordinates\&. 
.RE
.PP

.SS "void desmoj\&.extensions\&.experimentation\&.ui\&.Chart\&.drawLine (Colorcolor, doublex1, doubley1, doublex2, doubley2)"
Draws a line into the chart\&. This method automatically calls the methods \fBcalculateXPosition()\fP and \fBcalculateYPosition()\fP so you don`t have to take care about any scaling or transforming\&.
.PP
If you have a graphic context (e\&.g\&. method shall be invoked via a \fBpaint(Graphics g)\fP method you should NOT use this method, but rather \fBdrawLine(Graphics, double, double, double, double)\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIcolor\fP The color of the line\&. 
.br
\fIx1\fP The x value of the starting coordinates\&. 
.br
\fIy1\fP The y value of the starting coordinates\&. 
.br
\fIx2\fP The x value of the ending coordinates\&. 
.br
\fIy2\fP The x value of the ending coordinates\&. 
.RE
.PP

.SS "void desmoj\&.extensions\&.experimentation\&.ui\&.Chart\&.drawRect (Graphicsg, doublex1, doubley1, doublex2, doubley2)"
Draws an unfilled rectangle into the chart\&. This method automatically calls the methods \fBcalculateXPosition()\fP and \fBcalculateYPosition()\fP so you don`t have to take care about any scaling or transforming\&. 
.PP
\fBParameters:\fP
.RS 4
\fIg\fP The specified Graphics context\&. 
.br
\fIx1\fP The x value of the starting coordinates\&. 
.br
\fIy1\fP The y value of the starting coordinates\&. 
.br
\fIx2\fP The x value of the ending coordinates\&. 
.br
\fIy2\fP The x value of the ending coordinates\&. 
.RE
.PP

.SS "void desmoj\&.extensions\&.experimentation\&.ui\&.Chart\&.fillRect (Graphicsg, doublex1, doubley1, doublex2, doubley2)"
Draws a filled rectangle into the chart\&. This method automatically calls the methods \fBcalculateXPosition()\fP and \fBcalculateYPosition()\fP so you don`t have to take care about any scaling or transforming\&. 
.PP
\fBParameters:\fP
.RS 4
\fIg\fP The specified Graphics context\&. 
.br
\fIx1\fP The x value of the starting coordinates\&. 
.br
\fIy1\fP The y value of the starting coordinates\&. 
.br
\fIx2\fP The x value of the ending coordinates\&. 
.br
\fIy2\fP The x value of the ending coordinates\&. 
.RE
.PP

.SS "void desmoj\&.extensions\&.experimentation\&.ui\&.Chart\&.paint (Graphicsg)"
This method is called automatically if the canvas has to be repaint\&. You don`t have to do this! It overrides the \fBpaint(Graphics)\fP method from java\&.awt\&.Canvas\&. If size of the chart is big enough, it calls \fBpaintBackground()\fP (for painting the chart background)\&. 
.PP
\fBParameters:\fP
.RS 4
\fIg\fP The specified Graphics context\&. 
.RE
.PP

.SS "void desmoj\&.extensions\&.experimentation\&.ui\&.Chart\&.paintBackground (Graphicsg)"
Draws the chart basics\&. Calculates the best fitting intervalls for the axes\&. Paints a white backgorund, the axes, the labels and a grey grid for easier metering\&.
.PP
At last it tansforms (not scales!) the coordinate system\&. Thus the methods drawLine, drawRect and fillRect must not take care about transforming: The root of the coordinate system will be (0,0), and the value y will be autoscaled to -y, so a higher data value will be painted above a lower y value, unlike the coordinate system of a canvas\&. ATTENTION: The value '1' still represents a pixel, because if we would scale '1' to interval_x (or rather interval_y) a new line would be very fat (that is not want we want)\&. The 'scaling' will be done by the methods \fBcalculateXPosition()\fP and \fBcalculateYPosition()\fP of this class, which will be automatically invoked if you use \fBdrawLine()\fP, \fBdrawRect()\fP or \fBfillRect()\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIg\fP The specified Graphics context\&. 
.RE
.PP

.SS "void desmoj\&.extensions\&.experimentation\&.ui\&.Chart\&.processMouseEvent (MouseEvente)"
Event handler for right-mouse-clicks onto the chart\&. The context menu will be shown\&. 
.SS "void desmoj\&.extensions\&.experimentation\&.ui\&.Chart\&.setMax_x (doublemax_x)"
Sets the maximum x value which appears in the data\&. 
.PP
\fBParameters:\fP
.RS 4
\fImax_x\fP The maximum x value which appears in the data\&. 
.RE
.PP

.SS "void desmoj\&.extensions\&.experimentation\&.ui\&.Chart\&.setMax_y (doublemax_y)"
Sets the maximum y value which appears in the data\&. 
.PP
\fBParameters:\fP
.RS 4
\fImax_y\fP The maximum y value which appears in the data\&. 
.RE
.PP

.SS "void desmoj\&.extensions\&.experimentation\&.ui\&.Chart\&.setMin_x (doublemin_x)"
Sets the minimum x value which appears in the data\&. 
.PP
\fBParameters:\fP
.RS 4
\fImin_x\fP The minimum x value which appears in the data\&. 
.RE
.PP

.SS "void desmoj\&.extensions\&.experimentation\&.ui\&.Chart\&.setMin_y (doublemin_y)"
Sets the minimum y value which appears in the data\&. 
.PP
\fBParameters:\fP
.RS 4
\fImin_y\fP The minimum y value which appears in the data\&. 
.RE
.PP

.SS "void desmoj\&.extensions\&.experimentation\&.ui\&.Chart\&.setX_label (Stringx_label)"
Resets the legend (labeling) for the x axis\&. 
.PP
\fBParameters:\fP
.RS 4
\fIx_label\fP A new title for the x axis\&. 
.RE
.PP

.SS "void desmoj\&.extensions\&.experimentation\&.ui\&.Chart\&.setY_label (Stringy_label)"
Resets the legend (labeling) for the y axis\&. 
.PP
\fBParameters:\fP
.RS 4
\fIy_label\fP A new title for the y axis\&. 
.RE
.PP

.SS "boolean desmoj\&.extensions\&.experimentation\&.ui\&.Chart\&.testValue (doublex, doubley)"
Tests a new pair of values which appears in the data\&. The pair will NOT be stored, it only will be tested if the values are lower or higher than the existing minimums and maximums\&. This is needed for scaling the chart automatically\&. 
.PP
\fBParameters:\fP
.RS 4
\fIx\fP A new x value which shall be tested, if it is the new minmum or maximum\&. 
.br
\fIy\fP A new y value which shall be tested, if it is the new minmum or maximum\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Returns true if the values are higher or smaller than the current axis borders\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Desmo-J from the source code\&.
