<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map_generic" kind="class" prot="public">
    <compoundname>org::apache::commons::collections::map::ReferenceMapGeneric</compoundname>
    <basecompoundref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map" prot="public" virt="non-virtual">org.apache.commons.collections.map.AbstractReferenceMap</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Serializable</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map_generic_1a002f33acbc2c715507b0f8d59672d868" prot="private" static="yes" mutable="no">
        <type>final long</type>
        <definition>final long org.apache.commons.collections.map.ReferenceMapGeneric.serialVersionUID</definition>
        <argsstring></argsstring>
        <name>serialVersionUID</name>
        <initializer>= 1555089888138299607L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serialization version </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/ReferenceMapGeneric.java" line="79" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/ReferenceMapGeneric.java" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map_generic_1a46a2141b5a2eb59617ef673a7ca5c106" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.collections.map.ReferenceMapGeneric.ReferenceMapGeneric</definition>
        <argsstring>()</argsstring>
        <name>ReferenceMapGeneric</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <computeroutput><ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map" kindref="compound">ReferenceMap</ref></computeroutput> that will use hard references to keys and soft references to values. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/ReferenceMapGeneric.java" line="85" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/ReferenceMapGeneric.java" bodystart="85" bodyend="87"/>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af731b002fab45855199994aa132d0c7e" compoundref="_abstract_reference_map_8java" startline="88">org.apache.commons.collections.map.AbstractReferenceMap.HARD</references>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a5d616e45811742a81988965e86f403db" compoundref="_abstract_reference_map_8java" startline="91">org.apache.commons.collections.map.AbstractReferenceMap.SOFT</references>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1ab75b9040c76cea48c33ab7d3c71fd7dd" compoundref="_abstract_hashed_map_8java" startline="72">org.apache.commons.collections.map.AbstractHashedMap.DEFAULT_CAPACITY</references>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1aeaa44bca56ee02ccd1fffbd07364ab2a" compoundref="_abstract_hashed_map_8java" startline="76">org.apache.commons.collections.map.AbstractHashedMap.DEFAULT_LOAD_FACTOR</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map_generic_1a725b4a931cb94cd50bebec910516306c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.collections.map.ReferenceMapGeneric.ReferenceMapGeneric</definition>
        <argsstring>(int keyType, int valueType)</argsstring>
        <name>ReferenceMapGeneric</name>
        <param>
          <type>int</type>
          <declname>keyType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>valueType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <computeroutput><ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map" kindref="compound">ReferenceMap</ref></computeroutput> that will use the specified types of references.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keyType</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of reference to use for keys; must be <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af731b002fab45855199994aa132d0c7e" kindref="member">HARD</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a5d616e45811742a81988965e86f403db" kindref="member">SOFT</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af6dd0361c4cd113da7b56e8515165487" kindref="member">WEAK</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valueType</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of reference to use for values; must be <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af731b002fab45855199994aa132d0c7e" kindref="member">HARD</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a5d616e45811742a81988965e86f403db" kindref="member">SOFT</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af6dd0361c4cd113da7b56e8515165487" kindref="member">WEAK</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/ReferenceMapGeneric.java" line="98" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/ReferenceMapGeneric.java" bodystart="98" bodyend="100"/>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1ab75b9040c76cea48c33ab7d3c71fd7dd" compoundref="_abstract_hashed_map_8java" startline="72">org.apache.commons.collections.map.AbstractHashedMap.DEFAULT_CAPACITY</references>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1aeaa44bca56ee02ccd1fffbd07364ab2a" compoundref="_abstract_hashed_map_8java" startline="76">org.apache.commons.collections.map.AbstractHashedMap.DEFAULT_LOAD_FACTOR</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map_generic_1a4c117eb86a184e26e5000a7441a87032" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.collections.map.ReferenceMapGeneric.ReferenceMapGeneric</definition>
        <argsstring>(int keyType, int valueType, boolean purgeValues)</argsstring>
        <name>ReferenceMapGeneric</name>
        <param>
          <type>int</type>
          <declname>keyType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>valueType</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>purgeValues</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <computeroutput><ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map" kindref="compound">ReferenceMap</ref></computeroutput> that will use the specified types of references.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keyType</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of reference to use for keys; must be <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af731b002fab45855199994aa132d0c7e" kindref="member">HARD</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a5d616e45811742a81988965e86f403db" kindref="member">SOFT</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af6dd0361c4cd113da7b56e8515165487" kindref="member">WEAK</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valueType</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of reference to use for values; must be <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af731b002fab45855199994aa132d0c7e" kindref="member">HARD</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a5d616e45811742a81988965e86f403db" kindref="member">SOFT</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af6dd0361c4cd113da7b56e8515165487" kindref="member">WEAK</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>purgeValues</parametername>
</parameternamelist>
<parameterdescription>
<para>should the value be automatically purged when the key is garbage collected </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/ReferenceMapGeneric.java" line="113" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/ReferenceMapGeneric.java" bodystart="113" bodyend="115"/>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1ab75b9040c76cea48c33ab7d3c71fd7dd" compoundref="_abstract_hashed_map_8java" startline="72">org.apache.commons.collections.map.AbstractHashedMap.DEFAULT_CAPACITY</references>
        <references refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1aeaa44bca56ee02ccd1fffbd07364ab2a" compoundref="_abstract_hashed_map_8java" startline="76">org.apache.commons.collections.map.AbstractHashedMap.DEFAULT_LOAD_FACTOR</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map_generic_1a54f3d55185f7855783b3c05d12511816" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.collections.map.ReferenceMapGeneric.ReferenceMapGeneric</definition>
        <argsstring>(int keyType, int valueType, int capacity, float loadFactor)</argsstring>
        <name>ReferenceMapGeneric</name>
        <param>
          <type>int</type>
          <declname>keyType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>valueType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>float</type>
          <declname>loadFactor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <computeroutput><ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map" kindref="compound">ReferenceMap</ref></computeroutput> with the specified reference types, load factor and initial capacity.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keyType</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of reference to use for keys; must be <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af731b002fab45855199994aa132d0c7e" kindref="member">HARD</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a5d616e45811742a81988965e86f403db" kindref="member">SOFT</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af6dd0361c4cd113da7b56e8515165487" kindref="member">WEAK</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valueType</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of reference to use for values; must be <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af731b002fab45855199994aa132d0c7e" kindref="member">HARD</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a5d616e45811742a81988965e86f403db" kindref="member">SOFT</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af6dd0361c4cd113da7b56e8515165487" kindref="member">WEAK</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>the initial capacity for the map </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loadFactor</parametername>
</parameternamelist>
<parameterdescription>
<para>the load factor for the map </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/ReferenceMapGeneric.java" line="129" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/ReferenceMapGeneric.java" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map_generic_1a470bc506e21923c9516a3901a967d56e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.collections.map.ReferenceMapGeneric.ReferenceMapGeneric</definition>
        <argsstring>(int keyType, int valueType, int capacity, float loadFactor, boolean purgeValues)</argsstring>
        <name>ReferenceMapGeneric</name>
        <param>
          <type>int</type>
          <declname>keyType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>valueType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>float</type>
          <declname>loadFactor</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>purgeValues</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <computeroutput><ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map" kindref="compound">ReferenceMap</ref></computeroutput> with the specified reference types, load factor and initial capacity.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keyType</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of reference to use for keys; must be <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af731b002fab45855199994aa132d0c7e" kindref="member">HARD</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a5d616e45811742a81988965e86f403db" kindref="member">SOFT</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af6dd0361c4cd113da7b56e8515165487" kindref="member">WEAK</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valueType</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of reference to use for values; must be <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af731b002fab45855199994aa132d0c7e" kindref="member">HARD</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a5d616e45811742a81988965e86f403db" kindref="member">SOFT</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af6dd0361c4cd113da7b56e8515165487" kindref="member">WEAK</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>the initial capacity for the map </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loadFactor</parametername>
</parameternamelist>
<parameterdescription>
<para>the load factor for the map </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>purgeValues</parametername>
</parameternamelist>
<parameterdescription>
<para>should the value be automatically purged when the key is garbage collected </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/ReferenceMapGeneric.java" line="147" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/ReferenceMapGeneric.java" bodystart="147" bodyend="150"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map_generic_1ae8a59ecf156c06302369c24b8c992f36" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.collections.map.ReferenceMapGeneric.writeObject</definition>
        <argsstring>(ObjectOutputStream out)</argsstring>
        <name>writeObject</name>
        <param>
          <type>ObjectOutputStream</type>
          <declname>out</declname>
        </param>
        <exceptions> throws IOException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write the map out using a custom routine. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/ReferenceMapGeneric.java" line="156" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/ReferenceMapGeneric.java" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map_generic_1a0fddf9057d18bb3c782537a7640dbdbf" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.collections.map.ReferenceMapGeneric.readObject</definition>
        <argsstring>(ObjectInputStream in)</argsstring>
        <name>readObject</name>
        <param>
          <type>ObjectInputStream</type>
          <declname>in</declname>
        </param>
        <exceptions> throws IOException, ClassNotFoundException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read the map in using a custom routine. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/ReferenceMapGeneric.java" line="164" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/ReferenceMapGeneric.java" bodystart="164" bodyend="167"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A <computeroutput>Map</computeroutput> implementation that allows mappings to be removed by the garbage collector. </para><para>When you construct a <computeroutput><ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map" kindref="compound">ReferenceMap</ref></computeroutput>, you can specify what kind of references are used to store the map&apos;s keys and values. If non-hard references are used, then the garbage collector can remove mappings if a key or value becomes unreachable, or if the JVM&apos;s memory is running low. For information on how the different reference types behave, see <ref refid="" kindref="compound">Reference</ref>. </para><para>Different types of references can be specified for keys and values. The keys can be configured to be weak but the values hard, in which case this class will behave like a <ulink url="http://java.sun.com/j2se/1.4/docs/api/java/util/WeakHashMap.html"><computeroutput>WeakHashMap</computeroutput></ulink>. However, you can also specify hard keys and weak values, or any other combination. The default constructor uses hard keys and soft values, providing a memory-sensitive cache. </para><para>This map is similar to <ref refid="" kindref="compound">ReferenceIdentityMap</ref>. It differs in that keys and values in this class are compared using <computeroutput><ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a51f160d58d2e1c71c78911f89b4b1b5d" kindref="member">equals()</ref></computeroutput>. </para><para>This <ref refid="" kindref="compound">Map</ref> implementation does <emphasis>not</emphasis> allow null elements. Attempting to add a null key or value to the map will raise a <computeroutput>NullPointerException</computeroutput>. </para><para>This implementation is not synchronized. You can use <ref refid="" kindref="compound">java.util.Collections#synchronizedMap</ref> to provide synchronized access to a <computeroutput><ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map" kindref="compound">ReferenceMap</ref></computeroutput>. Remember that synchronization will not stop the garbage collecter removing entries. </para><para>All the available iterators can be reset back to the start by casting to <computeroutput><ref refid="interfaceorg_1_1apache_1_1commons_1_1collections_1_1_resettable_iterator" kindref="compound">ResettableIterator</ref></computeroutput> and calling <computeroutput>reset()</computeroutput>. </para><para><bold>Note that <ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map" kindref="compound">ReferenceMap</ref> is not synchronized and is not thread-safe.</bold> If you wish to use this map from multiple threads concurrently, you must use appropriate synchronization. The simplest approach is to wrap this map using <ref refid="" kindref="compound">java.util.Collections#synchronizedMap</ref>. This class may throw exceptions when accessed by concurrent threads without synchronization. </para><para>NOTE: As from Commons Collections 3.1 this map extends <computeroutput><ref refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map" kindref="compound">AbstractReferenceMap</ref></computeroutput> (previously it extended AbstractMap). As a result, the implementation is now extensible and provides a <computeroutput><ref refid="interfaceorg_1_1apache_1_1commons_1_1collections_1_1_map_iterator" kindref="compound">MapIterator</ref></computeroutput>.</para><para><simplesect kind="see"><para>java.lang.ref.Reference</para></simplesect>
<simplesect kind="since"><para>Commons Collections 3.0 (previously in main package v2.1) </para></simplesect>
<simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision:</title><para>646777 </para></simplesect>
<simplesect kind="rcs"><title>Date:</title><para>2008-04-10 13:33:15 +0100 (Thu, 10 Apr 2008) </para></simplesect>
</para><para><simplesect kind="author"><para>Paul Jack </para><simplesectsep/><para>Stephen Colebourne </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="9913">
        <label>AbstractMap</label>
      </node>
      <node id="9911">
        <label>org.apache.commons.collections.map.AbstractReferenceMap</label>
        <link refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map"/>
        <childnode refid="9912" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9914">
        <label>org.apache.commons.collections.IterableMap</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1collections_1_1_iterable_map"/>
        <childnode refid="9915" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9915">
        <label>Map</label>
      </node>
      <node id="9916">
        <label>Serializable</label>
      </node>
      <node id="9910">
        <label>org.apache.commons.collections.map.ReferenceMapGeneric</label>
        <link refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map_generic"/>
        <childnode refid="9911" relation="public-inheritance">
        </childnode>
        <childnode refid="9916" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9912">
        <label>org.apache.commons.collections.map.AbstractHashedMap</label>
        <link refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map"/>
        <childnode refid="9913" relation="public-inheritance">
        </childnode>
        <childnode refid="9914" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9923">
        <label>org.apache.commons.collections.map.AbstractHashedMap.EntrySet</label>
        <childnode refid="9924" relation="public-inheritance">
        </childnode>
        <childnode refid="9919" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
      <node id="9928">
        <label>org.apache.commons.collections.KeyValue</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1collections_1_1_key_value"/>
      </node>
      <node id="9920">
        <label>AbstractMap</label>
      </node>
      <node id="9918">
        <label>org.apache.commons.collections.map.AbstractReferenceMap</label>
        <link refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map"/>
        <childnode refid="9919" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9927">
        <label>Map::Entry</label>
      </node>
      <node id="9921">
        <label>org.apache.commons.collections.IterableMap</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1collections_1_1_iterable_map"/>
        <childnode refid="9922" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9926">
        <label>org.apache.commons.collections.map.AbstractHashedMap.HashEntry</label>
        <childnode refid="9927" relation="public-inheritance">
        </childnode>
        <childnode refid="9928" relation="public-inheritance">
        </childnode>
        <childnode refid="9926" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="9922">
        <label>Map</label>
      </node>
      <node id="9931">
        <label>Serializable</label>
      </node>
      <node id="9925">
        <label>org.apache.commons.collections.map.AbstractHashedMap.KeySet</label>
        <childnode refid="9924" relation="public-inheritance">
        </childnode>
        <childnode refid="9919" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
      <node id="9924">
        <label>AbstractSet</label>
      </node>
      <node id="9917">
        <label>org.apache.commons.collections.map.ReferenceMapGeneric</label>
        <link refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map_generic"/>
        <childnode refid="9918" relation="public-inheritance">
        </childnode>
        <childnode refid="9931" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9930">
        <label>AbstractCollection</label>
      </node>
      <node id="9919">
        <label>org.apache.commons.collections.map.AbstractHashedMap</label>
        <link refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map"/>
        <childnode refid="9920" relation="public-inheritance">
        </childnode>
        <childnode refid="9921" relation="public-inheritance">
        </childnode>
        <childnode refid="9923" relation="usage">
          <edgelabel>entrySet</edgelabel>
        </childnode>
        <childnode refid="9925" relation="usage">
          <edgelabel>keySet</edgelabel>
        </childnode>
        <childnode refid="9926" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
        <childnode refid="9929" relation="usage">
          <edgelabel>values</edgelabel>
        </childnode>
      </node>
      <node id="9929">
        <label>org.apache.commons.collections.map.AbstractHashedMap.Values</label>
        <childnode refid="9930" relation="public-inheritance">
        </childnode>
        <childnode refid="9919" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/ReferenceMapGeneric.java" line="76" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/collections/map/ReferenceMapGeneric.java" bodystart="76" bodyend="169"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a9c9672ea02d7a64c6733a5ddb5c260d3" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>AbstractHashedMap</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a6bf720b9f0bfcf97f1640ec5d3d493df" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>AbstractHashedMap</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a28a8a5def3988c22b463c3d4ec209e55" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>AbstractHashedMap</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a8f1b7669151ae4e139b970aa109048c5" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>AbstractHashedMap</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a77e8bb4264ea6f5dc5b612f4168d61c0" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>AbstractHashedMap</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a6cf69ead5c6006d84ac9c93a9fe36601" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>AbstractReferenceMap</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1acf3bc97fa986f072fbf4b6b1837d8bc4" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>AbstractReferenceMap</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a6927cadb67581f7ad0f96c99686a1e62" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>addEntry</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a253695db7aee484720c3d5034509219c" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>addMapping</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a7eb0eaf5d1bdd0b4912d98b3c58a09b1" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>calculateNewCapacity</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1afd62eac0894938109577146f848c5a4c" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>calculateThreshold</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a0a946881b0fba5cfc41bd7e4a9e0ced3" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>checkCapacity</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1aa58bff1287ae8f3e57e515f93b917fc1" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>clear</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a277425ab358a8a5a03d5148cdb4671a6" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>clone</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ab963c5099821c43b60d482a29bd20552" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>containsKey</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a89cf67baf7989433faa3ae3386dd9f70" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>containsValue</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a37ac0c36936c4e2df09e41b24aaff298" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>convertKey</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ac6d8356419279a605f27de9dcc3ba07e" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>createEntry</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ac2793da9c9d45d1a3a63e571fc8b5008" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>createEntrySetIterator</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a2bb5379604af9c8c923751fdedc61066" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>createKeySetIterator</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a222d08d584fb157b0e1df04bca7c1c81" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>createValuesIterator</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a66ee201f17013ae1324c6dcf16816a91" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>data</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1ab75b9040c76cea48c33ab7d3c71fd7dd" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>DEFAULT_CAPACITY</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1aeaa44bca56ee02ccd1fffbd07364ab2a" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>DEFAULT_LOAD_FACTOR</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1aa1b5d36f94451298f4727391d677d159" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>DEFAULT_THRESHOLD</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a40294c523403f093e811c27e70f68677" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>destroyEntry</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1aff3de0136a097bba4d3f620a6c44225b" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>doReadObject</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a588e99ada8fe57f5095bde8fbdff196f" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>doWriteObject</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1ab717b34a417392901d5444762fb99984" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>ensureCapacity</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1aee1d3a4b667b467eeeb9269c1769bdb9" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>entryHashCode</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a95a0b02bc43cdd0685be8f6838bead4d" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>entryKey</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a41641e16b5d44b10252a54f8fadbb700" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>entryNext</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a49db678a6f139255adbd75483d3d34cd" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>entrySet</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a12d684404409096009c6cb75d06c5831" prot="protected" virt="non-virtual" ambiguityscope="org::apache::commons::collections::map::AbstractHashedMap."><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>entrySet</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1af92abcb1403889edf2af4f9101c61a2e" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>entryValue</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a51f160d58d2e1c71c78911f89b4b1b5d" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>equals</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a5d12a808946c34ba34f935973b5bbf43" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>get</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a60772a78e39e666140729ec158a5f2e8" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>getEntry</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1adeb9f01a500a97b48ff1cd172be147b7" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>GETKEY_INVALID</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1abb26a07cd1e1b25fcc83dfc95d70e4fe" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>GETVALUE_INVALID</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af731b002fab45855199994aa132d0c7e" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>HARD</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1af8656af330dfd198ea87ffadab432820" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>hash</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1ae29b5039030a3969ef39f7e1e009e709" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>hashCode</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af5989b24990dba61bcd0f905b8c5c293" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>hashEntry</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a07c7cee89f737ff26bfdc1c8091d577c" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>hashIndex</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a9fc795753d47ee1df60e1310725d862b" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>init</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a3cb4d5bb4aa13d1f8f7ce569412aac18" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>isEmpty</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ad410af0b0554e8b9a1fcfaba46af845a" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>isEqualKey</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a8878c87b575609924fe0e2d33f4efc2b" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>isEqualValue</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ac6a1b622d81961532735cf10a68a2dcc" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>keySet</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a17174511c9bc47b8324149672f236a02" prot="protected" virt="non-virtual" ambiguityscope="org::apache::commons::collections::map::AbstractHashedMap."><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>keySet</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a4740a8292bec34a1012770fbd58faa2f" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>keyType</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a2b6eca9c5a9367ea944670a443a5b555" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>loadFactor</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ad2ff03d9591b09848effe30508656f12" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>mapIterator</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a32b97e399f63f1c47be210d4c26fa45e" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>MAXIMUM_CAPACITY</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a7d8a11a63c0cc092215b92b90105f8ab" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>modCount</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1ad36d3f7d8a7ad41625b8c818c7604bee" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>NO_NEXT_ENTRY</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1aebe646b8e13879cd69169199a2055d88" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>NO_PREVIOUS_ENTRY</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1af8d3344e60612d8519a55e94156342ac" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>NULL</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a048ff84d4217b867296fc949a377f496" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>purge</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1acfba62cc5ac10c677c50d3ffdbe46449" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>purge</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a34172b6ce67c1b6f966bba7351d64e76" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>purgeBeforeRead</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a507daa6652dffb0c2e91776eaac85f56" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>purgeBeforeWrite</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a4c1de0f34c08b8d1cccb884edf975e57" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>purgeValues</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ac2374be980421e681fae891f89e4a77e" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>put</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1af1c55fc542c160b51bdb8bd8f6656504" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>putAll</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map_generic_1a0fddf9057d18bb3c782537a7640dbdbf" prot="private" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>readObject</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map_generic_1a46a2141b5a2eb59617ef673a7ca5c106" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>ReferenceMapGeneric</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map_generic_1a725b4a931cb94cd50bebec910516306c" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>ReferenceMapGeneric</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map_generic_1a4c117eb86a184e26e5000a7441a87032" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>ReferenceMapGeneric</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map_generic_1a54f3d55185f7855783b3c05d12511816" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>ReferenceMapGeneric</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map_generic_1a470bc506e21923c9516a3901a967d56e" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>ReferenceMapGeneric</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1aad2b68077e4cf57002a4434038959fc6" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>remove</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a1b0135f4e27d123f41c461098f207eb8" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>REMOVE_INVALID</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a3794a97519e1fe9831073d1c54778cf4" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>removeEntry</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a0dd50e56c27f5bcb049e91ea52df3203" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>removeMapping</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a73815bc6d192060cccc83044d8f39416" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>reuseEntry</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map_generic_1a002f33acbc2c715507b0f8d59672d868" prot="private" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>serialVersionUID</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a94acef38eb0c1138d5393561d075ffe0" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>SETVALUE_INVALID</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1ac283e757d1b924316731ebb4467f2a67" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>size</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a94289b9872435205bc446ab9520d4d9e" prot="protected" virt="non-virtual" ambiguityscope="org::apache::commons::collections::map::AbstractHashedMap."><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>size</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1a5d616e45811742a81988965e86f403db" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>SOFT</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a3e6b7ae91dbd17786779a520f94dbc11" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>threshold</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a38e0feace02a112ff562b8cbf91f2cc0" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>toString</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1a039d627c353264ac3febe170edca5a06" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>updateEntry</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1aff315edaecb7c719092db9db7dbebf1b" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>values</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_hashed_map_1aa566df1228b61b14daae67766e214283" prot="protected" virt="non-virtual" ambiguityscope="org::apache::commons::collections::map::AbstractHashedMap."><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>values</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1aa34a045877daedff230dbfdb261180d1" prot="protected" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>valueType</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_abstract_reference_map_1af6dd0361c4cd113da7b56e8515165487" prot="public" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>WEAK</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1collections_1_1map_1_1_reference_map_generic_1ae8a59ecf156c06302369c24b8c992f36" prot="private" virt="non-virtual"><scope>org::apache::commons::collections::map::ReferenceMapGeneric</scope><name>writeObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
