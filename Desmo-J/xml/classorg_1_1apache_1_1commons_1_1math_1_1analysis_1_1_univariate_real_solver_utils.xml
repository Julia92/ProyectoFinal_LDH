<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_utils" kind="class" prot="public">
    <compoundname>org::apache::commons::math::analysis::UnivariateRealSolverUtils</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_utils_1aaf909e202cf679fa476a12b0df36fc75" prot="private" static="yes" mutable="no">
        <type><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_factory_impl" kindref="compound">UnivariateRealSolverFactoryImpl</ref></type>
        <definition>UnivariateRealSolverFactoryImpl org.apache.commons.math.analysis.UnivariateRealSolverUtils.factory</definition>
        <argsstring></argsstring>
        <name>factory</name>
        <initializer>= null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cached solver factory </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java" line="36" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_utils_1ab64c8f5a1a20952db36435cb8024343a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.math.analysis.UnivariateRealSolverUtils.UnivariateRealSolverUtils</definition>
        <argsstring>()</argsstring>
        <name>UnivariateRealSolverUtils</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java" line="31" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java" bodystart="31" bodyend="33"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_utils_1aca0545aa9d2fd7a99c1a304a89de9f86" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve</definition>
        <argsstring>(UnivariateRealFunction f, double x0, double x1)</argsstring>
        <name>solve</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function" kindref="compound">UnivariateRealFunction</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x1</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_convergence_exception" kindref="compound">ConvergenceException</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience method to find a zero of a univariate real function. A default solver is used.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>the function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x0</parametername>
</parameternamelist>
<parameterdescription>
<para>the lower bound for the interval. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x1</parametername>
</parameternamelist>
<parameterdescription>
<para>the upper bound for the interval. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a value where the function is zero. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_convergence_exception" kindref="compound">ConvergenceException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the iteration count was exceeded </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if an error occurs evaluating the function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if f is null or the endpoints do not specify a valid interval </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java" line="52" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_utils_1a2cc470869e31a26c397e0da1ec951457" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve</definition>
        <argsstring>(UnivariateRealFunction f, double x0, double x1, double absoluteAccuracy)</argsstring>
        <name>solve</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function" kindref="compound">UnivariateRealFunction</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>absoluteAccuracy</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_convergence_exception" kindref="compound">ConvergenceException</ref>,              <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience method to find a zero of a univariate real function. A default solver is used.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>the function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x0</parametername>
</parameternamelist>
<parameterdescription>
<para>the lower bound for the interval </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x1</parametername>
</parameternamelist>
<parameterdescription>
<para>the upper bound for the interval </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>absoluteAccuracy</parametername>
</parameternamelist>
<parameterdescription>
<para>the accuracy to be used by the solver </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a value where the function is zero </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_convergence_exception" kindref="compound">ConvergenceException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the iteration count is exceeded </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if an error occurs evaluating the function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if f is null, the endpoints do not specify a valid interval, or the absoluteAccuracy is not valid for the default solver </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java" line="74" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java" bodystart="74" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_utils_1adc7e5c0d9f608f1247f0d4146a37fe6d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double[]</type>
        <definition>static double [] org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket</definition>
        <argsstring>(UnivariateRealFunction function, double initial, double lowerBound, double upperBound)</argsstring>
        <name>bracket</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function" kindref="compound">UnivariateRealFunction</ref></type>
          <declname>function</declname>
        </param>
        <param>
          <type>double</type>
          <declname>initial</declname>
        </param>
        <param>
          <type>double</type>
          <declname>lowerBound</declname>
        </param>
        <param>
          <type>double</type>
          <declname>upperBound</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_convergence_exception" kindref="compound">ConvergenceException</ref>, <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method attempts to find two values a and b satisfying <itemizedlist>
<listitem>
<para><computeroutput> lowerBound &lt;= a &lt; initial &lt; b &lt;= upperBound</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput> f(a) * f(b) &lt; 0 </computeroutput> </para></listitem>
</itemizedlist>
If f is continuous on <computeroutput>[a,b],</computeroutput> this means that <computeroutput>a</computeroutput> and <computeroutput>b</computeroutput> bracket a root of f. </para><para>The algorithm starts by setting <computeroutput>a := initial -1; b := initial +1,</computeroutput> examines the value of the function at <computeroutput>a</computeroutput> and <computeroutput>b</computeroutput> and keeps moving the endpoints out by one unit each time through a loop that terminates when one of the following happens: <itemizedlist>
<listitem>
<para><computeroutput> f(a) * f(b) &lt; 0 </computeroutput> <ndash/> success! </para></listitem>
<listitem>
<para><computeroutput> a = lower </computeroutput> and <computeroutput> b = upper</computeroutput> <ndash/> <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_convergence_exception" kindref="compound">ConvergenceException</ref>  </para></listitem>
<listitem>
<para><computeroutput> Integer.MAX_VALUE</computeroutput> iterations elapse <ndash/> <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_convergence_exception" kindref="compound">ConvergenceException</ref>  </para></listitem>
</itemizedlist>
</para><para><bold>Note: </bold> this method can take <computeroutput>Integer.MAX_VALUE</computeroutput> iterations to throw a <computeroutput><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_convergence_exception" kindref="compound">ConvergenceException</ref>.</computeroutput> Unless you are confident that there is a root between <computeroutput>lowerBound</computeroutput> and <computeroutput>upperBound</computeroutput> near <computeroutput>initial,</computeroutput> it is better to use <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_utils_1ab0760978d4f2b08eaf79548d92949580" kindref="member">bracket(UnivariateRealFunction, double, double, double, int)</ref>, explicitly specifying the maximum number of iterations.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>function</parametername>
</parameternamelist>
<parameterdescription>
<para>the function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initial</parametername>
</parameternamelist>
<parameterdescription>
<para>initial midpoint of interval being expanded to bracket a root </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lowerBound</parametername>
</parameternamelist>
<parameterdescription>
<para>lower bound (a is never lower than this value) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upperBound</parametername>
</parameternamelist>
<parameterdescription>
<para>upper bound (b never is greater than this value) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a two element array holding {a, b} </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_convergence_exception" kindref="compound">ConvergenceException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if a root can not be bracketted </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if an error occurs evaluating the function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if function is null, maximumIterations is not positive, or initial is not between lowerBound and upperBound </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java" line="125" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java" bodystart="125" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_utils_1ab0760978d4f2b08eaf79548d92949580" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double[]</type>
        <definition>static double [] org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket</definition>
        <argsstring>(UnivariateRealFunction function, double initial, double lowerBound, double upperBound, int maximumIterations)</argsstring>
        <name>bracket</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function" kindref="compound">UnivariateRealFunction</ref></type>
          <declname>function</declname>
        </param>
        <param>
          <type>double</type>
          <declname>initial</declname>
        </param>
        <param>
          <type>double</type>
          <declname>lowerBound</declname>
        </param>
        <param>
          <type>double</type>
          <declname>upperBound</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maximumIterations</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_convergence_exception" kindref="compound">ConvergenceException</ref>,              <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method attempts to find two values a and b satisfying <itemizedlist>
<listitem>
<para><computeroutput> lowerBound &lt;= a &lt; initial &lt; b &lt;= upperBound</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput> f(a) * f(b) &lt; 0 </computeroutput>  </para></listitem>
</itemizedlist>
If f is continuous on <computeroutput>[a,b],</computeroutput> this means that <computeroutput>a</computeroutput> and <computeroutput>b</computeroutput> bracket a root of f. </para><para>The algorithm starts by setting <computeroutput>a := initial -1; b := initial +1,</computeroutput> examines the value of the function at <computeroutput>a</computeroutput> and <computeroutput>b</computeroutput> and keeps moving the endpoints out by one unit each time through a loop that terminates when one of the following happens: <itemizedlist>
<listitem>
<para><computeroutput> f(a) * f(b) &lt; 0 </computeroutput> <ndash/> success! </para></listitem>
<listitem>
<para><computeroutput> a = lower </computeroutput> and <computeroutput> b = upper</computeroutput> <ndash/> <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_convergence_exception" kindref="compound">ConvergenceException</ref>  </para></listitem>
<listitem>
<para><computeroutput> maximumIterations</computeroutput> iterations elapse <ndash/> <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_convergence_exception" kindref="compound">ConvergenceException</ref> </para></listitem>
</itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>function</parametername>
</parameternamelist>
<parameterdescription>
<para>the function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initial</parametername>
</parameternamelist>
<parameterdescription>
<para>initial midpoint of interval being expanded to bracket a root </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lowerBound</parametername>
</parameternamelist>
<parameterdescription>
<para>lower bound (a is never lower than this value) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upperBound</parametername>
</parameternamelist>
<parameterdescription>
<para>upper bound (b never is greater than this value) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maximumIterations</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum number of iterations to perform </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a two element array holding {a, b}. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_convergence_exception" kindref="compound">ConvergenceException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the algorithm fails to find a and b satisfying the desired conditions </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if an error occurs evaluating the function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if function is null, maximumIterations is not positive, or initial is not between lowerBound and upperBound </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java" line="166" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java" bodystart="166" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_utils_1addf7c48666d6d6e20b332947d18346e7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double org.apache.commons.math.analysis.UnivariateRealSolverUtils.midpoint</definition>
        <argsstring>(double a, double b)</argsstring>
        <name>midpoint</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the midpoint of two values.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>first value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>second value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the midpoint. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java" line="217" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java" bodystart="217" bodyend="219"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_utils_1a4b25542f1b666d47e60592c10e6c5236" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void org.apache.commons.math.analysis.UnivariateRealSolverUtils.setup</definition>
        <argsstring>(UnivariateRealFunction f)</argsstring>
        <name>setup</name>
        <param>
          <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function" kindref="compound">UnivariateRealFunction</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks to see if f is null, throwing IllegalArgumentException if so. Also initializes factory if factory is null.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>input function </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if f is null </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java" line="228" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java" bodystart="228" bodyend="237"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Utility routines for <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver" kindref="compound">UnivariateRealSolver</ref> objects.</para><para><simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision:</title><para>615734 </para></simplesect>
<simplesect kind="rcs"><title>Date:</title><para>2008-01-27 23:10:03 -0700 (Sun, 27 Jan 2008) </para></simplesect>
</para>    </detaileddescription>
    <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java" line="27" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java" bodystart="27" bodyend="238"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_utils_1adc7e5c0d9f608f1247f0d4146a37fe6d" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::UnivariateRealSolverUtils</scope><name>bracket</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_utils_1ab0760978d4f2b08eaf79548d92949580" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::UnivariateRealSolverUtils</scope><name>bracket</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_utils_1aaf909e202cf679fa476a12b0df36fc75" prot="private" virt="non-virtual"><scope>org::apache::commons::math::analysis::UnivariateRealSolverUtils</scope><name>factory</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_utils_1addf7c48666d6d6e20b332947d18346e7" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::UnivariateRealSolverUtils</scope><name>midpoint</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_utils_1a4b25542f1b666d47e60592c10e6c5236" prot="private" virt="non-virtual"><scope>org::apache::commons::math::analysis::UnivariateRealSolverUtils</scope><name>setup</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_utils_1aca0545aa9d2fd7a99c1a304a89de9f86" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::UnivariateRealSolverUtils</scope><name>solve</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_utils_1a2cc470869e31a26c397e0da1ec951457" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::UnivariateRealSolverUtils</scope><name>solve</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_solver_utils_1ab64c8f5a1a20952db36435cb8024343a" prot="private" virt="non-virtual"><scope>org::apache::commons::math::analysis::UnivariateRealSolverUtils</scope><name>UnivariateRealSolverUtils</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
