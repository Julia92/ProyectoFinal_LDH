.TH "desmoj.core.dist.Operator" 3 "Wed Dec 4 2013" "Version 1.0" "Desmo-J" \" -*- nroff -*-
.ad l
.nh
.SH NAME
desmoj.core.dist.Operator \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "double \fBresult\fP (double operand1, double operand2)"
.br
.ti -1c
.RI "String \fBgetDescription\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static final \fBOperator\fP \fBPLUS\fP"
.br
.ti -1c
.RI "static final \fBOperator\fP \fBMINUS\fP"
.br
.ti -1c
.RI "static final \fBOperator\fP \fBMULTIPLY\fP"
.br
.ti -1c
.RI "static final \fBOperator\fP \fBDIVIDE\fP"
.br
.ti -1c
.RI "static final \fBOperator\fP \fBPOW\fP"
.br
.ti -1c
.RI "static final \fBOperator\fP \fBABS_DIFF\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Interface to create user-defined operators\&. Used by \fBContDistAggregate\fP to combine distribution functions\&. Note that implementations of common operators are available as static final fields\&.
.PP
\fBVersion:\fP
.RS 4
DESMO-J, Ver\&. 2\&.4\&.0 copyright (c) 2013 
.RE
.PP
\fBAuthor:\fP
.RS 4
Peter Wueppen 
.PP
.nf
    Licensed under the Apache License, Version 2.0 (the "License"); you
    may not use this file except in compliance with the License. You may
    obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
    implied. See the License for the specific language governing
    permissions and limitations under the License.
.fi
.PP
 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "String desmoj\&.core\&.dist\&.Operator\&.getDescription ()"
Should return a description of what the operator does to be shown by the reporter\&. Example: 'sum', 'product' etc\&.  a description 
.SS "double desmoj\&.core\&.dist\&.Operator\&.result (doubleoperand1, doubleoperand2)"
This should return the desired of the result or the operation, depending on the operands\&. 
.PP
\fBParameters:\fP
.RS 4
\fIoperand1\fP 
.br
\fIoperand2\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
the result 
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "final \fBOperator\fP desmoj\&.core\&.dist\&.Operator\&.ABS_DIFF\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= new Operator() {
        public double result(double a, double b) {return Math\&.abs(a-b);}
        public String getDescription() {return "diff";}
    }
.fi
Absolute difference operator, for arguments \fCa\fC and \fCb\fP returning \fC|a-b|\fP\&. \fP\fP
.SS "final \fBOperator\fP desmoj\&.core\&.dist\&.Operator\&.DIVIDE\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= new Operator() {
        public double result(double a, double b) {return a / b;}
        public String getDescription() {return "divide";}
    }
.fi
Divide operator, for arguments \fCa\fC and \fCb\fP returning \fCa/b\fP\&. \fP\fP
.SS "final \fBOperator\fP desmoj\&.core\&.dist\&.Operator\&.MINUS\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= new Operator() {
        public double result(double a, double b) {return a - b;}
        public String getDescription() {return "minus";}
    }
.fi
Minus operator, for arguments \fCa\fC and \fCb\fP returning \fCa-b\fP\&. \fP\fP
.SS "final \fBOperator\fP desmoj\&.core\&.dist\&.Operator\&.MULTIPLY\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= new Operator() {
        public double result(double a, double b) {return a * b;}
        public String getDescription() {return "muliply";}
    }
.fi
Multiply operator, for arguments \fCa\fC and \fCb\fP returning \fCa-b\fP\&. \fP\fP
.SS "final \fBOperator\fP desmoj\&.core\&.dist\&.Operator\&.PLUS\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= new Operator() {
        public double result(double a, double b) {return a + b;}
        public String getDescription() {return "plus";}
    }
.fi
Plus operator, for arguments \fCa\fC and \fCb\fP returning \fCa+b\fP\&. \fP\fP
.SS "final \fBOperator\fP desmoj\&.core\&.dist\&.Operator\&.POW\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= new Operator() {
        public double result(double a, double b) {return Math\&.pow(a, b);}
        public String getDescription() {return "pow";}
    }
.fi
Power operator, for arguments \fCa\fC and \fCb\fP returning \fCa^b\fP\&. \fP\fP

.SH "Author"
.PP 
Generated automatically by Doxygen for Desmo-J from the source code\&.
