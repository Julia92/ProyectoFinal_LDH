<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing" kind="class" prot="public">
    <compoundname>desmoj::extensions::applicationDomains::production::Processing</compoundname>
    <basecompoundref prot="public" virt="non-virtual">ProcessCoop</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing_1af2243dd9d9a2e0259254911a87823cc9" prot="private" static="no" mutable="no">
        <type>NumericalDist&lt;?&gt;</type>
        <definition>NumericalDist&lt;?&gt; desmoj.extensions.applicationDomains.production.Processing.processingTimeStream</definition>
        <argsstring></argsstring>
        <name>processingTimeStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The random number stream determining the time it takes to process the parts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/extensions/applicationDomains/production/Processing.java" line="56" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/extensions/applicationDomains/production/Processing.java" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing_1abf8c8dd68a58149d2dc31311b83e5ee2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>desmoj.extensions.applicationDomains.production.Processing.Processing</definition>
        <argsstring>(Model owner, String name, NumericalDist&lt;?&gt; processTimeStream, boolean showInTrace)</argsstring>
        <name>Processing</name>
        <param>
          <type><ref refid="classdesmoj_1_1core_1_1simulator_1_1_model" kindref="compound">Model</ref></type>
          <declname>owner</declname>
        </param>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>NumericalDist&lt;?&gt;</type>
          <declname>processTimeStream</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>showInTrace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a <ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing" kindref="compound">Processing</ref> process where a master (<computeroutput><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_worker" kindref="compound">Worker</ref></computeroutput> or <computeroutput><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_machine_process" kindref="compound">MachineProcess</ref></computeroutput>) is processing slaves ( <computeroutput>SimPorcess</computeroutput> es) in a cooperate manufacturing process. The time it takes to process the parts is determined by the specified processTimeStream.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>desmoj.Model : The model this <ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing" kindref="compound">Processing</ref> is associated to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>java.lang.String : The name of this <ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing" kindref="compound">Processing</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>processTimeStream</parametername>
</parameternamelist>
<parameterdescription>
<para>NumericalDist&lt;?&gt; : The random number stream determining the time it takes to process the parts. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>showInTrace</parametername>
</parameternamelist>
<parameterdescription>
<para>boolean : Flag, if this <ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing" kindref="compound">Processing</ref> should produce a trace output or not. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/extensions/applicationDomains/production/Processing.java" line="76" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/extensions/applicationDomains/production/Processing.java" bodystart="76" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing_1a7dabde35dff18c688a41c64ffc26e076" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void desmoj.extensions.applicationDomains.production.Processing.setProcessingTimeStream</definition>
        <argsstring>(NumericalDist&lt;?&gt; newProcessingTimeStream)</argsstring>
        <name>setProcessingTimeStream</name>
        <param>
          <type>NumericalDist&lt;?&gt;</type>
          <declname>newProcessingTimeStream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the processingTimeStream to a new <computeroutput>RealDist</computeroutput> random number stream.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newProcessingTimeStream</parametername>
</parameternamelist>
<parameterdescription>
<para>NumericalDist&lt;?&gt; : The new <computeroutput>RealDist</computeroutput> random number stream determining the time it takes to process the parts. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/extensions/applicationDomains/production/Processing.java" line="170" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/extensions/applicationDomains/production/Processing.java" bodystart="170" bodyend="173"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing_1a177edfd1d3a584d1f2ae27043214d7f3" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void desmoj.extensions.applicationDomains.production.Processing.cooperation</definition>
        <argsstring>(SimProcess master, SimProcess[] slaves)</argsstring>
        <name>cooperation</name>
        <param>
          <type><ref refid="classdesmoj_1_1core_1_1simulator_1_1_sim_process" kindref="compound">SimProcess</ref></type>
          <declname>master</declname>
        </param>
        <param>
          <type><ref refid="classdesmoj_1_1core_1_1simulator_1_1_sim_process" kindref="compound">SimProcess</ref>[]</type>
          <declname>slaves</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method describes the <ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing" kindref="compound">Processing</ref> process carried out by the master process (some kind of <computeroutput><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_worker" kindref="compound">Worker</ref></computeroutput> or <computeroutput><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_machine_process" kindref="compound">MachineProcess</ref></computeroutput>). In this simple case only the time it takes to process the parts is taken into consideration. If the user building the model has to implement a more complex behavior, he has to overwrite this method in a subclass. The time it takes to process the parts is obtained from the method <computeroutput><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing_1a8be31e0b0e45712f15d1d5fd46803a0c" kindref="member">getProcessingTimeSample()</ref></computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>master</parametername>
</parameternamelist>
<parameterdescription>
<para>SimProcess : The master process which really carries out the cooperation (and processes the slave parts). Should be a subclass of <computeroutput><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_worker" kindref="compound">Worker</ref></computeroutput> or <computeroutput><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_machine_process" kindref="compound">MachineProcess</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slaves</parametername>
</parameternamelist>
<parameterdescription>
<para>SimProcess[] : The slave processes (parts) which are lead through the process cooperation by the master. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/extensions/applicationDomains/production/Processing.java" line="102" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/extensions/applicationDomains/production/Processing.java" bodystart="102" bodyend="129"/>
        <references refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing_1a8be31e0b0e45712f15d1d5fd46803a0c" compoundref="_processing_8java" startline="156" endline="159">desmoj.extensions.applicationDomains.production.Processing.getProcessingTimeSample</references>
      </memberdef>
      <memberdef kind="function" id="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing_1ab933fe4956ae99b6c45437fa595c9506" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void desmoj.extensions.applicationDomains.production.Processing.cooperation</definition>
        <argsstring>(SimProcess master, SimProcess slave)</argsstring>
        <name>cooperation</name>
        <param>
          <type><ref refid="classdesmoj_1_1core_1_1simulator_1_1_sim_process" kindref="compound">SimProcess</ref></type>
          <declname>master</declname>
        </param>
        <param>
          <type><ref refid="classdesmoj_1_1core_1_1simulator_1_1_sim_process" kindref="compound">SimProcess</ref></type>
          <declname>slave</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing_1a177edfd1d3a584d1f2ae27043214d7f3" kindref="member">cooperation()</ref></computeroutput> method with only one master and one slave is not needed here. So we pass it to the more general method with an array of slaves as parameter. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/extensions/applicationDomains/production/Processing.java" line="136" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/extensions/applicationDomains/production/Processing.java" bodystart="136" bodyend="146"/>
        <references refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing_1a177edfd1d3a584d1f2ae27043214d7f3" compoundref="_processing_8java" startline="102" endline="129">desmoj.extensions.applicationDomains.production.Processing.cooperation</references>
      </memberdef>
      <memberdef kind="function" id="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing_1a8be31e0b0e45712f15d1d5fd46803a0c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdesmoj_1_1core_1_1simulator_1_1_time_span" kindref="compound">TimeSpan</ref></type>
        <definition>TimeSpan desmoj.extensions.applicationDomains.production.Processing.getProcessingTimeSample</definition>
        <argsstring>()</argsstring>
        <name>getProcessingTimeSample</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <computeroutput>SimTime</computeroutput> object representing the time it takes to process the parts with the worker or machine. The time is taken from the given random number stream processingTimeStream.</para><para><simplesect kind="return"><para>desmoj.SimTime : The time it takes to process the parts with the worker or machineProcess. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/extensions/applicationDomains/production/Processing.java" line="156" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/extensions/applicationDomains/production/Processing.java" bodystart="156" bodyend="159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing" kindref="compound">Processing</ref> is the object representing the processing process taking place at a <computeroutput><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_work_station" kindref="compound">WorkStation</ref></computeroutput> where a <computeroutput><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_worker" kindref="compound">Worker</ref></computeroutput> process or a <computeroutput><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_machine_process" kindref="compound">MachineProcess</ref></computeroutput> are processing some parts (products) to manufacture some new parts (or products). The kind and the number of parts being processed are determined by a <computeroutput><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_parts_list" kindref="compound">PartsList</ref></computeroutput>. The parts (or products) are represented by <computeroutput>SimProcess</computeroutput> es. The <computeroutput><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_worker" kindref="compound">Worker</ref></computeroutput> and the <computeroutput><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_machine_process" kindref="compound">MachineProcess</ref></computeroutput> are also some kind of <computeroutput>SimProcess</computeroutput> es. But one <computeroutput><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_worker" kindref="compound">Worker</ref></computeroutput> or <computeroutput><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_machine_process" kindref="compound">MachineProcess</ref></computeroutput> is the master process and the other processes are all slave processes. It is intended that that this <ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing" kindref="compound">Processing</ref> is used with the <computeroutput><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_work_station" kindref="compound">WorkStation</ref></computeroutput> construct, where a master process ( <computeroutput><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_worker" kindref="compound">Worker</ref></computeroutput> or <computeroutput><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_machine_process" kindref="compound">MachineProcess</ref></computeroutput>) is waiting for parts or products (slave processes) to process them. During the <ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing" kindref="compound">Processing</ref> the master process is active and the slave processes are passive. The processing taking place at the <computeroutput><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_work_station" kindref="compound">WorkStation</ref></computeroutput> is described in the method <computeroutput>cooperation</computeroutput>, which should be overwritten by the user to model the manufacturing process taking place at the <computeroutput><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_work_station" kindref="compound">WorkStation</ref></computeroutput>. Until now this method only models the time it takes to process the parts in some way. Note: when using the <computeroutput><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_work_station" kindref="compound">WorkStation</ref></computeroutput> construct the master (<ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_worker" kindref="compound">Worker</ref> or <ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_machine_process" kindref="compound">MachineProcess</ref>) will be activated after the processing is done and the slave processes will be activated after the master (if they have not been activated during the processing process already).</para><para><simplesect kind="see"><para><ref refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_work_station" kindref="compound">desmoj.extensions.applicationDomains.production.WorkStation</ref></para></simplesect>
<simplesect kind="version"><para>DESMO-J, Ver. 2.4.0 copyright (c) 2013 </para></simplesect>
<simplesect kind="author"><para>Soenke Claassen</para></simplesect>
Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at <ulink url="http://www.apache.org/licenses/LICENSE-2.0">http://www.apache.org/licenses/LICENSE-2.0</ulink></para><para>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="9525">
        <label>desmoj.extensions.applicationDomains.production.Processing</label>
        <link refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing"/>
        <childnode refid="9526" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9526">
        <label>ProcessCoop</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9527">
        <label>desmoj.extensions.applicationDomains.production.Processing</label>
        <link refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing"/>
        <childnode refid="9528" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9528">
        <label>ProcessCoop</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/extensions/applicationDomains/production/Processing.java" line="50" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/desmoj/extensions/applicationDomains/production/Processing.java" bodystart="50" bodyend="174"/>
    <listofallmembers>
      <member refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing_1a177edfd1d3a584d1f2ae27043214d7f3" prot="protected" virt="non-virtual"><scope>desmoj::extensions::applicationDomains::production::Processing</scope><name>cooperation</name></member>
      <member refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing_1ab933fe4956ae99b6c45437fa595c9506" prot="protected" virt="non-virtual"><scope>desmoj::extensions::applicationDomains::production::Processing</scope><name>cooperation</name></member>
      <member refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing_1a8be31e0b0e45712f15d1d5fd46803a0c" prot="protected" virt="non-virtual"><scope>desmoj::extensions::applicationDomains::production::Processing</scope><name>getProcessingTimeSample</name></member>
      <member refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing_1abf8c8dd68a58149d2dc31311b83e5ee2" prot="public" virt="non-virtual"><scope>desmoj::extensions::applicationDomains::production::Processing</scope><name>Processing</name></member>
      <member refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing_1af2243dd9d9a2e0259254911a87823cc9" prot="private" virt="non-virtual"><scope>desmoj::extensions::applicationDomains::production::Processing</scope><name>processingTimeStream</name></member>
      <member refid="classdesmoj_1_1extensions_1_1application_domains_1_1production_1_1_processing_1a7dabde35dff18c688a41c64ffc26e076" prot="public" virt="non-virtual"><scope>desmoj::extensions::applicationDomains::production::Processing</scope><name>setProcessingTimeStream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
