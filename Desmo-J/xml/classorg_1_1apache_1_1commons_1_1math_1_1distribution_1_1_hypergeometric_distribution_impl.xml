<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl" kind="class" prot="public">
    <compoundname>org::apache::commons::math::distribution::HypergeometricDistributionImpl</compoundname>
    <basecompoundref refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution" prot="public" virt="non-virtual">org.apache.commons.math.distribution.AbstractIntegerDistribution</basecompoundref>
    <basecompoundref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution" prot="public" virt="non-virtual">org.apache.commons.math.distribution.HypergeometricDistribution</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Serializable</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1afc5110f4b3e56bdc42fb5289aac12dab" prot="private" static="yes" mutable="no">
        <type>final long</type>
        <definition>final long org.apache.commons.math.distribution.HypergeometricDistributionImpl.serialVersionUID</definition>
        <argsstring></argsstring>
        <name>serialVersionUID</name>
        <initializer>= -436928820673516179L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializable version identifier </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" line="34" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a0c8350d9d1f67ea9ea8e02f82d96dd25" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int org.apache.commons.math.distribution.HypergeometricDistributionImpl.numberOfSuccesses</definition>
        <argsstring></argsstring>
        <name>numberOfSuccesses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of successes in the population. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" line="37" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a91b476f47f8bb778ee0baec3fb898024" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int org.apache.commons.math.distribution.HypergeometricDistributionImpl.populationSize</definition>
        <argsstring></argsstring>
        <name>populationSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The population size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" line="40" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1ae8f5cda873a35b51ed2c88a6f1410ead" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int org.apache.commons.math.distribution.HypergeometricDistributionImpl.sampleSize</definition>
        <argsstring></argsstring>
        <name>sampleSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The sample size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" line="43" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1ac385fe505c98957200f3629b61af75b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl</definition>
        <argsstring>(int populationSize, int numberOfSuccesses, int sampleSize)</argsstring>
        <name>HypergeometricDistributionImpl</name>
        <param>
          <type>int</type>
          <declname>populationSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numberOfSuccesses</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sampleSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a new hypergeometric distribution with the given the population size, the number of successes in the population, and the sample size. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>populationSize</parametername>
</parameternamelist>
<parameterdescription>
<para>the population size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numberOfSuccesses</parametername>
</parameternamelist>
<parameterdescription>
<para>number of successes in the population. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sampleSize</parametername>
</parameternamelist>
<parameterdescription>
<para>the sample size. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" line="52" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" bodystart="52" bodyend="67"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1aab2b2256c1774df04133179f1ef061b0" compoundref="_hypergeometric_distribution_impl_8java" startline="237" endline="243">org.apache.commons.math.distribution.HypergeometricDistributionImpl.setPopulationSize</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a017af6f44f4a3037941247a6067263ab" compoundref="_hypergeometric_distribution_impl_8java" startline="250" endline="256">org.apache.commons.math.distribution.HypergeometricDistributionImpl.setSampleSize</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1ad21e2904414d8b4b21828062ff548771" compoundref="_hypergeometric_distribution_impl_8java" startline="224" endline="230">org.apache.commons.math.distribution.HypergeometricDistributionImpl.setNumberOfSuccesses</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a996664cd1099336fc6b7e30b838a3448" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.HypergeometricDistributionImpl.cumulativeProbability</definition>
        <argsstring>(int x)</argsstring>
        <name>cumulativeProbability</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1af64ac51473a3452bf6c2d4cc95b470c6">cumulativeProbability</reimplements>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For this disbution, X, this method returns P(X <le/> x). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value at which the PDF is evaluated. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>PDF for this distribution. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" line="74" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" bodystart="74" bodyend="91"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1ae6dffe4089e331e66a329cefcdaa14ed" compoundref="_hypergeometric_distribution_impl_8java" startline="157" endline="159">org.apache.commons.math.distribution.HypergeometricDistributionImpl.getPopulationSize</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a9e322496fbde3696c0c62bd3dfdd78a0" compoundref="_hypergeometric_distribution_impl_8java" startline="149" endline="151">org.apache.commons.math.distribution.HypergeometricDistributionImpl.getNumberOfSuccesses</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a411192e09b10244a87693c636cfa8dda" compoundref="_hypergeometric_distribution_impl_8java" startline="165" endline="167">org.apache.commons.math.distribution.HypergeometricDistributionImpl.getSampleSize</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a9e322496fbde3696c0c62bd3dfdd78a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int org.apache.commons.math.distribution.HypergeometricDistributionImpl.getNumberOfSuccesses</definition>
        <argsstring>()</argsstring>
        <name>getNumberOfSuccesses</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_1adfb4c86abde3c870c83ebe92f81b9273">getNumberOfSuccesses</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the number of successes. <simplesect kind="return"><para>the number of successes. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" line="149" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" bodystart="149" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1ae6dffe4089e331e66a329cefcdaa14ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int org.apache.commons.math.distribution.HypergeometricDistributionImpl.getPopulationSize</definition>
        <argsstring>()</argsstring>
        <name>getPopulationSize</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_1a3bfbc26a716341b124ec21449c95c1d1">getPopulationSize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the population size. <simplesect kind="return"><para>the population size. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" line="157" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" bodystart="157" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a411192e09b10244a87693c636cfa8dda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int org.apache.commons.math.distribution.HypergeometricDistributionImpl.getSampleSize</definition>
        <argsstring>()</argsstring>
        <name>getSampleSize</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_1a99a139093de381d76b91f2d60af8059c">getSampleSize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the sample size. <simplesect kind="return"><para>the sample size. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" line="165" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" bodystart="165" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a95c309e5d1871ab58c1ff4aefce82708" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability</definition>
        <argsstring>(int x)</argsstring>
        <name>probability</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution_1ae20d4195b3f5ab562d332070c82c4cdd">probability</reimplements>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For this disbution, X, this method returns P(X = x).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value at which the PMF is evaluated. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>PMF for this distribution. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" line="186" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" bodystart="186" bodyend="201"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1ae6dffe4089e331e66a329cefcdaa14ed" compoundref="_hypergeometric_distribution_impl_8java" startline="157" endline="159">org.apache.commons.math.distribution.HypergeometricDistributionImpl.getPopulationSize</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a9e322496fbde3696c0c62bd3dfdd78a0" compoundref="_hypergeometric_distribution_impl_8java" startline="149" endline="151">org.apache.commons.math.distribution.HypergeometricDistributionImpl.getNumberOfSuccesses</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a411192e09b10244a87693c636cfa8dda" compoundref="_hypergeometric_distribution_impl_8java" startline="165" endline="167">org.apache.commons.math.distribution.HypergeometricDistributionImpl.getSampleSize</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1ad21e2904414d8b4b21828062ff548771" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void org.apache.commons.math.distribution.HypergeometricDistributionImpl.setNumberOfSuccesses</definition>
        <argsstring>(int num)</argsstring>
        <name>setNumberOfSuccesses</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_1a405c6327479427252d41944b9702b564">setNumberOfSuccesses</reimplements>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Modify the number of successes. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>the new number of successes. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>num</computeroutput> is negative. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" line="224" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" bodystart="224" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1aab2b2256c1774df04133179f1ef061b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void org.apache.commons.math.distribution.HypergeometricDistributionImpl.setPopulationSize</definition>
        <argsstring>(int size)</argsstring>
        <name>setPopulationSize</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_1ab6167a4a3bea20260f676060dc9402f4">setPopulationSize</reimplements>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Modify the population size. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>the new population size. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>size</computeroutput> is not positive. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" line="237" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" bodystart="237" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a017af6f44f4a3037941247a6067263ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void org.apache.commons.math.distribution.HypergeometricDistributionImpl.setSampleSize</definition>
        <argsstring>(int size)</argsstring>
        <name>setSampleSize</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_1aa13fd5410bb0c997f94cde8a8828119a">setSampleSize</reimplements>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Modify the sample size. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>the new sample size. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>size</computeroutput> is negative. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" line="250" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" bodystart="250" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a22506ecec8d95318333a9d81e37fbe0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.HypergeometricDistributionImpl.upperCumulativeProbability</definition>
        <argsstring>(int x)</argsstring>
        <name>upperCumulativeProbability</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For this disbution, X, this method returns P(X <ge/> x). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value at which the CDF is evaluated. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>upper tail CDF for this distribution. </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" line="264" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" bodystart="264" bodyend="281"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1ae6dffe4089e331e66a329cefcdaa14ed" compoundref="_hypergeometric_distribution_impl_8java" startline="157" endline="159">org.apache.commons.math.distribution.HypergeometricDistributionImpl.getPopulationSize</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a9e322496fbde3696c0c62bd3dfdd78a0" compoundref="_hypergeometric_distribution_impl_8java" startline="149" endline="151">org.apache.commons.math.distribution.HypergeometricDistributionImpl.getNumberOfSuccesses</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a411192e09b10244a87693c636cfa8dda" compoundref="_hypergeometric_distribution_impl_8java" startline="165" endline="167">org.apache.commons.math.distribution.HypergeometricDistributionImpl.getSampleSize</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a53973993770c69e2fd2264f8d337b969" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int[]</type>
        <definition>int [] org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomain</definition>
        <argsstring>(int n, int m, int k)</argsstring>
        <name>getDomain</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the domain for the given hypergeometric distribution parameters. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the population size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>number of successes in the population. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>the sample size. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a two element array containing the lower and upper bounds of the hypergeometric distribution. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" line="101" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" bodystart="101" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1acca1a28151e3fba7898d1e443c5daf5c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.apache.commons.math.distribution.HypergeometricDistributionImpl.getLowerDomain</definition>
        <argsstring>(int n, int m, int k)</argsstring>
        <name>getLowerDomain</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the lowest domain value for the given hypergeometric distribution parameters. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the population size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>number of successes in the population. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>the sample size. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the lowest domain value of the hypergeometric distribution. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" line="141" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a94b52485116f39339ee6ad069bd51b12" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.apache.commons.math.distribution.HypergeometricDistributionImpl.getUpperDomain</definition>
        <argsstring>(int m, int k)</argsstring>
        <name>getUpperDomain</name>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the highest domain value for the given hypergeometric distribution parameters. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>number of successes in the population. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>the sample size. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the highest domain value of the hypergeometric distribution. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" line="176" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" bodystart="176" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a8532eefcbddb963a685a4b99a0cbc56b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability</definition>
        <argsstring>(int n, int m, int k, int x)</argsstring>
        <name>probability</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For the disbution, X, defined by the given hypergeometric distribution parameters, this method returns P(X = x).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the population size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>number of successes in the population. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>the sample size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value at which the PMF is evaluated. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>PMF for the distribution. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" line="213" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" bodystart="213" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a9697e88a4fd4ef895068cd2c942d5b9d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.HypergeometricDistributionImpl.innerCumulativeProbability</definition>
        <argsstring>(int x0, int x1, int dx, int n, int m, int k)</argsstring>
        <name>innerCumulativeProbability</name>
        <param>
          <type>int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For this disbution, X, this method returns P(x0 <le/> X <le/> x1). This probability is computed by summing the point probabilities for the values x0, x0 + 1, x0 + 2, ..., x1, in the order directed by dx. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x0</parametername>
</parameternamelist>
<parameterdescription>
<para>the inclusive, lower bound </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x1</parametername>
</parameternamelist>
<parameterdescription>
<para>the inclusive, upper bound </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dx</parametername>
</parameternamelist>
<parameterdescription>
<para>the direction of summation. 1 indicates summing from x0 to x1. 0 indicates summing from x1 to x0. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the population size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>number of successes in the population. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>the sample size. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>P(x0 <le/> X <le/> x1). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" line="296" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" bodystart="296" bodyend="305"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1ad1890a8eb14776970d7564318170590a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomainLowerBound</definition>
        <argsstring>(double p)</argsstring>
        <name>getDomainLowerBound</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1a9e292c6a847a50d2bff94d8b6f4571a3">getDomainLowerBound</reimplements>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the domain value lower bound, based on <computeroutput>p</computeroutput>, used to bracket a PDF root.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired probability for the critical value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>domain value lower bound, i.e. P(X &lt; <emphasis>lower bound</emphasis>) &lt; <computeroutput>p</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" line="116" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" bodystart="116" bodyend="119"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1ae6dffe4089e331e66a329cefcdaa14ed" compoundref="_hypergeometric_distribution_impl_8java" startline="157" endline="159">org.apache.commons.math.distribution.HypergeometricDistributionImpl.getPopulationSize</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a9e322496fbde3696c0c62bd3dfdd78a0" compoundref="_hypergeometric_distribution_impl_8java" startline="149" endline="151">org.apache.commons.math.distribution.HypergeometricDistributionImpl.getNumberOfSuccesses</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a411192e09b10244a87693c636cfa8dda" compoundref="_hypergeometric_distribution_impl_8java" startline="165" endline="167">org.apache.commons.math.distribution.HypergeometricDistributionImpl.getSampleSize</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1aafcfd653990d9b4b279ef3c875c459ab" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomainUpperBound</definition>
        <argsstring>(double p)</argsstring>
        <name>getDomainUpperBound</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1a916035a8a060fc4b055f7fadafa3a383">getDomainUpperBound</reimplements>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the domain value upper bound, based on <computeroutput>p</computeroutput>, used to bracket a PDF root.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired probability for the critical value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>domain value upper bound, i.e. P(X &lt; <emphasis>upper bound</emphasis>) &gt; <computeroutput>p</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" line="129" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" bodystart="129" bodyend="131"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a411192e09b10244a87693c636cfa8dda" compoundref="_hypergeometric_distribution_impl_8java" startline="165" endline="167">org.apache.commons.math.distribution.HypergeometricDistributionImpl.getSampleSize</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a9e322496fbde3696c0c62bd3dfdd78a0" compoundref="_hypergeometric_distribution_impl_8java" startline="149" endline="151">org.apache.commons.math.distribution.HypergeometricDistributionImpl.getNumberOfSuccesses</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The default implementation of <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution" kindref="compound">HypergeometricDistribution</ref>.</para><para><simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision:</title><para>480440 </para></simplesect>
<simplesect kind="rcs"><title>Date:</title><para>2006-11-29 00:14:12 -0700 (Wed, 29 Nov 2006) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="8395">
        <label>org.apache.commons.math.distribution.AbstractIntegerDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution"/>
        <childnode refid="8396" relation="public-inheritance">
        </childnode>
        <childnode refid="8399" relation="public-inheritance">
        </childnode>
        <childnode refid="8398" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8399">
        <label>org.apache.commons.math.distribution.IntegerDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution"/>
        <childnode refid="8400" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8398">
        <label>Serializable</label>
      </node>
      <node id="8396">
        <label>org.apache.commons.math.distribution.AbstractDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_distribution"/>
        <childnode refid="8397" relation="public-inheritance">
        </childnode>
        <childnode refid="8398" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8397">
        <label>org.apache.commons.math.distribution.Distribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution"/>
      </node>
      <node id="8394">
        <label>org.apache.commons.math.distribution.HypergeometricDistributionImpl</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl"/>
        <childnode refid="8395" relation="public-inheritance">
        </childnode>
        <childnode refid="8401" relation="public-inheritance">
        </childnode>
        <childnode refid="8398" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8401">
        <label>org.apache.commons.math.distribution.HypergeometricDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution"/>
        <childnode refid="8399" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8400">
        <label>org.apache.commons.math.distribution.DiscreteDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_discrete_distribution"/>
        <childnode refid="8397" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8403">
        <label>org.apache.commons.math.distribution.AbstractIntegerDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution"/>
        <childnode refid="8404" relation="public-inheritance">
        </childnode>
        <childnode refid="8407" relation="public-inheritance">
        </childnode>
        <childnode refid="8406" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8407">
        <label>org.apache.commons.math.distribution.IntegerDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution"/>
        <childnode refid="8408" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8406">
        <label>Serializable</label>
      </node>
      <node id="8404">
        <label>org.apache.commons.math.distribution.AbstractDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_distribution"/>
        <childnode refid="8405" relation="public-inheritance">
        </childnode>
        <childnode refid="8406" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8405">
        <label>org.apache.commons.math.distribution.Distribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution"/>
      </node>
      <node id="8402">
        <label>org.apache.commons.math.distribution.HypergeometricDistributionImpl</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl"/>
        <childnode refid="8403" relation="public-inheritance">
        </childnode>
        <childnode refid="8409" relation="public-inheritance">
        </childnode>
        <childnode refid="8406" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8409">
        <label>org.apache.commons.math.distribution.HypergeometricDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution"/>
        <childnode refid="8407" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8408">
        <label>org.apache.commons.math.distribution.DiscreteDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_discrete_distribution"/>
        <childnode refid="8405" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" line="31" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java" bodystart="29" bodyend="306"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_distribution_1a69b03d7cd00b00c946eea69dfa8da7ba" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>AbstractDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1a5319f9938a77a957c740bd552a2ce2ba" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>AbstractIntegerDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a996664cd1099336fc6b7e30b838a3448" prot="public" virt="virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>cumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1ab1cf216fde5141e5cc5a448bf387a8a1" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::AbstractIntegerDistribution."><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>cumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1a5a311468d6c2ba4d51710302f716afef" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::AbstractIntegerDistribution."><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>cumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1a8bae6edc0a95af6afaa6a09f6c0944ce" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::AbstractIntegerDistribution."><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>cumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a53973993770c69e2fd2264f8d337b969" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>getDomain</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1ad1890a8eb14776970d7564318170590a" prot="protected" virt="virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>getDomainLowerBound</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1aafcfd653990d9b4b279ef3c875c459ab" prot="protected" virt="virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>getDomainUpperBound</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1acca1a28151e3fba7898d1e443c5daf5c" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>getLowerDomain</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a9e322496fbde3696c0c62bd3dfdd78a0" prot="public" virt="virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>getNumberOfSuccesses</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1ae6dffe4089e331e66a329cefcdaa14ed" prot="public" virt="virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>getPopulationSize</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a411192e09b10244a87693c636cfa8dda" prot="public" virt="virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>getSampleSize</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a94b52485116f39339ee6ad069bd51b12" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>getUpperDomain</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1ac385fe505c98957200f3629b61af75b2" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>HypergeometricDistributionImpl</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a9697e88a4fd4ef895068cd2c942d5b9d" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>innerCumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1afc3955226e809146a1ff1e7f5d3945e5" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>inverseCumulativeProbability</name></member>
      <member refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution_1a1f81723addd210b0a5b69aa29611938e" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::IntegerDistribution."><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>inverseCumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a0c8350d9d1f67ea9ea8e02f82d96dd25" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>numberOfSuccesses</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a91b476f47f8bb778ee0baec3fb898024" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>populationSize</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a95c309e5d1871ab58c1ff4aefce82708" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>probability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a8532eefcbddb963a685a4b99a0cbc56b" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>probability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1a3535594dbf1de8fe562aa1a55ac6ae83" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::AbstractIntegerDistribution."><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>probability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1ae8f5cda873a35b51ed2c88a6f1410ead" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>sampleSize</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1afc5110f4b3e56bdc42fb5289aac12dab" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>serialVersionUID</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1ad21e2904414d8b4b21828062ff548771" prot="public" virt="virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>setNumberOfSuccesses</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1aab2b2256c1774df04133179f1ef061b0" prot="public" virt="virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>setPopulationSize</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a017af6f44f4a3037941247a6067263ab" prot="public" virt="virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>setSampleSize</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a22506ecec8d95318333a9d81e37fbe0b" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::HypergeometricDistributionImpl</scope><name>upperCumulativeProbability</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
