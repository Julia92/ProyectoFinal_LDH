<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function" kind="class" prot="public">
    <compoundname>org::apache::commons::math::analysis::PolynomialFunction</compoundname>
    <basecompoundref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_differentiable_univariate_real_function" prot="public" virt="non-virtual">org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Serializable</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1af4d2b76826db6ee166b19369b916cf4f" prot="private" static="yes" mutable="no">
        <type>final long</type>
        <definition>final long org.apache.commons.math.analysis.PolynomialFunction.serialVersionUID</definition>
        <argsstring></argsstring>
        <name>serialVersionUID</name>
        <initializer>= 3322454535052136809L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializable version identifier </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunction.java" line="32" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunction.java" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1aa1cb1f13288dfc0c3d58b58fb90dc389" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double org.apache.commons.math.analysis.PolynomialFunction.coefficients[]</definition>
        <argsstring>[]</argsstring>
        <name>coefficients</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The coefficients of the polynomial, ordered by degree <ndash/> i.e., coefficients[0] is the constant term and coefficients[n] is the coefficient of x^n where n is the degree of the polynomial. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunction.java" line="39" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunction.java" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1a62a61209b6c9b2b5fa075a6168141510" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction</definition>
        <argsstring>(double c[])</argsstring>
        <name>PolynomialFunction</name>
        <param>
          <type>double</type>
          <declname>c</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a polynomial with the given coefficients. The first element of the coefficients array is the constant term. Higher degree coefficients follow in sequence. The degree of the resulting polynomial is the length of the array minus 1. </para><para>The constructor makes a copy of the input array and assigns the copy to the coefficients property.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>polynominal coefficients </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NullPointerException</parametername>
</parameternamelist>
<parameterdescription>
<para>if c is null </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if c is empty </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunction.java" line="54" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunction.java" bodystart="54" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1a7f068272e3b1e2f7e7fd5b5dfa49aae5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.analysis.PolynomialFunction.value</definition>
        <argsstring>(double x)</argsstring>
        <name>value</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function_1a0e7a98f515a5fecfb77a21244e70b919">value</reimplements>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the value of the function for the given argument. </para><para>The value returned is <linebreak/>
 <computeroutput>coefficients[n] * x^n + ... + coefficients[1] * x + coefficients[0]</computeroutput> </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the argument for which the function value should be computed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the polynomial at the given point </para></simplesect>
<simplesect kind="see"><para><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function_1a0e7a98f515a5fecfb77a21244e70b919" kindref="member">UnivariateRealFunction::value(double)</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunction.java" line="74" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunction.java" bodystart="74" bodyend="76"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1adc6defe8b0df520441fc948c79e97e73" compoundref="_polynomial_function_8java" startline="112" endline="122">org.apache.commons.math.analysis.PolynomialFunction.evaluate</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1ad6bc7f460949342a24762cc81fde36a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.apache.commons.math.analysis.PolynomialFunction.degree</definition>
        <argsstring>()</argsstring>
        <name>degree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the degree of the polynomial</para><para><simplesect kind="return"><para>the degree of the polynomial </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunction.java" line="84" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunction.java" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1aebbe0547e1e350b2001119d3ccf9e131" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double[]</type>
        <definition>double [] org.apache.commons.math.analysis.PolynomialFunction.getCoefficients</definition>
        <argsstring>()</argsstring>
        <name>getCoefficients</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a copy of the coefficients array. </para><para>Changes made to the returned copy will not affect the coefficients of the polynomial.</para><para><simplesect kind="return"><para>a fresh copy of the coefficients array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunction.java" line="96" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunction.java" bodystart="96" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1ac713654e1455ea583aa7f32368401b90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function" kindref="compound">PolynomialFunction</ref></type>
        <definition>PolynomialFunction org.apache.commons.math.analysis.PolynomialFunction.polynomialDerivative</definition>
        <argsstring>()</argsstring>
        <name>polynomialDerivative</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the derivative as a PolynomialRealFunction</para><para><simplesect kind="return"><para>the derivative polynomial </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunction.java" line="152" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunction.java" bodystart="152" bodyend="154"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1a62a61209b6c9b2b5fa075a6168141510" compoundref="_polynomial_function_8java" startline="54" endline="61">org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1af1bcd1e613a49fe9c565399bbaf9afd9" compoundref="_polynomial_function_8java" startline="132" endline="145">org.apache.commons.math.analysis.PolynomialFunction.differentiate</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1a0f180307dd7b8b7c643d09b598eae39b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function" kindref="compound">UnivariateRealFunction</ref></type>
        <definition>UnivariateRealFunction org.apache.commons.math.analysis.PolynomialFunction.derivative</definition>
        <argsstring>()</argsstring>
        <name>derivative</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_differentiable_univariate_real_function_1a91eeed6dae14ca71a89c395d85386c2e">derivative</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the derivative as a <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function" kindref="compound">UnivariateRealFunction</ref></para><para><simplesect kind="return"><para>the derivative function </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunction.java" line="161" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunction.java" bodystart="161" bodyend="163"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1ac713654e1455ea583aa7f32368401b90" compoundref="_polynomial_function_8java" startline="152" endline="154">org.apache.commons.math.analysis.PolynomialFunction.polynomialDerivative</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1adc6defe8b0df520441fc948c79e97e73" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double org.apache.commons.math.analysis.PolynomialFunction.evaluate</definition>
        <argsstring>(double[] coefficients, double argument)</argsstring>
        <name>evaluate</name>
        <param>
          <type>double[]</type>
          <declname>coefficients</declname>
        </param>
        <param>
          <type>double</type>
          <declname>argument</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Uses Horner&apos;s Method to evaluate the polynomial with the given coefficients at the argument.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coefficients</parametername>
</parameternamelist>
<parameterdescription>
<para>the coefficients of the polynomial to evaluate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argument</parametername>
</parameternamelist>
<parameterdescription>
<para>the input value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the polynomial </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if coefficients is empty </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NullPointerException</parametername>
</parameternamelist>
<parameterdescription>
<para>if coefficients is null </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunction.java" line="112" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunction.java" bodystart="112" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1af1bcd1e613a49fe9c565399bbaf9afd9" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double[]</type>
        <definition>static double [] org.apache.commons.math.analysis.PolynomialFunction.differentiate</definition>
        <argsstring>(double[] coefficients)</argsstring>
        <name>differentiate</name>
        <param>
          <type>double[]</type>
          <declname>coefficients</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the coefficients of the derivative of the polynomial with the given coefficients.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coefficients</parametername>
</parameternamelist>
<parameterdescription>
<para>the coefficients of the polynomial to differentiate </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the coefficients of the derivative or null if coefficients has length 1. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if coefficients is empty </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NullPointerException</parametername>
</parameternamelist>
<parameterdescription>
<para>if coefficients is null </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunction.java" line="132" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunction.java" bodystart="132" bodyend="145"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Immutable representation of a real polynomial function with real coefficients. </para><para><ulink url="http://mathworld.wolfram.com/HornersMethod.html">Horner&apos;s Method</ulink> is used to evaluate the function.</para><para><simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision:</title><para>615734 </para></simplesect>
<simplesect kind="rcs"><title>Date:</title><para>2008-01-27 23:10:03 -0700 (Sun, 27 Jan 2008) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="9460">
        <label>Serializable</label>
      </node>
      <node id="9459">
        <label>org.apache.commons.math.analysis.UnivariateRealFunction</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function"/>
      </node>
      <node id="9458">
        <label>org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_differentiable_univariate_real_function"/>
        <childnode refid="9459" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9457">
        <label>org.apache.commons.math.analysis.PolynomialFunction</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function"/>
        <childnode refid="9458" relation="public-inheritance">
        </childnode>
        <childnode refid="9460" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9464">
        <label>Serializable</label>
      </node>
      <node id="9463">
        <label>org.apache.commons.math.analysis.UnivariateRealFunction</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function"/>
      </node>
      <node id="9462">
        <label>org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_differentiable_univariate_real_function"/>
        <childnode refid="9463" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9461">
        <label>org.apache.commons.math.analysis.PolynomialFunction</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function"/>
        <childnode refid="9462" relation="public-inheritance">
        </childnode>
        <childnode refid="9464" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunction.java" line="29" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunction.java" bodystart="29" bodyend="165"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1aa1cb1f13288dfc0c3d58b58fb90dc389" prot="private" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunction</scope><name>coefficients</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1ad6bc7f460949342a24762cc81fde36a8" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunction</scope><name>degree</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1a0f180307dd7b8b7c643d09b598eae39b" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunction</scope><name>derivative</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1af1bcd1e613a49fe9c565399bbaf9afd9" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunction</scope><name>differentiate</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1adc6defe8b0df520441fc948c79e97e73" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunction</scope><name>evaluate</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1aebbe0547e1e350b2001119d3ccf9e131" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunction</scope><name>getCoefficients</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1ac713654e1455ea583aa7f32368401b90" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunction</scope><name>polynomialDerivative</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1a62a61209b6c9b2b5fa075a6168141510" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunction</scope><name>PolynomialFunction</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1af4d2b76826db6ee166b19369b916cf4f" prot="private" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunction</scope><name>serialVersionUID</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_1a7f068272e3b1e2f7e7fd5b5dfa49aae5" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunction</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
