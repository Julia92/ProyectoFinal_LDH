<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl" kind="class" prot="public">
    <compoundname>org::apache::commons::math::distribution::FDistributionImpl</compoundname>
    <basecompoundref refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_continuous_distribution" prot="public" virt="non-virtual">org.apache.commons.math.distribution.AbstractContinuousDistribution</basecompoundref>
    <basecompoundref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution" prot="public" virt="non-virtual">org.apache.commons.math.distribution.FDistribution</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Serializable</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1afd5e326e892e7b75ba3e2604d6acfbd5" prot="private" static="yes" mutable="no">
        <type>final long</type>
        <definition>final long org.apache.commons.math.distribution.FDistributionImpl.serialVersionUID</definition>
        <argsstring></argsstring>
        <name>serialVersionUID</name>
        <initializer>= -8516354193418641566L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializable version identifier </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" line="35" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1a0ec6f2f24ce4c375253d284bc18cd41a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.FDistributionImpl.numeratorDegreesOfFreedom</definition>
        <argsstring></argsstring>
        <name>numeratorDegreesOfFreedom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The numerator degrees of freedom </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" line="38" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1a1fc8de3d551944ac9690003ec580faec" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.FDistributionImpl.denominatorDegreesOfFreedom</definition>
        <argsstring></argsstring>
        <name>denominatorDegreesOfFreedom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The numerator degrees of freedom </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" line="41" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1a688727c3016fc9275e22dc6d00b8ea0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.math.distribution.FDistributionImpl.FDistributionImpl</definition>
        <argsstring>(double numeratorDegreesOfFreedom, double denominatorDegreesOfFreedom)</argsstring>
        <name>FDistributionImpl</name>
        <param>
          <type>double</type>
          <declname>numeratorDegreesOfFreedom</declname>
        </param>
        <param>
          <type>double</type>
          <declname>denominatorDegreesOfFreedom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a F distribution using the given degrees of freedom. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numeratorDegreesOfFreedom</parametername>
</parameternamelist>
<parameterdescription>
<para>the numerator degrees of freedom. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>denominatorDegreesOfFreedom</parametername>
</parameternamelist>
<parameterdescription>
<para>the denominator degrees of freedom. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" line="48" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" bodystart="48" bodyend="53"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1a935e2c7950731f409414e42cb90cbc83" compoundref="_f_distribution_impl_8java" startline="154" endline="160">org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1acc4825ae662b94858b4d9ec7312d0fb1" compoundref="_f_distribution_impl_8java" startline="176" endline="182">org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1a1ea6a52e4e9dedb252bc1e29cba6d564" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability</definition>
        <argsstring>(double x)</argsstring>
        <name>cumulativeProbability</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_1a72faeb4e48d8607d791fcb3fa9afb0e3">cumulativeProbability</reimplements>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For this distribution, X, this method returns P(X &lt; x).</para><para>The implementation of this method is based on: <itemizedlist>
<listitem>
<para><ulink url="http://mathworld.wolfram.com/F-Distribution.html">F-Distribution</ulink>, equation (4). </para></listitem>
</itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value at which the CDF is evaluated. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CDF for this distribution. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the cumulative probability can not be computed due to convergence or other numerical errors. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" line="70" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" bodystart="70" bodyend="83"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1a7fca93b1ba19f48531e101238097a320" compoundref="_f_distribution_impl_8java" startline="166" endline="168">org.apache.commons.math.distribution.FDistributionImpl.getNumeratorDegreesOfFreedom</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1abad50ed209dfd9d7986ad238ac8ae884" compoundref="_f_distribution_impl_8java" startline="188" endline="190">org.apache.commons.math.distribution.FDistributionImpl.getDenominatorDegreesOfFreedom</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1a5c34dd083844d7fab23f272654baeff8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability</definition>
        <argsstring>(final double p)</argsstring>
        <name>inverseCumulativeProbability</name>
        <param>
          <type>final double</type>
          <declname>p</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For this distribution, X, this method returns the critical point x, such that P(X &lt; x) = <computeroutput>p</computeroutput>. </para><para>Returns 0 for p=0 and <computeroutput>Double.POSITIVE_INFINITY</computeroutput> for p=1.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired probability </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>x, such that P(X &lt; x) = <computeroutput>p</computeroutput> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the inverse cumulative probability can not be computed due to convergence or other numerical errors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>p</computeroutput> is not a valid probability. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" line="98" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" bodystart="98" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1a935e2c7950731f409414e42cb90cbc83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom</definition>
        <argsstring>(double degreesOfFreedom)</argsstring>
        <name>setNumeratorDegreesOfFreedom</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_1af86c70b0f4474d98acc796259b00b6bb">setNumeratorDegreesOfFreedom</reimplements>
        <param>
          <type>double</type>
          <declname>degreesOfFreedom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Modify the numerator degrees of freedom. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>degreesOfFreedom</parametername>
</parameternamelist>
<parameterdescription>
<para>the new numerator degrees of freedom. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>degreesOfFreedom</computeroutput> is not positive. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" line="154" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" bodystart="154" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1a7fca93b1ba19f48531e101238097a320" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.FDistributionImpl.getNumeratorDegreesOfFreedom</definition>
        <argsstring>()</argsstring>
        <name>getNumeratorDegreesOfFreedom</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_1abfe2780dda264a23577a477316b933bf">getNumeratorDegreesOfFreedom</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the numerator degrees of freedom. <simplesect kind="return"><para>the numerator degrees of freedom. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" line="166" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" bodystart="166" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1acc4825ae662b94858b4d9ec7312d0fb1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom</definition>
        <argsstring>(double degreesOfFreedom)</argsstring>
        <name>setDenominatorDegreesOfFreedom</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_1a764422b217938505cb7e47d5ff2b2cac">setDenominatorDegreesOfFreedom</reimplements>
        <param>
          <type>double</type>
          <declname>degreesOfFreedom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Modify the denominator degrees of freedom. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>degreesOfFreedom</parametername>
</parameternamelist>
<parameterdescription>
<para>the new denominator degrees of freedom. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>degreesOfFreedom</computeroutput> is not positive. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" line="176" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" bodystart="176" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1abad50ed209dfd9d7986ad238ac8ae884" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.FDistributionImpl.getDenominatorDegreesOfFreedom</definition>
        <argsstring>()</argsstring>
        <name>getDenominatorDegreesOfFreedom</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_1affaeccef35f937017dfc6cdb9f7f8be5">getDenominatorDegreesOfFreedom</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the denominator degrees of freedom. <simplesect kind="return"><para>the denominator degrees of freedom. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" line="188" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" bodystart="188" bodyend="190"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1adf458f6eeef1f4b8a4e1be3c9bcf0e9f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.FDistributionImpl.getDomainLowerBound</definition>
        <argsstring>(double p)</argsstring>
        <name>getDomainLowerBound</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_continuous_distribution_1a7c65e91d5a1eb53a5bd309b58e36e966">getDomainLowerBound</reimplements>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the domain value lower bound, based on <computeroutput>p</computeroutput>, used to bracket a CDF root. This method is used by <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_continuous_distribution_1a4b500e3d42f02fa1bd606196f404b61f" kindref="member">inverseCumulativeProbability(double)</ref> to find critical values.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired probability for the critical value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>domain value lower bound, i.e. P(X &lt; <emphasis>lower bound</emphasis>) &lt; <computeroutput>p</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" line="118" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1a373cadfcd03b695d5e5cb852bcbb2ba9" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.FDistributionImpl.getDomainUpperBound</definition>
        <argsstring>(double p)</argsstring>
        <name>getDomainUpperBound</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_continuous_distribution_1aeb69c1dd57e233b023edc88155108191">getDomainUpperBound</reimplements>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the domain value upper bound, based on <computeroutput>p</computeroutput>, used to bracket a CDF root. This method is used by <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_continuous_distribution_1a4b500e3d42f02fa1bd606196f404b61f" kindref="member">inverseCumulativeProbability(double)</ref> to find critical values.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired probability for the critical value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>domain value upper bound, i.e. P(X &lt; <emphasis>upper bound</emphasis>) &gt; <computeroutput>p</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" line="131" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1a7c745748e97edc5e897c5b55d23e2c9e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.FDistributionImpl.getInitialDomain</definition>
        <argsstring>(double p)</argsstring>
        <name>getInitialDomain</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_continuous_distribution_1a24d1238e49baef8a236e66c77ce0db3e">getInitialDomain</reimplements>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the initial domain value, based on <computeroutput>p</computeroutput>, used to bracket a CDF root. This method is used by <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_continuous_distribution_1a4b500e3d42f02fa1bd606196f404b61f" kindref="member">inverseCumulativeProbability(double)</ref> to find critical values.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired probability for the critical value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>initial domain value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" line="143" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" bodystart="143" bodyend="146"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1abad50ed209dfd9d7986ad238ac8ae884" compoundref="_f_distribution_impl_8java" startline="188" endline="190">org.apache.commons.math.distribution.FDistributionImpl.getDenominatorDegreesOfFreedom</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Default implementation of <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution" kindref="compound">org.apache.commons.math.distribution.FDistribution</ref>.</para><para><simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision:</title><para>619917 </para></simplesect>
<simplesect kind="rcs"><title>Date:</title><para>2008-02-08 08:44:11 -0700 (Fri, 08 Feb 2008) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="7962">
        <label>org.apache.commons.math.distribution.ContinuousDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_continuous_distribution"/>
        <childnode refid="7960" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7961">
        <label>Serializable</label>
      </node>
      <node id="7963">
        <label>org.apache.commons.math.distribution.FDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution"/>
        <childnode refid="7962" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7958">
        <label>org.apache.commons.math.distribution.AbstractContinuousDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_continuous_distribution"/>
        <childnode refid="7959" relation="public-inheritance">
        </childnode>
        <childnode refid="7962" relation="public-inheritance">
        </childnode>
        <childnode refid="7961" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7959">
        <label>org.apache.commons.math.distribution.AbstractDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_distribution"/>
        <childnode refid="7960" relation="public-inheritance">
        </childnode>
        <childnode refid="7961" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7957">
        <label>org.apache.commons.math.distribution.FDistributionImpl</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl"/>
        <childnode refid="7958" relation="public-inheritance">
        </childnode>
        <childnode refid="7963" relation="public-inheritance">
        </childnode>
        <childnode refid="7961" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7960">
        <label>org.apache.commons.math.distribution.Distribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7969">
        <label>org.apache.commons.math.distribution.ContinuousDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_continuous_distribution"/>
        <childnode refid="7967" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7968">
        <label>Serializable</label>
      </node>
      <node id="7970">
        <label>org.apache.commons.math.distribution.FDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution"/>
        <childnode refid="7969" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7965">
        <label>org.apache.commons.math.distribution.AbstractContinuousDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_continuous_distribution"/>
        <childnode refid="7966" relation="public-inheritance">
        </childnode>
        <childnode refid="7969" relation="public-inheritance">
        </childnode>
        <childnode refid="7968" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7966">
        <label>org.apache.commons.math.distribution.AbstractDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_distribution"/>
        <childnode refid="7967" relation="public-inheritance">
        </childnode>
        <childnode refid="7968" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7964">
        <label>org.apache.commons.math.distribution.FDistributionImpl</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl"/>
        <childnode refid="7965" relation="public-inheritance">
        </childnode>
        <childnode refid="7970" relation="public-inheritance">
        </childnode>
        <childnode refid="7968" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7967">
        <label>org.apache.commons.math.distribution.Distribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" line="32" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/FDistributionImpl.java" bodystart="30" bodyend="191"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_continuous_distribution_1ad2268d4983e173bb3628fba19d93b2e4" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::distribution::FDistributionImpl</scope><name>AbstractContinuousDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_distribution_1a69b03d7cd00b00c946eea69dfa8da7ba" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::distribution::FDistributionImpl</scope><name>AbstractDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1a1ea6a52e4e9dedb252bc1e29cba6d564" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::FDistributionImpl</scope><name>cumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_distribution_1a240f9e95109838d7a1dfb5af57c2ebd2" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::AbstractContinuousDistribution."><scope>org::apache::commons::math::distribution::FDistributionImpl</scope><name>cumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1a1fc8de3d551944ac9690003ec580faec" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::FDistributionImpl</scope><name>denominatorDegreesOfFreedom</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1a688727c3016fc9275e22dc6d00b8ea0a" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::FDistributionImpl</scope><name>FDistributionImpl</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1abad50ed209dfd9d7986ad238ac8ae884" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::FDistributionImpl</scope><name>getDenominatorDegreesOfFreedom</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1adf458f6eeef1f4b8a4e1be3c9bcf0e9f" prot="protected" virt="virtual"><scope>org::apache::commons::math::distribution::FDistributionImpl</scope><name>getDomainLowerBound</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1a373cadfcd03b695d5e5cb852bcbb2ba9" prot="protected" virt="virtual"><scope>org::apache::commons::math::distribution::FDistributionImpl</scope><name>getDomainUpperBound</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1a7c745748e97edc5e897c5b55d23e2c9e" prot="protected" virt="virtual"><scope>org::apache::commons::math::distribution::FDistributionImpl</scope><name>getInitialDomain</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1a7fca93b1ba19f48531e101238097a320" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::FDistributionImpl</scope><name>getNumeratorDegreesOfFreedom</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1a5c34dd083844d7fab23f272654baeff8" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::FDistributionImpl</scope><name>inverseCumulativeProbability</name></member>
      <member refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_continuous_distribution_1a4b500e3d42f02fa1bd606196f404b61f" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::ContinuousDistribution."><scope>org::apache::commons::math::distribution::FDistributionImpl</scope><name>inverseCumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1a0ec6f2f24ce4c375253d284bc18cd41a" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::FDistributionImpl</scope><name>numeratorDegreesOfFreedom</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1afd5e326e892e7b75ba3e2604d6acfbd5" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::FDistributionImpl</scope><name>serialVersionUID</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1acc4825ae662b94858b4d9ec7312d0fb1" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::FDistributionImpl</scope><name>setDenominatorDegreesOfFreedom</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution_impl_1a935e2c7950731f409414e42cb90cbc83" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::FDistributionImpl</scope><name>setNumeratorDegreesOfFreedom</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
