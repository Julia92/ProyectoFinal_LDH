<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl" kind="class" prot="public">
    <compoundname>org::apache::commons::math::distribution::ExponentialDistributionImpl</compoundname>
    <basecompoundref refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_continuous_distribution" prot="public" virt="non-virtual">org.apache.commons.math.distribution.AbstractContinuousDistribution</basecompoundref>
    <basecompoundref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution" prot="public" virt="non-virtual">org.apache.commons.math.distribution.ExponentialDistribution</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Serializable</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1a3b35900dbbab20cf624d3a9f99acbf2a" prot="private" static="yes" mutable="no">
        <type>final long</type>
        <definition>final long org.apache.commons.math.distribution.ExponentialDistributionImpl.serialVersionUID</definition>
        <argsstring></argsstring>
        <name>serialVersionUID</name>
        <initializer>= 2401296428283614780L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializable version identifier </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ExponentialDistributionImpl.java" line="32" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ExponentialDistributionImpl.java" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1a1eca5abafc87590c7e07c4b0658f18cb" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.ExponentialDistributionImpl.mean</definition>
        <argsstring></argsstring>
        <name>mean</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The mean of this distribution. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ExponentialDistributionImpl.java" line="35" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ExponentialDistributionImpl.java" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1a2587397edf8b22547e4a40b6805a603f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.math.distribution.ExponentialDistributionImpl.ExponentialDistributionImpl</definition>
        <argsstring>(double mean)</argsstring>
        <name>ExponentialDistributionImpl</name>
        <param>
          <type>double</type>
          <declname>mean</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a exponential distribution with the given mean. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mean</parametername>
</parameternamelist>
<parameterdescription>
<para>mean of this distribution. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ExponentialDistributionImpl.java" line="41" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ExponentialDistributionImpl.java" bodystart="41" bodyend="44"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1a1f7dd5713a9b916b86df751d996c8085" compoundref="_exponential_distribution_impl_8java" startline="51" endline="56">org.apache.commons.math.distribution.ExponentialDistributionImpl.setMean</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1a1f7dd5713a9b916b86df751d996c8085" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.math.distribution.ExponentialDistributionImpl.setMean</definition>
        <argsstring>(double mean)</argsstring>
        <name>setMean</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_1a9a67055cec7988efe701b1b11ddcf54e">setMean</reimplements>
        <param>
          <type>double</type>
          <declname>mean</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Modify the mean. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mean</parametername>
</parameternamelist>
<parameterdescription>
<para>the new mean. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>mean</computeroutput> is not positive. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ExponentialDistributionImpl.java" line="51" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ExponentialDistributionImpl.java" bodystart="51" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1af9024c2374cf6419174313ba12961195" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.ExponentialDistributionImpl.getMean</definition>
        <argsstring>()</argsstring>
        <name>getMean</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_1a7dd5946dc720be6c5050af745743b876">getMean</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the mean. <simplesect kind="return"><para>the mean. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ExponentialDistributionImpl.java" line="62" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ExponentialDistributionImpl.java" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1a86565d9908bcf576060a5146b97ea123" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.ExponentialDistributionImpl.cumulativeProbability</definition>
        <argsstring>(double x)</argsstring>
        <name>cumulativeProbability</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_1a72faeb4e48d8607d791fcb3fa9afb0e3">cumulativeProbability</reimplements>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref></exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For this disbution, X, this method returns P(X &lt; x).</para><para>The implementation of this method is based on: <itemizedlist>
<listitem>
<para><ulink url="http://mathworld.wolfram.com/ExponentialDistribution.html">Exponential Distribution</ulink>, equation (1). </para></listitem>
</itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value at which the CDF is evaluated. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CDF for this distribution. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the cumulative probability can not be computed due to convergence or other numerical errors. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ExponentialDistributionImpl.java" line="81" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ExponentialDistributionImpl.java" bodystart="81" bodyend="89"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1af9024c2374cf6419174313ba12961195" compoundref="_exponential_distribution_impl_8java" startline="62" endline="64">org.apache.commons.math.distribution.ExponentialDistributionImpl.getMean</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1a46ba7e868fce723ae7e5be2a3740286d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.ExponentialDistributionImpl.inverseCumulativeProbability</definition>
        <argsstring>(double p)</argsstring>
        <name>inverseCumulativeProbability</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_continuous_distribution_1a4b500e3d42f02fa1bd606196f404b61f">inverseCumulativeProbability</reimplements>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For this distribution, X, this method returns the critical point x, such that P(X &lt; x) = <computeroutput>p</computeroutput>. </para><para>Returns 0 for p=0 and <computeroutput>Double.POSITIVE_INFINITY</computeroutput> for p=1.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired probability </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>x, such that P(X &lt; x) = <computeroutput>p</computeroutput> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the inverse cumulative probability can not be computed due to convergence or other numerical errors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if p &lt; 0 or p &gt; 1. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ExponentialDistributionImpl.java" line="103" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ExponentialDistributionImpl.java" bodystart="103" bodyend="116"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1af9024c2374cf6419174313ba12961195" compoundref="_exponential_distribution_impl_8java" startline="62" endline="64">org.apache.commons.math.distribution.ExponentialDistributionImpl.getMean</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1a0975497fcb91594fce9bab973aec78a3" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.ExponentialDistributionImpl.getDomainLowerBound</definition>
        <argsstring>(double p)</argsstring>
        <name>getDomainLowerBound</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_continuous_distribution_1a7c65e91d5a1eb53a5bd309b58e36e966">getDomainLowerBound</reimplements>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the domain value lower bound, based on <computeroutput>p</computeroutput>, used to bracket a CDF root.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired probability for the critical value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>domain value lower bound, i.e. P(X &lt; <emphasis>lower bound</emphasis>) &lt; <computeroutput>p</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ExponentialDistributionImpl.java" line="126" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ExponentialDistributionImpl.java" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1ab171552c6abf05633a0843cbf276dcdb" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.ExponentialDistributionImpl.getDomainUpperBound</definition>
        <argsstring>(double p)</argsstring>
        <name>getDomainUpperBound</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_continuous_distribution_1aeb69c1dd57e233b023edc88155108191">getDomainUpperBound</reimplements>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the domain value upper bound, based on <computeroutput>p</computeroutput>, used to bracket a CDF root.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired probability for the critical value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>domain value upper bound, i.e. P(X &lt; <emphasis>upper bound</emphasis>) &gt; <computeroutput>p</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ExponentialDistributionImpl.java" line="138" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ExponentialDistributionImpl.java" bodystart="138" bodyend="149"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1af9024c2374cf6419174313ba12961195" compoundref="_exponential_distribution_impl_8java" startline="62" endline="64">org.apache.commons.math.distribution.ExponentialDistributionImpl.getMean</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1ad1e731bab297890aba0e1e76c409f473" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.ExponentialDistributionImpl.getInitialDomain</definition>
        <argsstring>(double p)</argsstring>
        <name>getInitialDomain</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_continuous_distribution_1a24d1238e49baef8a236e66c77ce0db3e">getInitialDomain</reimplements>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the initial domain value, based on <computeroutput>p</computeroutput>, used to bracket a CDF root.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired probability for the critical value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>initial domain value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ExponentialDistributionImpl.java" line="158" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ExponentialDistributionImpl.java" bodystart="158" bodyend="168"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1af9024c2374cf6419174313ba12961195" compoundref="_exponential_distribution_impl_8java" startline="62" endline="64">org.apache.commons.math.distribution.ExponentialDistributionImpl.getMean</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The default implementation of <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution" kindref="compound">ExponentialDistribution</ref>.</para><para><simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision:</title><para>617953 </para></simplesect>
<simplesect kind="rcs"><title>Date:</title><para>2008-02-02 22:54:00 -0700 (Sat, 02 Feb 2008) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="7800">
        <label>org.apache.commons.math.distribution.ContinuousDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_continuous_distribution"/>
        <childnode refid="7798" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7799">
        <label>Serializable</label>
      </node>
      <node id="7801">
        <label>org.apache.commons.math.distribution.ExponentialDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution"/>
        <childnode refid="7800" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7796">
        <label>org.apache.commons.math.distribution.AbstractContinuousDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_continuous_distribution"/>
        <childnode refid="7797" relation="public-inheritance">
        </childnode>
        <childnode refid="7800" relation="public-inheritance">
        </childnode>
        <childnode refid="7799" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7795">
        <label>org.apache.commons.math.distribution.ExponentialDistributionImpl</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl"/>
        <childnode refid="7796" relation="public-inheritance">
        </childnode>
        <childnode refid="7801" relation="public-inheritance">
        </childnode>
        <childnode refid="7799" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7797">
        <label>org.apache.commons.math.distribution.AbstractDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_distribution"/>
        <childnode refid="7798" relation="public-inheritance">
        </childnode>
        <childnode refid="7799" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7798">
        <label>org.apache.commons.math.distribution.Distribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7807">
        <label>org.apache.commons.math.distribution.ContinuousDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_continuous_distribution"/>
        <childnode refid="7805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7806">
        <label>Serializable</label>
      </node>
      <node id="7808">
        <label>org.apache.commons.math.distribution.ExponentialDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution"/>
        <childnode refid="7807" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7803">
        <label>org.apache.commons.math.distribution.AbstractContinuousDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_continuous_distribution"/>
        <childnode refid="7804" relation="public-inheritance">
        </childnode>
        <childnode refid="7807" relation="public-inheritance">
        </childnode>
        <childnode refid="7806" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7802">
        <label>org.apache.commons.math.distribution.ExponentialDistributionImpl</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl"/>
        <childnode refid="7803" relation="public-inheritance">
        </childnode>
        <childnode refid="7808" relation="public-inheritance">
        </childnode>
        <childnode refid="7806" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7804">
        <label>org.apache.commons.math.distribution.AbstractDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_distribution"/>
        <childnode refid="7805" relation="public-inheritance">
        </childnode>
        <childnode refid="7806" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7805">
        <label>org.apache.commons.math.distribution.Distribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ExponentialDistributionImpl.java" line="29" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/ExponentialDistributionImpl.java" bodystart="28" bodyend="169"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_continuous_distribution_1ad2268d4983e173bb3628fba19d93b2e4" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::distribution::ExponentialDistributionImpl</scope><name>AbstractContinuousDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_distribution_1a69b03d7cd00b00c946eea69dfa8da7ba" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::distribution::ExponentialDistributionImpl</scope><name>AbstractDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1a86565d9908bcf576060a5146b97ea123" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::ExponentialDistributionImpl</scope><name>cumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_distribution_1a240f9e95109838d7a1dfb5af57c2ebd2" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::AbstractContinuousDistribution."><scope>org::apache::commons::math::distribution::ExponentialDistributionImpl</scope><name>cumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1a2587397edf8b22547e4a40b6805a603f" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::ExponentialDistributionImpl</scope><name>ExponentialDistributionImpl</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1a0975497fcb91594fce9bab973aec78a3" prot="protected" virt="virtual"><scope>org::apache::commons::math::distribution::ExponentialDistributionImpl</scope><name>getDomainLowerBound</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1ab171552c6abf05633a0843cbf276dcdb" prot="protected" virt="virtual"><scope>org::apache::commons::math::distribution::ExponentialDistributionImpl</scope><name>getDomainUpperBound</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1ad1e731bab297890aba0e1e76c409f473" prot="protected" virt="virtual"><scope>org::apache::commons::math::distribution::ExponentialDistributionImpl</scope><name>getInitialDomain</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1af9024c2374cf6419174313ba12961195" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::ExponentialDistributionImpl</scope><name>getMean</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1a46ba7e868fce723ae7e5be2a3740286d" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::ExponentialDistributionImpl</scope><name>inverseCumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_continuous_distribution_1a3513ebf40ad2847679c81d160e16611c" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::AbstractContinuousDistribution."><scope>org::apache::commons::math::distribution::ExponentialDistributionImpl</scope><name>inverseCumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1a1eca5abafc87590c7e07c4b0658f18cb" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::ExponentialDistributionImpl</scope><name>mean</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1a3b35900dbbab20cf624d3a9f99acbf2a" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::ExponentialDistributionImpl</scope><name>serialVersionUID</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution_impl_1a1f7dd5713a9b916b86df751d996c8085" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::ExponentialDistributionImpl</scope><name>setMean</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
