.TH "desmoj.core.simulator.MultiUnitTimeFormatter" 3 "Wed Dec 4 2013" "Version 1.0" "Desmo-J" \" -*- nroff -*-
.ad l
.nh
.SH NAME
desmoj.core.simulator.MultiUnitTimeFormatter \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBdesmoj\&.core\&.simulator\&.TimeFormatter\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMultiUnitTimeFormatter\fP ()"
.br
.ti -1c
.RI "\fBMultiUnitTimeFormatter\fP (TimeUnit coarsestUnit, TimeUnit finestUnit)"
.br
.ti -1c
.RI "\fBMultiUnitTimeFormatter\fP (TimeUnit coarsestUnit, TimeUnit finestUnit, char separator)"
.br
.ti -1c
.RI "\fBMultiUnitTimeFormatter\fP (TimeUnit coarsestUnit, TimeUnit finestUnit, char separator, String unitString)"
.br
.ti -1c
.RI "String \fBbuildTimeString\fP (\fBTimeInstant\fP instant)"
.br
.ti -1c
.RI "String \fBbuildTimeString\fP (\fBTimeSpan\fP span)"
.br
.ti -1c
.RI "String \fBgetUnit\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Use this class to format \fBTimeSpan\fP and \fBTimeInstant\fP objects like in the following examples: 59 Minutes, 28 Seconds, and 548 Milliseconds could be formatted like O:59:28:548 or 59:28 or 59:28:548:000:000 or 0\&.59\&.28\&.
.PP
\fBVersion:\fP
.RS 4
DESMO-J, Ver\&. 2\&.4\&.0 copyright (c) 2013 
.RE
.PP
\fBAuthor:\fP
.RS 4
Felix Klueckmann 
.PP
.nf
    Licensed under the Apache License, Version 2.0 (the "License"); you
    may not use this file except in compliance with the License. You may
    obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
    implied. See the License for the specific language governing
    permissions and limitations under the License.
.fi
.PP
 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "desmoj\&.core\&.simulator\&.MultiUnitTimeFormatter\&.MultiUnitTimeFormatter ()"
This is a shortcut constructor for a \fBMultiUnitTimeFormatter\fP\&. The coarsest TimeUnit is HOURS and the finest TimeUnit is MILLISECONDS, so 30 Minutes and 5 Seconds would be 0:30:05:000\&. 
.SS "desmoj\&.core\&.simulator\&.MultiUnitTimeFormatter\&.MultiUnitTimeFormatter (TimeUnitcoarsestUnit, TimeUnitfinestUnit)"
This is a constructor for a \fBMultiUnitTimeFormatter\fP\&. 30 Minutes and 5 Seconds would be 0:30:05:000 if the coarsest TimeUnit is HOURS and the finest TimeUnit is MILLISECONDS\&. It would be 30:05 if the coarsest TimeUnit is MINUTES and the finest is SECONDS
.PP
\fBParameters:\fP
.RS 4
\fIcoarsestUnit\fP TimeUnit: The coarsest TimeUnit
.br
\fIfinestUnit\fP TimeUnit: The finest TimeUnit 
.RE
.PP

.SS "desmoj\&.core\&.simulator\&.MultiUnitTimeFormatter\&.MultiUnitTimeFormatter (TimeUnitcoarsestUnit, TimeUnitfinestUnit, charseparator)"
Use this constructor for a \fBMultiUnitTimeFormatter\fP to choose a different separator than the default separator ':'\&. 30 Minutes and 5 Seconds would be 0:30:05:000 if the coarsest TimeUnit is HOURS and the finest TimeUnit is MILLISECONDS\&. It would be 30:05 if the coarsest TimeUnit is MINUTES and the finest is SECONDS\&.
.PP
\fBParameters:\fP
.RS 4
\fIcoarsestUnit\fP TimeUnit: The coarsest TimeUnit
.br
\fIfinestUnit\fP TimeUnit: The finest TimeUnit 
.br
\fIseparator\fP char: The separator used to separate the TimeUnits\&. 
.RE
.PP

.SS "desmoj\&.core\&.simulator\&.MultiUnitTimeFormatter\&.MultiUnitTimeFormatter (TimeUnitcoarsestUnit, TimeUnitfinestUnit, charseparator, StringunitString)"
Use this constructor for a \fBMultiUnitTimeFormatter\fP to choose a different separator than the default separator ':'\&. 30 Minutes and 5 Seconds would be 0:30:05:000 if the coarsest TimeUnit is HOURS and the finest TimeUnit is MILLISECONDS\&. It would be 30:05 if the coarsest TimeUnit is MINUTES and the finest is SECONDS\&.
.PP
\fBParameters:\fP
.RS 4
\fIcoarsestUnit\fP TimeUnit: The coarsest TimeUnit
.br
\fIfinestUnit\fP TimeUnit: The finest TimeUnit 
.br
\fIseparator\fP char: The separator used to separate the TimeUnits\&. 
.br
\fIunitString\fP String: The String representing the time units in a custom way (will be built if set to \fCnull\fP) 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "String desmoj\&.core\&.simulator\&.MultiUnitTimeFormatter\&.buildTimeString (\fBTimeInstant\fPinstant)"
Returns the String-Representation of the given \fBTimeInstant\fP\&. 
.PP
Implements \fBdesmoj\&.core\&.simulator\&.TimeFormatter\fP\&.
.SS "String desmoj\&.core\&.simulator\&.MultiUnitTimeFormatter\&.buildTimeString (\fBTimeSpan\fPspan)"
Returns the String-Representation of the given \fBTimeSpan\fP\&. 
.PP
Implements \fBdesmoj\&.core\&.simulator\&.TimeFormatter\fP\&.
.SS "String desmoj\&.core\&.simulator\&.MultiUnitTimeFormatter\&.getUnit ()"
The units used to format time span and time instants\&.
.PP
\fBReturns:\fP
.RS 4
String: The description of the smallest time unit or all time units\&. 
.RE
.PP

.PP
Implements \fBdesmoj\&.core\&.simulator\&.TimeFormatter\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Desmo-J from the source code\&.
