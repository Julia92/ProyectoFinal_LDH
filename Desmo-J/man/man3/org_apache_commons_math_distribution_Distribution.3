.TH "org.apache.commons.math.distribution.Distribution" 3 "Wed Dec 4 2013" "Version 1.0" "Desmo-J" \" -*- nroff -*-
.ad l
.nh
.SH NAME
org.apache.commons.math.distribution.Distribution \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBorg\&.apache\&.commons\&.math\&.distribution\&.AbstractDistribution\fP, \fBorg\&.apache\&.commons\&.math\&.distribution\&.ContinuousDistribution\fP, and \fBorg\&.apache\&.commons\&.math\&.distribution\&.DiscreteDistribution\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "double \fBcumulativeProbability\fP (double x)  throws MathException"
.br
.ti -1c
.RI "double \fBcumulativeProbability\fP (double x0, double x1)  throws MathException"
.br
.in -1c
.SH "Detailed Description"
.PP 
Base interface for probability distributions\&.
.PP
\fBVersion:\fP
.RS 4
.RE
.PP
\fBRevision:\fP
.RS 4
480440 
.RE
.PP
\fBDate:\fP
.RS 4
2006-11-29 00:14:12 -0700 (Wed, 29 Nov 2006) 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "double org\&.apache\&.commons\&.math\&.distribution\&.Distribution\&.cumulativeProbability (doublex) throws \fBMathException\fP"
For a random variable X whose values are distributed according to this distribution, this method returns P(X  x)\&. In other words, this method represents the (cumulative) distribution function, or CDF, for this distribution\&.
.PP
\fBParameters:\fP
.RS 4
\fIx\fP the value at which the distribution function is evaluated\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
the probability that a random variable with this distribution takes a value less than or equal to \fCx\fP 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBMathException\fP\fP if the cumulative probability can not be computed due to convergence or other numerical errors\&. 
.RE
.PP

.PP
Implemented in \fBorg\&.apache\&.commons\&.math\&.distribution\&.NormalDistributionImpl\fP, \fBorg\&.apache\&.commons\&.math\&.distribution\&.ChiSquaredDistributionImpl\fP, \fBorg\&.apache\&.commons\&.math\&.distribution\&.ExponentialDistributionImpl\fP, \fBorg\&.apache\&.commons\&.math\&.distribution\&.TDistributionImpl\fP, \fBorg\&.apache\&.commons\&.math\&.distribution\&.FDistributionImpl\fP, \fBorg\&.apache\&.commons\&.math\&.distribution\&.GammaDistributionImpl\fP, \fBorg\&.apache\&.commons\&.math\&.distribution\&.CauchyDistributionImpl\fP, \fBorg\&.apache\&.commons\&.math\&.distribution\&.AbstractIntegerDistribution\fP, and \fBorg\&.apache\&.commons\&.math\&.distribution\&.WeibullDistributionImpl\fP\&.
.SS "double org\&.apache\&.commons\&.math\&.distribution\&.Distribution\&.cumulativeProbability (doublex0, doublex1) throws \fBMathException\fP"
For a random variable X whose values are distributed according to this distribution, this method returns P(x0  X  x1)\&.
.PP
\fBParameters:\fP
.RS 4
\fIx0\fP the (inclusive) lower bound 
.br
\fIx1\fP the (inclusive) upper bound 
.RE
.PP
\fBReturns:\fP
.RS 4
the probability that a random variable with this distribution will take a value between \fCx0\fP and \fCx1\fP, including the endpoints 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBMathException\fP\fP if the cumulative probability can not be computed due to convergence or other numerical errors\&. 
.br
\fIIllegalArgumentException\fP if \fCx0 > x1\fP 
.RE
.PP

.PP
Implemented in \fBorg\&.apache\&.commons\&.math\&.distribution\&.AbstractIntegerDistribution\fP, and \fBorg\&.apache\&.commons\&.math\&.distribution\&.AbstractDistribution\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Desmo-J from the source code\&.
