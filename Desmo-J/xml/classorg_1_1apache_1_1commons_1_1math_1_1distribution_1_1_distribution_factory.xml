<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory" kind="class" prot="public" abstract="yes">
    <compoundname>org::apache::commons::math::distribution::DistributionFactory</compoundname>
    <derivedcompoundref refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl" prot="public" virt="non-virtual">org.apache.commons.math.distribution.DistributionFactoryImpl</derivedcompoundref>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a86d67e335bb2b4f962c8beb95c11187f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.math.distribution.DistributionFactory.DistributionFactory</definition>
        <argsstring>()</argsstring>
        <name>DistributionFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactory.java" line="53" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactory.java" bodystart="53" bodyend="55"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1ac5ecf710da378fd5f429237814de2eed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory" kindref="compound">DistributionFactory</ref></type>
        <definition>static DistributionFactory org.apache.commons.math.distribution.DistributionFactory.newInstance</definition>
        <argsstring>()</argsstring>
        <name>newInstance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an instance of a <computeroutput><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory" kindref="compound">DistributionFactory</ref></computeroutput> <simplesect kind="return"><para>a new factory. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactory.java" line="61" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactory.java" bodystart="61" bodyend="63"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1abe6daeb2e12fd174de0efa4d864e48e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_binomial_distribution" kindref="compound">BinomialDistribution</ref></type>
        <definition>abstract BinomialDistribution org.apache.commons.math.distribution.DistributionFactory.createBinomialDistribution</definition>
        <argsstring>(int numberOfTrials, double probabilityOfSuccess)</argsstring>
        <name>createBinomialDistribution</name>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1af84f352435509d29b4d9ff0f064d345c">createBinomialDistribution</reimplementedby>
        <param>
          <type>int</type>
          <declname>numberOfTrials</declname>
        </param>
        <param>
          <type>double</type>
          <declname>probabilityOfSuccess</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a binomial distribution with the given number of trials and probability of success.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numberOfTrials</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of trials. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>probabilityOfSuccess</parametername>
</parameternamelist>
<parameterdescription>
<para>the probability of success </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new binomial distribution </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactory.java" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a979bc5a69fb67b1e6e04b3ad3020c2a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution" kindref="compound">PascalDistribution</ref></type>
        <definition>PascalDistribution org.apache.commons.math.distribution.DistributionFactory.createPascalDistribution</definition>
        <argsstring>(int numberOfSuccesses, double probabilityOfSuccess)</argsstring>
        <name>createPascalDistribution</name>
        <param>
          <type>int</type>
          <declname>numberOfSuccesses</declname>
        </param>
        <param>
          <type>double</type>
          <declname>probabilityOfSuccess</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a Pascal distribution with the given number of successes and probability of success.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numberOfSuccesses</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of successes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>probabilityOfSuccess</parametername>
</parameternamelist>
<parameterdescription>
<para>the probability of success </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new Pascal distribution </para></simplesect>
<simplesect kind="since"><para>1.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactory.java" line="85" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactory.java" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1adf244f05eb96596801e3876544b17fba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_cauchy_distribution" kindref="compound">CauchyDistribution</ref></type>
        <definition>CauchyDistribution org.apache.commons.math.distribution.DistributionFactory.createCauchyDistribution</definition>
        <argsstring>(double median, double scale)</argsstring>
        <name>createCauchyDistribution</name>
        <param>
          <type>double</type>
          <declname>median</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new cauchy distribution with the given median and scale. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>median</parametername>
</parameternamelist>
<parameterdescription>
<para>the median of the distribution </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>the scale </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new cauchy distribution </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactory.java" line="97" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactory.java" bodystart="97" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a0bc450073e44b6e72327d8c1ad1a5956" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution" kindref="compound">ChiSquaredDistribution</ref></type>
        <definition>abstract ChiSquaredDistribution org.apache.commons.math.distribution.DistributionFactory.createChiSquareDistribution</definition>
        <argsstring>(double degreesOfFreedom)</argsstring>
        <name>createChiSquareDistribution</name>
        <param>
          <type>double</type>
          <declname>degreesOfFreedom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new chi-square distribution with the given degrees of freedom.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>degreesOfFreedom</parametername>
</parameternamelist>
<parameterdescription>
<para>degrees of freedom </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new chi-square distribution </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactory.java" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a7bde34c696535769b4a8b02c7d9c92e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_exponential_distribution" kindref="compound">ExponentialDistribution</ref></type>
        <definition>abstract ExponentialDistribution org.apache.commons.math.distribution.DistributionFactory.createExponentialDistribution</definition>
        <argsstring>(double mean)</argsstring>
        <name>createExponentialDistribution</name>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1a1196dceb3d543dc258dd0a1aa5ca92cf">createExponentialDistribution</reimplementedby>
        <param>
          <type>double</type>
          <declname>mean</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new exponential distribution with the given degrees of freedom.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mean</parametername>
</parameternamelist>
<parameterdescription>
<para>mean </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new exponential distribution </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactory.java" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a0fd2cf0719e62585b5ea6030868c34fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_f_distribution" kindref="compound">FDistribution</ref></type>
        <definition>abstract FDistribution org.apache.commons.math.distribution.DistributionFactory.createFDistribution</definition>
        <argsstring>(double numeratorDegreesOfFreedom, double denominatorDegreesOfFreedom)</argsstring>
        <name>createFDistribution</name>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1ac29564f013086e78e435ace0fc931033">createFDistribution</reimplementedby>
        <param>
          <type>double</type>
          <declname>numeratorDegreesOfFreedom</declname>
        </param>
        <param>
          <type>double</type>
          <declname>denominatorDegreesOfFreedom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new F-distribution with the given degrees of freedom.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numeratorDegreesOfFreedom</parametername>
</parameternamelist>
<parameterdescription>
<para>numerator degrees of freedom </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>denominatorDegreesOfFreedom</parametername>
</parameternamelist>
<parameterdescription>
<para>denominator degrees of freedom </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new F-distribution </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactory.java" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a32a5a2820ba7cc0ccb64ef44d016a3ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_gamma_distribution" kindref="compound">GammaDistribution</ref></type>
        <definition>abstract GammaDistribution org.apache.commons.math.distribution.DistributionFactory.createGammaDistribution</definition>
        <argsstring>(double alpha, double beta)</argsstring>
        <name>createGammaDistribution</name>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1a967938ad63c4ce160e0421a24844fe69">createGammaDistribution</reimplementedby>
        <param>
          <type>double</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new gamma distribution with the given shape and scale parameters.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>the shape parameter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beta</parametername>
</parameternamelist>
<parameterdescription>
<para>the scale parameter</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new gamma distribution </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactory.java" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a10af6be90270681365d0422d0c00a073" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_t_distribution" kindref="compound">TDistribution</ref></type>
        <definition>abstract TDistribution org.apache.commons.math.distribution.DistributionFactory.createTDistribution</definition>
        <argsstring>(double degreesOfFreedom)</argsstring>
        <name>createTDistribution</name>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1af54e0301ade4c6fe4c63683ca30717b8">createTDistribution</reimplementedby>
        <param>
          <type>double</type>
          <declname>degreesOfFreedom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new t distribution with the given degrees of freedom.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>degreesOfFreedom</parametername>
</parameternamelist>
<parameterdescription>
<para>degrees of freedom </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new t distribution </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactory.java" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a7975af936a0c7caeabfbaa9d86b30296" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution" kindref="compound">HypergeometricDistribution</ref></type>
        <definition>abstract HypergeometricDistribution org.apache.commons.math.distribution.DistributionFactory.createHypergeometricDistribution</definition>
        <argsstring>(int populationSize, int numberOfSuccesses, int sampleSize)</argsstring>
        <name>createHypergeometricDistribution</name>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1afb26406212d11876503052a8cbfe4eb6">createHypergeometricDistribution</reimplementedby>
        <param>
          <type>int</type>
          <declname>populationSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numberOfSuccesses</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sampleSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new hypergeometric distribution with the given the population size, the number of successes in the population, and the sample size.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>populationSize</parametername>
</parameternamelist>
<parameterdescription>
<para>the population size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numberOfSuccesses</parametername>
</parameternamelist>
<parameterdescription>
<para>number of successes in the population </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sampleSize</parametername>
</parameternamelist>
<parameterdescription>
<para>the sample size </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new hypergeometric desitribution </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactory.java" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a2487b1cc8ef62f9faac55d335540198e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_normal_distribution" kindref="compound">NormalDistribution</ref></type>
        <definition>abstract NormalDistribution org.apache.commons.math.distribution.DistributionFactory.createNormalDistribution</definition>
        <argsstring>(double mean, double sd)</argsstring>
        <name>createNormalDistribution</name>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1a039c15b625eaed821de8c6eca9f48636">createNormalDistribution</reimplementedby>
        <param>
          <type>double</type>
          <declname>mean</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new normal distribution with the given mean and standard deviation.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mean</parametername>
</parameternamelist>
<parameterdescription>
<para>the mean of the distribution </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sd</parametername>
</parameternamelist>
<parameterdescription>
<para>standard deviation </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new normal distribution </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactory.java" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a7f73fce12eeca88fce51f9e9026db268" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_normal_distribution" kindref="compound">NormalDistribution</ref></type>
        <definition>abstract NormalDistribution org.apache.commons.math.distribution.DistributionFactory.createNormalDistribution</definition>
        <argsstring>()</argsstring>
        <name>createNormalDistribution</name>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1a0d8af5fc978e1ad2d725e9c22bc25cb8">createNormalDistribution</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new normal distribution with mean zero and standard deviation one.</para><para><simplesect kind="return"><para>a new normal distribution. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactory.java" line="181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a78c33144a92f40738963a967e6c0ab9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution" kindref="compound">PoissonDistribution</ref></type>
        <definition>abstract PoissonDistribution org.apache.commons.math.distribution.DistributionFactory.createPoissonDistribution</definition>
        <argsstring>(double lambda)</argsstring>
        <name>createPoissonDistribution</name>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl_1a7311b48b88255d712f7efe317e0c41ba">createPoissonDistribution</reimplementedby>
        <param>
          <type>double</type>
          <declname>lambda</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new Poisson distribution with poisson parameter lambda.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lambda</parametername>
</parameternamelist>
<parameterdescription>
<para>poisson parameter </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new poisson distribution. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactory.java" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a41d656cdd8d9c9dc4b43f54e3b649719" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_weibull_distribution" kindref="compound">WeibullDistribution</ref></type>
        <definition>WeibullDistribution org.apache.commons.math.distribution.DistributionFactory.createWeibullDistribution</definition>
        <argsstring>(double alpha, double beta)</argsstring>
        <name>createWeibullDistribution</name>
        <param>
          <type>double</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new Weibull distribution with the given shape and scale parameters.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>the shape parameter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beta</parametername>
</parameternamelist>
<parameterdescription>
<para>the scale parameter. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new Weibull distribution. </para></simplesect>
<simplesect kind="since"><para>1.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactory.java" line="201" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactory.java" bodystart="201" bodyend="205"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This factory provids the means to create common statistical distributions. The following distributions are supported: <itemizedlist>
<listitem>
<para>Binomial </para></listitem>
<listitem>
<para>Cauchy </para></listitem>
<listitem>
<para>Chi-Squared </para></listitem>
<listitem>
<para>Exponential </para></listitem>
<listitem>
<para>F </para></listitem>
<listitem>
<para>Gamma </para></listitem>
<listitem>
<para>HyperGeometric </para></listitem>
<listitem>
<para>Poisson </para></listitem>
<listitem>
<para>Normal </para></listitem>
<listitem>
<para>Student&apos;s t </para></listitem>
<listitem>
<para>Weibull </para></listitem>
<listitem>
<para>Pascal </para></listitem>
</itemizedlist>
</para><para>Common usage:<preformatted>
<ref refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory" kindref="compound">DistributionFactory</ref> factory = <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1ac5ecf710da378fd5f429237814de2eed" kindref="member">DistributionFactory.newInstance()</ref>;</preformatted></para><para><preformatted>// create a Chi-Square distribution with 5 degrees of freedom.
<ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_chi_squared_distribution" kindref="compound">ChiSquaredDistribution</ref> chi = factory.createChiSquareDistribution(5.0);
</preformatted></para><para><simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision:</title><para>545192 </para></simplesect>
<simplesect kind="rcs"><title>Date:</title><para>2007-06-07 07:35:04 -0700 (Thu, 07 Jun 2007) </para></simplesect>
<xrefsect id="deprecated_1_deprecated000065"><xreftitle>Deprecated</xreftitle><xrefdescription><para>pluggability of distribution instances is now provided through constructors and setters. </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <inheritancegraph>
      <node id="7254">
        <label>org.apache.commons.math.distribution.DistributionFactory</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory"/>
      </node>
      <node id="7255">
        <label>org.apache.commons.math.distribution.DistributionFactoryImpl</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_impl"/>
        <childnode refid="7254" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactory.java" line="49" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/DistributionFactory.java" bodystart="49" bodyend="206"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1abe6daeb2e12fd174de0efa4d864e48e8" prot="public" virt="pure-virtual"><scope>org::apache::commons::math::distribution::DistributionFactory</scope><name>createBinomialDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1adf244f05eb96596801e3876544b17fba" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::DistributionFactory</scope><name>createCauchyDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a0bc450073e44b6e72327d8c1ad1a5956" prot="public" virt="pure-virtual"><scope>org::apache::commons::math::distribution::DistributionFactory</scope><name>createChiSquareDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a7bde34c696535769b4a8b02c7d9c92e2" prot="public" virt="pure-virtual"><scope>org::apache::commons::math::distribution::DistributionFactory</scope><name>createExponentialDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a0fd2cf0719e62585b5ea6030868c34fc" prot="public" virt="pure-virtual"><scope>org::apache::commons::math::distribution::DistributionFactory</scope><name>createFDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a32a5a2820ba7cc0ccb64ef44d016a3ee" prot="public" virt="pure-virtual"><scope>org::apache::commons::math::distribution::DistributionFactory</scope><name>createGammaDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a7975af936a0c7caeabfbaa9d86b30296" prot="public" virt="pure-virtual"><scope>org::apache::commons::math::distribution::DistributionFactory</scope><name>createHypergeometricDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a2487b1cc8ef62f9faac55d335540198e" prot="public" virt="pure-virtual"><scope>org::apache::commons::math::distribution::DistributionFactory</scope><name>createNormalDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a7f73fce12eeca88fce51f9e9026db268" prot="public" virt="pure-virtual"><scope>org::apache::commons::math::distribution::DistributionFactory</scope><name>createNormalDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a979bc5a69fb67b1e6e04b3ad3020c2a6" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::DistributionFactory</scope><name>createPascalDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a78c33144a92f40738963a967e6c0ab9b" prot="public" virt="pure-virtual"><scope>org::apache::commons::math::distribution::DistributionFactory</scope><name>createPoissonDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a10af6be90270681365d0422d0c00a073" prot="public" virt="pure-virtual"><scope>org::apache::commons::math::distribution::DistributionFactory</scope><name>createTDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a41d656cdd8d9c9dc4b43f54e3b649719" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::DistributionFactory</scope><name>createWeibullDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1a86d67e335bb2b4f962c8beb95c11187f" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::distribution::DistributionFactory</scope><name>DistributionFactory</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_factory_1ac5ecf710da378fd5f429237814de2eed" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::DistributionFactory</scope><name>newInstance</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
