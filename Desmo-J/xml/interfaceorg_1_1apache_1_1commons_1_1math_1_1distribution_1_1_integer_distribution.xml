<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution" kind="interface" prot="public">
    <compoundname>org::apache::commons::math::distribution::IntegerDistribution</compoundname>
    <basecompoundref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_discrete_distribution" prot="public" virt="non-virtual">org.apache.commons.math.distribution.DiscreteDistribution</basecompoundref>
    <derivedcompoundref refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution" prot="public" virt="non-virtual">org.apache.commons.math.distribution.AbstractIntegerDistribution</derivedcompoundref>
    <derivedcompoundref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_binomial_distribution" prot="public" virt="non-virtual">org.apache.commons.math.distribution.BinomialDistribution</derivedcompoundref>
    <derivedcompoundref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution" prot="public" virt="non-virtual">org.apache.commons.math.distribution.HypergeometricDistribution</derivedcompoundref>
    <derivedcompoundref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution" prot="public" virt="non-virtual">org.apache.commons.math.distribution.PascalDistribution</derivedcompoundref>
    <derivedcompoundref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution" prot="public" virt="non-virtual">org.apache.commons.math.distribution.PoissonDistribution</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution_1ae20d4195b3f5ab562d332070c82c4cdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.IntegerDistribution.probability</definition>
        <argsstring>(int x)</argsstring>
        <name>probability</name>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a987b9b587a890441e5798c31f8abf118">probability</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a5b51f3c737cd1c4adaf08e4b637d4fdd">probability</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_binomial_distribution_impl_1ae25827098b7bfffb75dcd82254f9cf7b">probability</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a95c309e5d1871ab58c1ff4aefce82708">probability</reimplementedby>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For a random variable X whose values are distributed according to this distribution, this method returns P(X = x). In other words, this method represents the probability mass function for the distribution.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value at which the probability density function is evaluated. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the probability density function at x </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/IntegerDistribution.java" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution_1ac11cf6252d18f1bd38d5284dfb519db9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.IntegerDistribution.cumulativeProbability</definition>
        <argsstring>(int x)</argsstring>
        <name>cumulativeProbability</name>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl_1a996664cd1099336fc6b7e30b838a3448">cumulativeProbability</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1af64ac51473a3452bf6c2d4cc95b470c6">cumulativeProbability</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl_1a892f522be5fe3e199d1ae29571a1f99c">cumulativeProbability</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a810842075bcbce5ae8a836c6df85fbb7">cumulativeProbability</reimplementedby>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_binomial_distribution_impl_1a2db67eadba2300e50e03f531a0eccd27">cumulativeProbability</reimplementedby>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref></exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For a random variable X whose values are distributed according to this distribution, this method returns P(X <le/> x). In other words, this method represents the probability distribution function, or PDF for the distribution.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value at which the PDF is evaluated. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>PDF for this distribution. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the cumulative probability can not be computed due to convergence or other numerical errors. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/IntegerDistribution.java" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution_1a1bca6cae3ea19c6a95a9565e261ee497" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.IntegerDistribution.cumulativeProbability</definition>
        <argsstring>(int x0, int x1)</argsstring>
        <name>cumulativeProbability</name>
        <reimplementedby refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1a8bae6edc0a95af6afaa6a09f6c0944ce">cumulativeProbability</reimplementedby>
        <param>
          <type>int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref></exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For this distribution, X, this method returns P(x0 <le/> X <le/> x1). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x0</parametername>
</parameternamelist>
<parameterdescription>
<para>the inclusive, lower bound </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x1</parametername>
</parameternamelist>
<parameterdescription>
<para>the inclusive, upper bound </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the cumulative probability. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the cumulative probability can not be computed due to convergence or other numerical errors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if x0 &gt; x1 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/IntegerDistribution.java" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution_1a1f81723addd210b0a5b69aa29611938e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int org.apache.commons.math.distribution.IntegerDistribution.inverseCumulativeProbability</definition>
        <argsstring>(double p)</argsstring>
        <name>inverseCumulativeProbability</name>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref></exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For this distribution, X, this method returns the largest x such that P(X <le/> x) &lt;= p. </para><para>Note that this definition implies: <itemizedlist>
<listitem>
<para>If there is a minimum value, <computeroutput>m</computeroutput>, with postive probablility under (the density of) X, then <computeroutput>m - 1</computeroutput> is returned by <computeroutput>inverseCumulativeProbability(0).</computeroutput> If there is no such value <computeroutput>m, Integer.MIN_VALUE</computeroutput> is returned. </para></listitem>
<listitem>
<para>If there is a maximum value, <computeroutput>M</computeroutput>, such that P(X <le/> M) =1, then <computeroutput>M</computeroutput> is returned by <computeroutput>inverseCumulativeProbability(1).</computeroutput> If there is no such value, <computeroutput>M, Integer.MAX_VALUE</computeroutput> is returned.</para></listitem>
</itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the cumulative probability. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the largest x such that P(X <le/> x) &lt;= p </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the inverse cumulative probability can not be computed due to convergence or other numerical errors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if p is not between 0 and 1 (inclusive) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/IntegerDistribution.java" line="83" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Interface for discrete distributions of integer-valued random variables.</para><para><simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision:</title><para>617953 </para></simplesect>
<simplesect kind="rcs"><title>Date:</title><para>2008-02-02 22:54:00 -0700 (Sat, 02 Feb 2008) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="8487">
        <label>org.apache.commons.math.distribution.AbstractIntegerDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution"/>
        <childnode refid="8484" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8491">
        <label>org.apache.commons.math.distribution.PoissonDistributionImpl</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution_impl"/>
        <childnode refid="8487" relation="public-inheritance">
        </childnode>
        <childnode refid="8495" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8484">
        <label>org.apache.commons.math.distribution.IntegerDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution"/>
        <childnode refid="8485" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8490">
        <label>org.apache.commons.math.distribution.PascalDistributionImpl</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl"/>
        <childnode refid="8487" relation="public-inheritance">
        </childnode>
        <childnode refid="8494" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8492">
        <label>org.apache.commons.math.distribution.BinomialDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_binomial_distribution"/>
        <childnode refid="8484" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8495">
        <label>org.apache.commons.math.distribution.PoissonDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_poisson_distribution"/>
        <childnode refid="8484" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8486">
        <label>org.apache.commons.math.distribution.Distribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution"/>
      </node>
      <node id="8488">
        <label>org.apache.commons.math.distribution.BinomialDistributionImpl</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_binomial_distribution_impl"/>
        <childnode refid="8487" relation="public-inheritance">
        </childnode>
        <childnode refid="8492" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8489">
        <label>org.apache.commons.math.distribution.HypergeometricDistributionImpl</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution_impl"/>
        <childnode refid="8487" relation="public-inheritance">
        </childnode>
        <childnode refid="8493" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8493">
        <label>org.apache.commons.math.distribution.HypergeometricDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_hypergeometric_distribution"/>
        <childnode refid="8484" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8485">
        <label>org.apache.commons.math.distribution.DiscreteDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_discrete_distribution"/>
        <childnode refid="8486" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8494">
        <label>org.apache.commons.math.distribution.PascalDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution"/>
        <childnode refid="8484" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8496">
        <label>org.apache.commons.math.distribution.IntegerDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution"/>
        <childnode refid="8497" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8498">
        <label>org.apache.commons.math.distribution.Distribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution"/>
      </node>
      <node id="8497">
        <label>org.apache.commons.math.distribution.DiscreteDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_discrete_distribution"/>
        <childnode refid="8498" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/IntegerDistribution.java" line="26" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/IntegerDistribution.java" bodystart="26" bodyend="84"/>
    <listofallmembers>
      <member refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution_1ac11cf6252d18f1bd38d5284dfb519db9" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::IntegerDistribution</scope><name>cumulativeProbability</name></member>
      <member refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution_1a1bca6cae3ea19c6a95a9565e261ee497" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::IntegerDistribution</scope><name>cumulativeProbability</name></member>
      <member refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_1a72faeb4e48d8607d791fcb3fa9afb0e3" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::DiscreteDistribution."><scope>org::apache::commons::math::distribution::IntegerDistribution</scope><name>cumulativeProbability</name></member>
      <member refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution_1ad43685ba7ac5c6a72b4fd06a226347a9" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::DiscreteDistribution."><scope>org::apache::commons::math::distribution::IntegerDistribution</scope><name>cumulativeProbability</name></member>
      <member refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution_1a1f81723addd210b0a5b69aa29611938e" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::IntegerDistribution</scope><name>inverseCumulativeProbability</name></member>
      <member refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution_1ae20d4195b3f5ab562d332070c82c4cdd" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::IntegerDistribution</scope><name>probability</name></member>
      <member refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_discrete_distribution_1abb6337c9c8ae3b31728f20ad728590fe" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::DiscreteDistribution."><scope>org::apache::commons::math::distribution::IntegerDistribution</scope><name>probability</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
