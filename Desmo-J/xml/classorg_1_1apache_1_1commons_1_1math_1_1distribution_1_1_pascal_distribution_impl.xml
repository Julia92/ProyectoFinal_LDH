<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl" kind="class" prot="public">
    <compoundname>org::apache::commons::math::distribution::PascalDistributionImpl</compoundname>
    <basecompoundref refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution" prot="public" virt="non-virtual">org.apache.commons.math.distribution.AbstractIntegerDistribution</basecompoundref>
    <basecompoundref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution" prot="public" virt="non-virtual">org.apache.commons.math.distribution.PascalDistribution</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Serializable</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1ac782b82d011fded85882c3e6ee5804cd" prot="private" static="yes" mutable="no">
        <type>final long</type>
        <definition>final long org.apache.commons.math.distribution.PascalDistributionImpl.serialVersionUID</definition>
        <argsstring></argsstring>
        <name>serialVersionUID</name>
        <initializer>= 6751309484392813623L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serializable version identifier </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" line="34" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1ab8756bb937d919469b1e23aeb9615698" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int org.apache.commons.math.distribution.PascalDistributionImpl.numberOfSuccesses</definition>
        <argsstring></argsstring>
        <name>numberOfSuccesses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of successes </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" line="37" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a6f440946f0e95960531fff5733872178" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.PascalDistributionImpl.probabilityOfSuccess</definition>
        <argsstring></argsstring>
        <name>probabilityOfSuccess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The probability of success </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" line="40" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1ab1ea92c9eeee6ca70149bfb3d75c5442" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.math.distribution.PascalDistributionImpl.PascalDistributionImpl</definition>
        <argsstring>(int r, double p)</argsstring>
        <name>PascalDistributionImpl</name>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a binomial distribution with the given number of trials and probability of success. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of successes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the probability of success </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" line="48" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" bodystart="48" bodyend="52"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a40c50c7549d0e964956a5f707cb770bb" compoundref="_pascal_distribution_impl_8java" startline="76" endline="82">org.apache.commons.math.distribution.PascalDistributionImpl.setNumberOfSuccesses</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a801b1edca977cec8860b0ff8972d2642" compoundref="_pascal_distribution_impl_8java" startline="90" endline="96">org.apache.commons.math.distribution.PascalDistributionImpl.setProbabilityOfSuccess</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a2fc81d563d9013870e53c82fe50326e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.apache.commons.math.distribution.PascalDistributionImpl.getNumberOfSuccesses</definition>
        <argsstring>()</argsstring>
        <name>getNumberOfSuccesses</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_1a247122815a572bac9ef98f8d22a3b900">getNumberOfSuccesses</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the number of successes for this distribution. <simplesect kind="return"><para>the number of successes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" line="58" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a2c28f4ebcd604e3f8fa9740fa48bcd36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.PascalDistributionImpl.getProbabilityOfSuccess</definition>
        <argsstring>()</argsstring>
        <name>getProbabilityOfSuccess</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_1a872efb82e0180d690a178f8be6091a3e">getProbabilityOfSuccess</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the probability of success for this distribution. <simplesect kind="return"><para>the probability of success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" line="66" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a40c50c7549d0e964956a5f707cb770bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.math.distribution.PascalDistributionImpl.setNumberOfSuccesses</definition>
        <argsstring>(int successes)</argsstring>
        <name>setNumberOfSuccesses</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_1aaccbdfdffd89af0d6ea083fd2fca930a">setNumberOfSuccesses</reimplements>
        <param>
          <type>int</type>
          <declname>successes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the number of successes for this distribution. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>successes</parametername>
</parameternamelist>
<parameterdescription>
<para>the new number of successes </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>successes</computeroutput> is not positive. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" line="76" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" bodystart="76" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a801b1edca977cec8860b0ff8972d2642" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.math.distribution.PascalDistributionImpl.setProbabilityOfSuccess</definition>
        <argsstring>(double p)</argsstring>
        <name>setProbabilityOfSuccess</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_1adacfaf4f8956e62110aa9695b03f9619">setProbabilityOfSuccess</reimplements>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the probability of success for this distribution. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the new probability of success </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>p</computeroutput> is not a valid probability. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" line="90" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" bodystart="90" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a810842075bcbce5ae8a836c6df85fbb7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.PascalDistributionImpl.cumulativeProbability</definition>
        <argsstring>(int x)</argsstring>
        <name>cumulativeProbability</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1af64ac51473a3452bf6c2d4cc95b470c6">cumulativeProbability</reimplements>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For this distribution, X, this method returns P(X <le/> x). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value at which the PDF is evaluated </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>PDF for this distribution </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the cumulative probability can not be computed due to convergence or other numerical errors </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" line="128" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" bodystart="128" bodyend="137"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a2c28f4ebcd604e3f8fa9740fa48bcd36" compoundref="_pascal_distribution_impl_8java" startline="66" endline="68">org.apache.commons.math.distribution.PascalDistributionImpl.getProbabilityOfSuccess</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a2fc81d563d9013870e53c82fe50326e1" compoundref="_pascal_distribution_impl_8java" startline="58" endline="60">org.apache.commons.math.distribution.PascalDistributionImpl.getNumberOfSuccesses</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a5b51f3c737cd1c4adaf08e4b637d4fdd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.distribution.PascalDistributionImpl.probability</definition>
        <argsstring>(int x)</argsstring>
        <name>probability</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution_1ae20d4195b3f5ab562d332070c82c4cdd">probability</reimplements>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For this distribution, X, this method returns P(X = x). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value at which the PMF is evaluated </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>PMF for this distribution </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" line="144" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" bodystart="144" bodyend="155"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a2fc81d563d9013870e53c82fe50326e1" compoundref="_pascal_distribution_impl_8java" startline="58" endline="60">org.apache.commons.math.distribution.PascalDistributionImpl.getNumberOfSuccesses</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a2c28f4ebcd604e3f8fa9740fa48bcd36" compoundref="_pascal_distribution_impl_8java" startline="66" endline="68">org.apache.commons.math.distribution.PascalDistributionImpl.getProbabilityOfSuccess</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a4092f5c18452aeafb5b8d75d0011a0b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.apache.commons.math.distribution.PascalDistributionImpl.inverseCumulativeProbability</definition>
        <argsstring>(final double p)</argsstring>
        <name>inverseCumulativeProbability</name>
        <param>
          <type>final double</type>
          <declname>p</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For this distribution, X, this method returns the largest x, such that P(X <le/> x) <le/> <computeroutput>p</computeroutput>. </para><para>Returns <computeroutput>-1</computeroutput> for p=0 and <computeroutput>Integer.MAX_VALUE</computeroutput> for p=1.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired probability </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the largest x such that P(X <le/> x) &lt;= p </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception" kindref="compound">MathException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the inverse cumulative probability can not be computed due to convergence or other numerical errors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if p &lt; 0 or p &gt; 1 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" line="169" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" bodystart="169" bodyend="183"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a29a18919e9984dcbf0d6f8bc5dbae35d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int org.apache.commons.math.distribution.PascalDistributionImpl.getDomainLowerBound</definition>
        <argsstring>(double p)</argsstring>
        <name>getDomainLowerBound</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1a9e292c6a847a50d2bff94d8b6f4571a3">getDomainLowerBound</reimplements>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the domain value lower bound, based on <computeroutput>p</computeroutput>, used to bracket a PDF root. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired probability for the critical value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>domain value lower bound, i.e. P(X &lt; <emphasis>lower bound</emphasis>) &lt; <computeroutput>p</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" line="105" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1adf5991b5bad8ef4306683e2465c1450a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int org.apache.commons.math.distribution.PascalDistributionImpl.getDomainUpperBound</definition>
        <argsstring>(double p)</argsstring>
        <name>getDomainUpperBound</name>
        <reimplements refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1a916035a8a060fc4b055f7fadafa3a383">getDomainUpperBound</reimplements>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the domain value upper bound, based on <computeroutput>p</computeroutput>, used to bracket a PDF root. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired probability for the critical value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>domain value upper bound, i.e. P(X &lt; <emphasis>upper bound</emphasis>) &gt; <computeroutput>p</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" line="116" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" bodystart="116" bodyend="119"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The default implementation of <ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution" kindref="compound">PascalDistribution</ref>. <simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision:</title><para>617953 </para></simplesect>
<simplesect kind="rcs"><title>Date:</title><para>2008-02-02 22:54:00 -0700 (Sat, 02 Feb 2008) </para></simplesect>
<simplesect kind="since"><para>1.2 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="9406">
        <label>org.apache.commons.math.distribution.AbstractIntegerDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution"/>
        <childnode refid="9407" relation="public-inheritance">
        </childnode>
        <childnode refid="9410" relation="public-inheritance">
        </childnode>
        <childnode refid="9409" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9410">
        <label>org.apache.commons.math.distribution.IntegerDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution"/>
        <childnode refid="9411" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9409">
        <label>Serializable</label>
      </node>
      <node id="9405">
        <label>org.apache.commons.math.distribution.PascalDistributionImpl</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl"/>
        <childnode refid="9406" relation="public-inheritance">
        </childnode>
        <childnode refid="9412" relation="public-inheritance">
        </childnode>
        <childnode refid="9409" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9407">
        <label>org.apache.commons.math.distribution.AbstractDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_distribution"/>
        <childnode refid="9408" relation="public-inheritance">
        </childnode>
        <childnode refid="9409" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9408">
        <label>org.apache.commons.math.distribution.Distribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution"/>
      </node>
      <node id="9411">
        <label>org.apache.commons.math.distribution.DiscreteDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_discrete_distribution"/>
        <childnode refid="9408" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9412">
        <label>org.apache.commons.math.distribution.PascalDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution"/>
        <childnode refid="9410" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9414">
        <label>org.apache.commons.math.distribution.AbstractIntegerDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution"/>
        <childnode refid="9415" relation="public-inheritance">
        </childnode>
        <childnode refid="9418" relation="public-inheritance">
        </childnode>
        <childnode refid="9417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9418">
        <label>org.apache.commons.math.distribution.IntegerDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution"/>
        <childnode refid="9419" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9417">
        <label>Serializable</label>
      </node>
      <node id="9413">
        <label>org.apache.commons.math.distribution.PascalDistributionImpl</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl"/>
        <childnode refid="9414" relation="public-inheritance">
        </childnode>
        <childnode refid="9420" relation="public-inheritance">
        </childnode>
        <childnode refid="9417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9415">
        <label>org.apache.commons.math.distribution.AbstractDistribution</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_distribution"/>
        <childnode refid="9416" relation="public-inheritance">
        </childnode>
        <childnode refid="9417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9416">
        <label>org.apache.commons.math.distribution.Distribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_distribution"/>
      </node>
      <node id="9419">
        <label>org.apache.commons.math.distribution.DiscreteDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_discrete_distribution"/>
        <childnode refid="9416" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9420">
        <label>org.apache.commons.math.distribution.PascalDistribution</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution"/>
        <childnode refid="9418" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" line="31" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/distribution/PascalDistributionImpl.java" bodystart="30" bodyend="184"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_distribution_1a69b03d7cd00b00c946eea69dfa8da7ba" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::distribution::PascalDistributionImpl</scope><name>AbstractDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1a5319f9938a77a957c740bd552a2ce2ba" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::distribution::PascalDistributionImpl</scope><name>AbstractIntegerDistribution</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a810842075bcbce5ae8a836c6df85fbb7" prot="public" virt="virtual"><scope>org::apache::commons::math::distribution::PascalDistributionImpl</scope><name>cumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1ab1cf216fde5141e5cc5a448bf387a8a1" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::AbstractIntegerDistribution."><scope>org::apache::commons::math::distribution::PascalDistributionImpl</scope><name>cumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1a5a311468d6c2ba4d51710302f716afef" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::AbstractIntegerDistribution."><scope>org::apache::commons::math::distribution::PascalDistributionImpl</scope><name>cumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1a8bae6edc0a95af6afaa6a09f6c0944ce" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::AbstractIntegerDistribution."><scope>org::apache::commons::math::distribution::PascalDistributionImpl</scope><name>cumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a29a18919e9984dcbf0d6f8bc5dbae35d" prot="protected" virt="virtual"><scope>org::apache::commons::math::distribution::PascalDistributionImpl</scope><name>getDomainLowerBound</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1adf5991b5bad8ef4306683e2465c1450a" prot="protected" virt="virtual"><scope>org::apache::commons::math::distribution::PascalDistributionImpl</scope><name>getDomainUpperBound</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a2fc81d563d9013870e53c82fe50326e1" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::PascalDistributionImpl</scope><name>getNumberOfSuccesses</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a2c28f4ebcd604e3f8fa9740fa48bcd36" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::PascalDistributionImpl</scope><name>getProbabilityOfSuccess</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a4092f5c18452aeafb5b8d75d0011a0b2" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::PascalDistributionImpl</scope><name>inverseCumulativeProbability</name></member>
      <member refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_integer_distribution_1a1f81723addd210b0a5b69aa29611938e" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::IntegerDistribution."><scope>org::apache::commons::math::distribution::PascalDistributionImpl</scope><name>inverseCumulativeProbability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1ab8756bb937d919469b1e23aeb9615698" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::PascalDistributionImpl</scope><name>numberOfSuccesses</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1ab1ea92c9eeee6ca70149bfb3d75c5442" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::PascalDistributionImpl</scope><name>PascalDistributionImpl</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a5b51f3c737cd1c4adaf08e4b637d4fdd" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::PascalDistributionImpl</scope><name>probability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_abstract_integer_distribution_1a3535594dbf1de8fe562aa1a55ac6ae83" prot="public" virt="non-virtual" ambiguityscope="org::apache::commons::math::distribution::AbstractIntegerDistribution."><scope>org::apache::commons::math::distribution::PascalDistributionImpl</scope><name>probability</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a6f440946f0e95960531fff5733872178" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::PascalDistributionImpl</scope><name>probabilityOfSuccess</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1ac782b82d011fded85882c3e6ee5804cd" prot="private" virt="non-virtual"><scope>org::apache::commons::math::distribution::PascalDistributionImpl</scope><name>serialVersionUID</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a40c50c7549d0e964956a5f707cb770bb" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::PascalDistributionImpl</scope><name>setNumberOfSuccesses</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1distribution_1_1_pascal_distribution_impl_1a801b1edca977cec8860b0ff8972d2642" prot="public" virt="non-virtual"><scope>org::apache::commons::math::distribution::PascalDistributionImpl</scope><name>setProbabilityOfSuccess</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
