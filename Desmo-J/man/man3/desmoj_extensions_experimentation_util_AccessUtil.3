.TH "desmoj.extensions.experimentation.util.AccessUtil" 3 "Wed Dec 4 2013" "Version 1.0" "Desmo-J" \" -*- nroff -*-
.ad l
.nh
.SH NAME
desmoj.extensions.experimentation.util.AccessUtil \- 
.SH SYNOPSIS
.br
.PP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBput\fP (Map accessPoints, \fBAccessPoint\fP apt)"
.br
.ti -1c
.RI "static Object \fBgetValue\fP (String name, Map accessPoints)"
.br
.ti -1c
.RI "static String \fBgetStringValue\fP (String name, Map accessPoints)"
.br
.ti -1c
.RI "static TimeUnit \fBgetTimeUnitValue\fP (String name, Map accessPoints)"
.br
.ti -1c
.RI "static boolean \fBgetBooleanValue\fP (String name, Map accessPoints)"
.br
.ti -1c
.RI "static int \fBgetIntValue\fP (String name, Map accessPoints)"
.br
.ti -1c
.RI "static double \fBgetDoubleValue\fP (String name, Map accessPoints)"
.br
.ti -1c
.RI "static String[] \fBgetAccessPointNames\fP (Map accessPoints)"
.br
.ti -1c
.RI "static int \fBgetIndexof\fP (String searchedName, Map accessPoints)"
.br
.ti -1c
.RI "static Object[] \fBgetAccessPointValues\fP (Map accessPoints)"
.br
.ti -1c
.RI "static \fBAccessPoint\fP[] \fBgetAccessPoints\fP (Map accessPoints)"
.br
.ti -1c
.RI "static boolean \fBcontains\fP (String name, Map accessPoints)"
.br
.ti -1c
.RI "static boolean \fBisMutable\fP (String name, Map accessPoints)"
.br
.ti -1c
.RI "static boolean \fBsetValue\fP (Map accessPoints, String accName, Object value)"
.br
.ti -1c
.RI "static void \fBinit\fP (Map accessPoints, Map m)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Utility class for working with access points\&.
.PP
\fBAuthor:\fP
.RS 4
Nicolas Knaak 
.RE
.PP
\fBVersion:\fP
.RS 4
DESMO-J, Ver\&. 2\&.4\&.0 copyright (c) 2013
.RE
.PP
Licensed under the Apache License, Version 2\&.0 (the 'License'); you may not use this file except in compliance with the License\&. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
.PP
Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied\&. See the License for the specific language governing permissions and limitations under the License\&. 
.SH "Member Function Documentation"
.PP 
.SS "static boolean desmoj\&.extensions\&.experimentation\&.util\&.AccessUtil\&.contains (Stringname, MapaccessPoints)\fC [static]\fP"
tests if this map contains an access point with the given name\&.
.PP
\fBParameters:\fP
.RS 4
\fIname\fP an access point's name 
.br
\fImap\fP a map containing access points 
.RE
.PP
\fBReturns:\fP
.RS 4
true iff the map contains an access point with the given name 
.RE
.PP

.SS "static String [] desmoj\&.extensions\&.experimentation\&.util\&.AccessUtil\&.getAccessPointNames (MapaccessPoints)\fC [static]\fP"

.PP
\fBReturns:\fP
.RS 4
an array of all contained access point's names\&. 
.RE
.PP

.SS "static \fBAccessPoint\fP [] desmoj\&.extensions\&.experimentation\&.util\&.AccessUtil\&.getAccessPoints (MapaccessPoints)\fC [static]\fP"

.PP
\fBReturns:\fP
.RS 4
the access points as an array\&. 
.RE
.PP

.SS "static Object [] desmoj\&.extensions\&.experimentation\&.util\&.AccessUtil\&.getAccessPointValues (MapaccessPoints)\fC [static]\fP"

.PP
\fBReturns:\fP
.RS 4
an object array of all access points' current values\&. 
.RE
.PP

.SS "static boolean desmoj\&.extensions\&.experimentation\&.util\&.AccessUtil\&.getBooleanValue (Stringname, MapaccessPoints)\fC [static]\fP"
Convenience method to retrieve the boolean value of an access point with a given name from the map\&. 
.PP
\fBParameters:\fP
.RS 4
\fIname\fP name of an access point 
.br
\fIaccessPoints\fP map containing <String,AccessPoint> pairs\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
current boolean value of the access point 
.RE
.PP

.SS "static double desmoj\&.extensions\&.experimentation\&.util\&.AccessUtil\&.getDoubleValue (Stringname, MapaccessPoints)\fC [static]\fP"
Convenience method to retrieve the double value of an access point with a given name from the map\&. 
.PP
\fBParameters:\fP
.RS 4
\fIname\fP name of an access point 
.br
\fIaccessPoints\fP map containing <String,AccessPoint> pairs\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
current double value of the access point 
.RE
.PP

.SS "static int desmoj\&.extensions\&.experimentation\&.util\&.AccessUtil\&.getIndexof (StringsearchedName, MapaccessPoints)\fC [static]\fP"

.PP
\fBParameters:\fP
.RS 4
\fIsearchedName\fP an access point name\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
the internal index of a given access point name\&. If the access point does not exist -1 is returned 
.RE
.PP

.SS "static int desmoj\&.extensions\&.experimentation\&.util\&.AccessUtil\&.getIntValue (Stringname, MapaccessPoints)\fC [static]\fP"
Convenience method to retrieve the int value of an access point with a given name from the map\&. 
.PP
\fBParameters:\fP
.RS 4
\fIname\fP name of an access point 
.br
\fIaccessPoints\fP map containing <String,AccessPoint> pairs\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
current int value of the access point 
.RE
.PP

.SS "static String desmoj\&.extensions\&.experimentation\&.util\&.AccessUtil\&.getStringValue (Stringname, MapaccessPoints)\fC [static]\fP"
Convenience method to retrieve the String value of an access point with a given name from the map\&. 
.PP
\fBParameters:\fP
.RS 4
\fIname\fP name of an access point 
.br
\fIaccessPoints\fP map containing <String,AccessPoint> pairs\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
current string value of the access point 
.RE
.PP

.SS "static TimeUnit desmoj\&.extensions\&.experimentation\&.util\&.AccessUtil\&.getTimeUnitValue (Stringname, MapaccessPoints)\fC [static]\fP"
Convenience method to retrieve the TimeUnit value of an access point with a given name from the map\&. 
.PP
\fBParameters:\fP
.RS 4
\fIname\fP name of an access point 
.br
\fIaccessPoints\fP map containing <String,AccessPoint> pairs\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
current string value of the access point 
.RE
.PP

.SS "static Object desmoj\&.extensions\&.experimentation\&.util\&.AccessUtil\&.getValue (Stringname, MapaccessPoints)\fC [static]\fP"
Retrieves the value of an access point with a given name from the map\&. 
.PP
\fBParameters:\fP
.RS 4
\fIname\fP name of an access point 
.br
\fIaccessPoints\fP map containing <String,AccessPoint> pairs\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
current value of the access point 
.RE
.PP

.SS "static void desmoj\&.extensions\&.experimentation\&.util\&.AccessUtil\&.init (MapaccessPoints, Mapm)\fC [static]\fP"
Inits the values of all access points in the given map from a map of values\&. This map must contain key/value pairs where the key is a string corresponding to an access point's name and the value is an object fitting the accessed attributes type\&.
.PP
\fBParameters:\fP
.RS 4
\fIaccessPoints\fP a map containing access points 
.br
\fIm\fP a java\&.util\&.Map to initialize the given map of access points from\&. 
.RE
.PP

.SS "static boolean desmoj\&.extensions\&.experimentation\&.util\&.AccessUtil\&.isMutable (Stringname, MapaccessPoints)\fC [static]\fP"
tests if the access point with the given name is mutable\&.
.PP
\fBParameters:\fP
.RS 4
\fIname\fP an access point's name 
.br
\fIaccessPoints\fP a map containing access points 
.RE
.PP
\fBReturns:\fP
.RS 4
true iff the access point with the given name is a MutableAccessPoint 
.RE
.PP

.SS "static void desmoj\&.extensions\&.experimentation\&.util\&.AccessUtil\&.put (MapaccessPoints, \fBAccessPoint\fPapt)\fC [static]\fP"
Put an access point into the given map\&. The access point will be the value and the access point's name will be the key\&. 
.PP
\fBParameters:\fP
.RS 4
\fIaccessPoints\fP a map containing <String, AccessPoint> pairs\&. 
.br
\fIapt\fP an access point to be added to the map\&. 
.RE
.PP

.SS "static boolean desmoj\&.extensions\&.experimentation\&.util\&.AccessUtil\&.setValue (MapaccessPoints, StringaccName, Objectvalue)\fC [static]\fP"
sets the specified access point to the given value\&. Returns true if this was successful (i\&.e\&. if the access point is mutable) or false otherwise\&.
.PP
\fBParameters:\fP
.RS 4
\fIaccName\fP the name of the access point to change 
.br
\fIvalue\fP the value to set the accessed attribute to\&. 
.br
\fIaccessPoints\fP a map containing access points 
.RE
.PP
\fBReturns:\fP
.RS 4
status of 'set' operation 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Desmo-J from the source code\&.
