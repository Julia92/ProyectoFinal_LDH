<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form" kind="class" prot="public">
    <compoundname>org::apache::commons::math::analysis::PolynomialFunctionLagrangeForm</compoundname>
    <basecompoundref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function" prot="public" virt="non-virtual">org.apache.commons.math.analysis.UnivariateRealFunction</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Serializable</basecompoundref>
      <sectiondef kind="package-static-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a0d2535dfc6c9d1137d898bc1e9254460" prot="package" static="yes" mutable="no">
        <type>final long</type>
        <definition>final long org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.serialVersionUID</definition>
        <argsstring></argsstring>
        <name>serialVersionUID</name>
        <initializer>= -3965199246151093920L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>serializable version identifier </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" line="40" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a5da0e3f4dc55774618287ed335ae9311" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.coefficients[]</definition>
        <argsstring>[]</argsstring>
        <name>coefficients</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The coefficients of the polynomial, ordered by degree <ndash/> i.e. coefficients[0] is the constant term and coefficients[n] is the coefficient of x^n where n is the degree of the polynomial. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" line="47" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a44fec2dad1c199e4fccdc21d2f1dd70b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.x[]</definition>
        <argsstring>[]</argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Interpolating points (abscissas) and the function values at these points. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" line="52" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a523064cce34c66797c8e552be1d7aff9" prot="private" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.coefficientsComputed</definition>
        <argsstring></argsstring>
        <name>coefficientsComputed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether the polynomial coefficients are available. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" line="57" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-attrib">
      <memberdef kind="variable" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1abe1bdcf2c32a7c647b890512b6b1e358" prot="package" static="no" mutable="no">
        <type>double</type>
        <definition>double org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.y[]</definition>
        <argsstring>[]</argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" line="52" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1adc1927c69341581b9bcbf04d1afc60ee" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.PolynomialFunctionLagrangeForm</definition>
        <argsstring>(double x[], double y[])</argsstring>
        <name>PolynomialFunctionLagrangeForm</name>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
          <array>[]</array>
        </param>
        <exceptions> throws IllegalArgumentException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a Lagrange polynomial with the given abscissas and function values. The order of interpolating points are not important. </para><para>The constructor makes copy of the input arrays and assigns them.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>interpolating points </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>function values at interpolating points </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if input arrays are not valid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" line="69" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" bodystart="69" bodyend="78"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a7c1752d420d504a0ad5508ab750a87fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value</definition>
        <argsstring>(double z)</argsstring>
        <name>value</name>
        <reimplements refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function_1a0e7a98f515a5fecfb77a21244e70b919">value</reimplements>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref> </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the function value at the given point.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the point at which the function value is to be computed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the function value </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_function_evaluation_exception" kindref="compound">FunctionEvaluationException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if a runtime error occurs </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function_1a0e7a98f515a5fecfb77a21244e70b919" kindref="member">UnivariateRealFunction::value(double)</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" line="88" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" bodystart="88" bodyend="94"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a297e9b1b27c8f33b96fe5cfc64a64893" compoundref="_polynomial_function_lagrange_form_8java" startline="162" endline="213">org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.evaluate</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1_math_exception_1ab6959c6786a7152e04df1cb605e67d9f" compoundref="_math_exception_8java" startline="210" endline="212">org.apache.commons.math.MathException.getPattern</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a14870615d3fc4fdddf0504e65f238d71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.degree</definition>
        <argsstring>()</argsstring>
        <name>degree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the degree of the polynomial.</para><para><simplesect kind="return"><para>the degree of the polynomial </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" line="101" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a8a0ed8338e11f0e881daa3a4e80eb3ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double[]</type>
        <definition>double [] org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getInterpolatingPoints</definition>
        <argsstring>()</argsstring>
        <name>getInterpolatingPoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a copy of the interpolating points array. </para><para>Changes made to the returned copy will not affect the polynomial.</para><para><simplesect kind="return"><para>a fresh copy of the interpolating points array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" line="112" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" bodystart="112" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a7b4b91f16963f7015b2ae95878ab563d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double[]</type>
        <definition>double [] org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getInterpolatingValues</definition>
        <argsstring>()</argsstring>
        <name>getInterpolatingValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a copy of the interpolating values array. </para><para>Changes made to the returned copy will not affect the polynomial.</para><para><simplesect kind="return"><para>a fresh copy of the interpolating values array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" line="125" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" bodystart="125" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a408aad5131f70f2475e4ecc68b84eb98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double[]</type>
        <definition>double [] org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getCoefficients</definition>
        <argsstring>()</argsstring>
        <name>getCoefficients</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a copy of the coefficients array. </para><para>Changes made to the returned copy will not affect the polynomial.</para><para><simplesect kind="return"><para>a fresh copy of the coefficients array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" line="138" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" bodystart="138" bodyend="145"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a2e01866e3fd08a16997c64699506b1e6" compoundref="_polynomial_function_lagrange_form_8java" startline="224" endline="272">org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.computeCoefficients</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a297e9b1b27c8f33b96fe5cfc64a64893" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.evaluate</definition>
        <argsstring>(double x[], double y[], double z)</argsstring>
        <name>evaluate</name>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <exceptions> throws <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_duplicate_sample_abscissa_exception" kindref="compound">DuplicateSampleAbscissaException</ref>, IllegalArgumentException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate the Lagrange polynomial using <ulink url="http://mathworld.wolfram.com/NevillesAlgorithm.html">Neville&apos;s Algorithm</ulink>. It takes O(N^2) time. </para><para>This function is made public static so that users can call it directly without instantiating <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form" kindref="compound">PolynomialFunctionLagrangeForm</ref> object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the interpolating points array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the interpolating values array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>the point at which the function value is to be computed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the function value </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1_duplicate_sample_abscissa_exception" kindref="compound">DuplicateSampleAbscissaException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the sample has duplicate abscissas </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if inputs are not valid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" line="162" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" bodystart="162" bodyend="213"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a7c1752d420d504a0ad5508ab750a87fe" compoundref="_polynomial_function_lagrange_form_8java" startline="88" endline="94">org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value</references>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a9acdf21212ea1142c7ca07b0ffa3720a" compoundref="_polynomial_function_lagrange_form_8java" startline="286" endline="297">org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.verifyInterpolationArray</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a2e01866e3fd08a16997c64699506b1e6" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.computeCoefficients</definition>
        <argsstring>()</argsstring>
        <name>computeCoefficients</name>
        <exceptions> throws ArithmeticException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the coefficients of Lagrange polynomial from the interpolation data. It takes O(N^2) time. </para><para>Note this computation can be ill-conditioned. Use with caution and only when it is necessary.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArithmeticException</parametername>
</parameternamelist>
<parameterdescription>
<para>if any abscissas coincide </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" line="224" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" bodystart="224" bodyend="272"/>
        <references refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a14870615d3fc4fdddf0504e65f238d71" compoundref="_polynomial_function_lagrange_form_8java" startline="101" endline="103">org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.degree</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a9acdf21212ea1142c7ca07b0ffa3720a" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.verifyInterpolationArray</definition>
        <argsstring>(double x[], double y[])</argsstring>
        <name>verifyInterpolationArray</name>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
          <array>[]</array>
        </param>
        <exceptions> throws IllegalArgumentException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Verifies that the interpolation arrays are valid. </para><para>The interpolating points must be distinct. However it is not verified here, it is checked in <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a297e9b1b27c8f33b96fe5cfc64a64893" kindref="member">evaluate()</ref> and <ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a2e01866e3fd08a16997c64699506b1e6" kindref="member">computeCoefficients()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the interpolating points array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the interpolating values array </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IllegalArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>if not valid </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a297e9b1b27c8f33b96fe5cfc64a64893" kindref="member">evaluate(double[], double[], double)</ref> </para><simplesectsep/><para><ref refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a2e01866e3fd08a16997c64699506b1e6" kindref="member">computeCoefficients()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" line="286" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" bodystart="286" bodyend="297"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Implements the representation of a real polynomial function in <ulink url="http://mathworld.wolfram.com/LagrangeInterpolatingPolynomial.html">Lagrange Form</ulink>. For reference, see <bold>Introduction to Numerical Analysis</bold>, ISBN 038795452X, chapter 2. </para><para>The approximated function should be smooth enough for Lagrange polynomial to work well. Otherwise, consider using splines instead.</para><para><simplesect kind="version"><para></para></simplesect>
<simplesect kind="rcs"><title>Revision:</title><para>620312 </para></simplesect>
<simplesect kind="rcs"><title>Date:</title><para>2008-02-10 12:28:59 -0700 (Sun, 10 Feb 2008) </para></simplesect>
<simplesect kind="since"><para>1.2 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="9465">
        <label>org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form"/>
        <childnode refid="9466" relation="public-inheritance">
        </childnode>
        <childnode refid="9467" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9467">
        <label>Serializable</label>
      </node>
      <node id="9466">
        <label>org.apache.commons.math.analysis.UnivariateRealFunction</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9468">
        <label>org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm</label>
        <link refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form"/>
        <childnode refid="9469" relation="public-inheritance">
        </childnode>
        <childnode refid="9470" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9470">
        <label>Serializable</label>
      </node>
      <node id="9469">
        <label>org.apache.commons.math.analysis.UnivariateRealFunction</label>
        <link refid="interfaceorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_univariate_real_function"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" line="37" column="1" bodyfile="C:/Users/JulyaMaria/Desktop/Desmo-J/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java" bodystart="36" bodyend="298"/>
    <listofallmembers>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a5da0e3f4dc55774618287ed335ae9311" prot="private" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionLagrangeForm</scope><name>coefficients</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a523064cce34c66797c8e552be1d7aff9" prot="private" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionLagrangeForm</scope><name>coefficientsComputed</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a2e01866e3fd08a16997c64699506b1e6" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionLagrangeForm</scope><name>computeCoefficients</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a14870615d3fc4fdddf0504e65f238d71" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionLagrangeForm</scope><name>degree</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a297e9b1b27c8f33b96fe5cfc64a64893" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionLagrangeForm</scope><name>evaluate</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a408aad5131f70f2475e4ecc68b84eb98" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionLagrangeForm</scope><name>getCoefficients</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a8a0ed8338e11f0e881daa3a4e80eb3ee" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionLagrangeForm</scope><name>getInterpolatingPoints</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a7b4b91f16963f7015b2ae95878ab563d" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionLagrangeForm</scope><name>getInterpolatingValues</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1adc1927c69341581b9bcbf04d1afc60ee" prot="package" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionLagrangeForm</scope><name>PolynomialFunctionLagrangeForm</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a0d2535dfc6c9d1137d898bc1e9254460" prot="package" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionLagrangeForm</scope><name>serialVersionUID</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a7c1752d420d504a0ad5508ab750a87fe" prot="public" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionLagrangeForm</scope><name>value</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a9acdf21212ea1142c7ca07b0ffa3720a" prot="protected" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionLagrangeForm</scope><name>verifyInterpolationArray</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1a44fec2dad1c199e4fccdc21d2f1dd70b" prot="private" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionLagrangeForm</scope><name>x</name></member>
      <member refid="classorg_1_1apache_1_1commons_1_1math_1_1analysis_1_1_polynomial_function_lagrange_form_1abe1bdcf2c32a7c647b890512b6b1e358" prot="package" virt="non-virtual"><scope>org::apache::commons::math::analysis::PolynomialFunctionLagrangeForm</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
